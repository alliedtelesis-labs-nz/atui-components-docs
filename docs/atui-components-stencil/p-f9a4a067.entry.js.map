{"version":3,"names":["AtuiCheckboxHeaderComponent","init","params","this","width","setDisabled","nodes","api","getRenderedNodes","filter","Boolean","checkedNodes","rowNode","data","column","colId","isChecked","length","getGui","el","refresh","setRowsValue","checked","undefined","forEach","setDataValue","_a","renderedNodes","map","node","getDisabled","disabled","render","h","key","value","onAtuiChange","event","detail"],"sources":["src/components/table-components/header-components/atui-checkbox-header/atui-checkbox-header.tsx"],"sourcesContent":["import { Component, h, State, Element } from '@stencil/core';\nimport { ICellRendererComp, RowNode } from 'ag-grid-community';\n\n/**\n * @category Table Cell\n * @description A header component for displaying a checkbox.\n */\n\n@Component({\n    tag: 'atui-checkbox-header',\n    shadow: false,\n})\nexport class AtuiCheckboxHeaderComponent implements ICellRendererComp {\n    @State() params;\n    @State() disabled: boolean;\n    @State() isChecked: boolean;\n    @Element() el: HTMLAtuiCheckboxHeaderElement;\n\n    init(params) {\n        this.params = params;\n        this.params.width = 60;\n        this.setDisabled();\n\n        const nodes = this.params.api.getRenderedNodes().filter(Boolean);\n        const checkedNodes = nodes.filter((rowNode: RowNode) => {\n            return typeof rowNode.data === 'boolean'\n                ? rowNode.data\n                : rowNode.data[this.params.column.colId];\n        });\n        this.isChecked = nodes.length && nodes.length === checkedNodes.length;\n    }\n\n    getGui(): HTMLAtuiCheckboxHeaderElement {\n        return this.el;\n    }\n\n    refresh(params): boolean {\n        this.params = params;\n        this.setDisabled();\n        return true;\n    }\n\n    setRowsValue(checked: boolean): void {\n        if (checked !== undefined) {\n            const nodes = this.params.api.getRenderedNodes().filter(Boolean);\n            nodes.forEach((rowNode: RowNode) => {\n                rowNode.setDataValue(this.params.column.colId, checked);\n            });\n        }\n    }\n\n    private setDisabled(): void {\n        if (!this.params?.api) return;\n\n        const renderedNodes = this.params.api.getRenderedNodes();\n        const data: any[] = renderedNodes.map((node) => node.data);\n        if (this.params.getDisabled !== undefined) {\n            this.disabled = this.params.getDisabled(data);\n        }\n    }\n\n    render() {\n        return (\n            <atui-checkbox\n                disabled={this.disabled}\n                value={this.isChecked}\n                onAtuiChange={(event: CustomEvent) =>\n                    this.setRowsValue(event.detail)\n                }\n            ></atui-checkbox>\n        );\n    }\n}\n"],"mappings":"wDAYaA,EAA2B,M,yBAMpC,IAAAC,CAAKC,GACDC,KAAKD,OAASA,EACdC,KAAKD,OAAOE,MAAQ,GACpBD,KAAKE,cAEL,MAAMC,EAAQH,KAAKD,OAAOK,IAAIC,mBAAmBC,OAAOC,SACxD,MAAMC,EAAeL,EAAMG,QAAQG,UACjBA,EAAQC,OAAS,UACzBD,EAAQC,KACRD,EAAQC,KAAKV,KAAKD,OAAOY,OAAOC,SAE1CZ,KAAKa,UAAYV,EAAMW,QAAUX,EAAMW,SAAWN,EAAaM,M,CAGnE,MAAAC,GACI,OAAOf,KAAKgB,E,CAGhB,OAAAC,CAAQlB,GACJC,KAAKD,OAASA,EACdC,KAAKE,cACL,OAAO,I,CAGX,YAAAgB,CAAaC,GACT,GAAIA,IAAYC,UAAW,CACvB,MAAMjB,EAAQH,KAAKD,OAAOK,IAAIC,mBAAmBC,OAAOC,SACxDJ,EAAMkB,SAASZ,IACXA,EAAQa,aAAatB,KAAKD,OAAOY,OAAOC,MAAOO,EAAQ,G,EAK3D,WAAAjB,G,MACJ,MAAKqB,EAAAvB,KAAKD,UAAM,MAAAwB,SAAA,SAAAA,EAAEnB,KAAK,OAEvB,MAAMoB,EAAgBxB,KAAKD,OAAOK,IAAIC,mBACtC,MAAMK,EAAcc,EAAcC,KAAKC,GAASA,EAAKhB,OACrD,GAAIV,KAAKD,OAAO4B,cAAgBP,UAAW,CACvCpB,KAAK4B,SAAW5B,KAAKD,OAAO4B,YAAYjB,E,EAIhD,MAAAmB,GACI,OACIC,EAAA,iBAAAC,IAAA,2CACIH,SAAU5B,KAAK4B,SACfI,MAAOhC,KAAKa,UACZoB,aAAeC,GACXlC,KAAKkB,aAAagB,EAAMC,S","ignoreList":[]}