{"version":3,"names":["variants","cva","open","true","false","AtuiMenu","constructor","hostRef","this","offset_x","offset_y","position","align","width","autoclose","trigger","role","disabled","isOpen","isIntersectingViewport","updatePosition","requestAnimationFrame","triggerEl","triggerPosition","getBoundingClientRect","handleOutsideClick","event","el","contains","target","mouseLeaveHandler","toggleMenu","menuStateChange","emit","openMenu","closeMenu","getIsOpen","componentDidLoad","window","addEventListener","initIntersectionObserver","disconnectedCallback","removeEventListener","observer","disconnect","options","root","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","isIntersecting","positionStrategy","menuElement","querySelector","observe","viewportWidth","innerWidth","viewportHeight","innerHeight","top","right","left","height","boundingClientRect","mouseEnterHandler","timedOutCloser","clearTimeout","setTimeout","positionStyle","style","triggerRect","_a","menuRect","_b","menuEl","bottom","render","classname","h","Host","key","class","onBlur","ref","onMouseEnter","onKeyDown","async","onMouseLeave","onClick","name"],"sources":["src/components/atui-menu/atui-menu.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    State,\n    Element,\n    Method,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\n/**\n * @category Actions\n * @description A versatile menu component for actions with keyboard support and positioning. Features auto-open behavior, customizable triggers, and accessible menu item management.\n */\n\nexport type Position = 'top' | 'bottom' | 'left' | 'right';\nexport type Align = 'start' | 'end';\nexport type OpenOn = 'hover' | 'click';\nexport type AriaRole = 'menu' | 'listbox';\n\nconst variants = cva(\n    'fixed z-menu w-full rounded-md border border-solid border-light bg-white p-4 shadow-md',\n    {\n        variants: {\n            open: {\n                true: null,\n                false: 'hidden',\n            },\n        },\n    },\n);\n\n@Component({\n    tag: 'atui-menu',\n    shadow: false,\n})\nexport class AtuiMenu {\n    /**\n     * Menu's x offset from edge in pixels. Only applied for origin_x = 'start' | 'end'\n     */\n    @Prop() offset_x: number = 0;\n\n    /**\n     * Menu's y offset from edge in pixels. Only applied for origin_y = 'top' | 'bottom'\n     */\n    @Prop() offset_y: number = 0;\n\n    /**\n     * Position of opened menu element relative to trigger element.\n     */\n    @Prop() position: Position = 'bottom';\n\n    /**\n     * Alignment of opened menu element relative to trigger element.\n     */\n    @Prop() align: Align = 'start';\n\n    /**\n     * String representing the 'width' style of the menu element ('auto' or 'NUMpx'). Use auto when you want the menu to inherit the host's width..\n     */\n    @Prop() width?: string = '280px';\n\n    /**\n     * Prevent closing of menu when options are selected. Used for multi-selection controls.\n     */\n    @Prop() autoclose: boolean = true;\n\n    /**\n     * Event type that triggers the menu open state. Click or Hover.\n     */\n    @Prop() trigger: OpenOn = 'click';\n\n    /**\n     * Close the menu when the user clicks within the menu panel. Default for single selection menus.\n     */\n    @Prop() role: AriaRole = 'menu';\n\n    /**\n     * Prevent opening menu\n     */\n    @Prop() disabled: boolean = false;\n\n    @State() isOpen = false;\n    @State() isIntersectingViewport = false;\n    @State() triggerPosition: DOMRect;\n    triggerEl: HTMLElement;\n    menuEl: HTMLElement;\n    private updatePosition = () => {\n        requestAnimationFrame(() => {\n            const trigger = this.triggerEl;\n            if (trigger) {\n                this.triggerPosition = trigger.getBoundingClientRect();\n            }\n        });\n    };\n\n    @Element() el: HTMLElement;\n\n    /**\n     * Toggles the dropdown menu's open state.\n     */\n    @Method()\n    async toggleMenu(): Promise<void> {\n        this.menuStateChange.emit(!this.isOpen);\n        this.isOpen = !this.isOpen;\n        this.updatePosition();\n    }\n\n    /**\n     * Toggles the dropdown menu's open state.\n     */\n    @Method()\n    async openMenu(): Promise<void> {\n        this.isOpen = true;\n        this.menuStateChange.emit(true);\n    }\n\n    /**\n     * Toggles the dropdown menu's open state.\n     */\n    @Method()\n    async closeMenu(): Promise<void> {\n        this.isOpen = false;\n        this.menuStateChange.emit(false);\n    }\n\n    /**\n     * Return the current menu open state\n     */\n    @Method()\n    async getIsOpen(): Promise<boolean> {\n        return this.isOpen;\n    }\n\n    /**\n     * Emits an event containing the open menu state.\n     */\n    @Event() menuStateChange: EventEmitter<boolean>;\n\n    private timedOutCloser;\n    private observer: IntersectionObserver;\n\n    componentDidLoad() {\n        this.updatePosition();\n        window.addEventListener('scroll', this.updatePosition, true);\n        window.addEventListener('resize', this.updatePosition);\n        window.addEventListener('click', this.handleOutsideClick);\n        this.initIntersectionObserver();\n    }\n\n    disconnectedCallback() {\n        window.removeEventListener('scroll', this.updatePosition, true);\n        window.removeEventListener('resize', this.updatePosition);\n        window.removeEventListener('click', this.handleOutsideClick);\n\n        if (this.observer) {\n            this.observer.disconnect();\n        }\n    }\n\n    private initIntersectionObserver(): void {\n        const options = {\n            root: null,\n            rootMargin: '0px',\n            threshold: 1.0,\n        };\n\n        this.observer = new IntersectionObserver((entries) => {\n            entries.forEach((entry) => {\n                if (!entry.isIntersecting) {\n                    this.isIntersectingViewport = true;\n                    this.positionStrategy(entry);\n                } else {\n                    this.isIntersectingViewport = false;\n                }\n            });\n        }, options);\n\n        const menuElement = this.el.querySelector(\n            '[data-name=\"menu-content-wrapper\"]',\n        );\n        if (menuElement) {\n            this.observer.observe(menuElement);\n        }\n    }\n\n    private positionStrategy(entry: IntersectionObserverEntry): void {\n        if (!this.isOpen) return;\n\n        const viewportWidth = window.innerWidth;\n        const viewportHeight = window.innerHeight;\n        const { top, right, left, height } = entry.boundingClientRect;\n\n        // TODO: VCOMPLIB-887: Improve menu positioning strategy\n\n        if (this.position === 'bottom' && top + height >= viewportHeight) {\n            this.position = 'top';\n        } else if (this.position === 'top' && top <= 0) {\n            this.position = 'bottom';\n        }\n        if (this.position === 'right' && right >= viewportWidth) {\n            this.position = 'left';\n        } else if (this.position === 'left' && left <= 0) {\n            this.position = 'right';\n        }\n    }\n\n    private mouseEnterHandler(): void {\n        if (this.timedOutCloser) clearTimeout(this.timedOutCloser);\n        if (!this.isOpen) {\n            this.isOpen = true;\n            this.menuStateChange.emit(true);\n            this.updatePosition();\n        }\n    }\n\n    private mouseLeaveHandler(): void {\n        this.timedOutCloser = setTimeout(() => {\n            this.isOpen = false;\n            this.menuStateChange.emit(false);\n        }, 150);\n    }\n\n    private handleOutsideClick = (event: MouseEvent) => {\n        if (this.isOpen && !this.el.contains(event.target as Node)) {\n            this.mouseLeaveHandler();\n        }\n    };\n\n    get positionStyle(): { [key: string]: string } {\n        const style: { [key: string]: string } = {};\n\n        const triggerRect = this.triggerEl?.getBoundingClientRect();\n        const menuRect = this.menuEl?.getBoundingClientRect();\n\n        if (!triggerRect) return style;\n\n        switch (this.position) {\n            case 'top':\n                style.top = `${triggerRect.top - menuRect.height}px`;\n                if (this.align === 'start') {\n                    style.left = `${triggerRect.left}px`;\n                } else {\n                    style.right = `${window.innerWidth - triggerRect.right}px`;\n                }\n                break;\n            case 'bottom':\n                style.top = `${triggerRect.bottom + this.offset_y}px`;\n                if (this.align === 'start') {\n                    style.left = `${triggerRect.left}px`;\n                } else {\n                    style.right = `${window.innerWidth - triggerRect.right - 8}px`;\n                }\n                break;\n            case 'left':\n                style.left = `${triggerRect.left - menuRect.width}px`;\n                if (this.align === 'start') {\n                    style.top = `${triggerRect.top}px`;\n                } else {\n                    style.bottom = `${window.innerHeight - triggerRect.bottom}px`;\n                }\n                break;\n            case 'right':\n                style.left = `${triggerRect.right + this.offset_x}px`;\n                if (this.align === 'start') {\n                    style.top = `${triggerRect.top}px`;\n                } else {\n                    style.bottom = `${window.innerHeight - triggerRect.bottom}px`;\n                }\n                break;\n        }\n\n        style.width = this.width;\n\n        return style;\n    }\n\n    render() {\n        const classname = variants({\n            open: this.isOpen,\n        });\n\n        return (\n            <Host>\n                <div\n                    class=\"relative\"\n                    onBlur={() =>\n                        this.trigger === 'click' && !this.disabled\n                            ? this.mouseLeaveHandler()\n                            : null\n                    }\n                >\n                    <div\n                        aria-haspopup=\"true\"\n                        data-name=\"menu-trigger\"\n                        ref={(el) => (this.triggerEl = el)}\n                        aria-expanded={`${this.isOpen ? 'true' : 'false'}`}\n                        onMouseEnter={() =>\n                            this.trigger === 'hover' && !this.disabled\n                                ? this.mouseEnterHandler()\n                                : null\n                        }\n                        onKeyDown={async (event) => {\n                            if (event.key === 'Escape') {\n                                await this.closeMenu();\n                            }\n                        }}\n                        onMouseLeave={() =>\n                            this.trigger === 'hover' && !this.disabled\n                                ? this.mouseLeaveHandler()\n                                : null\n                        }\n                        onClick={() =>\n                            this.trigger === 'click' && !this.disabled\n                                ? this.toggleMenu()\n                                : null\n                        }\n                        class={this.disabled ? 'contents' : ''}\n                    >\n                        <slot name=\"menu-trigger\" />\n                    </div>\n\n                    <div\n                        role={this.role}\n                        style={this.positionStyle}\n                        data-position={this.position}\n                        data-align={this.align}\n                        ref={(el) => (this.menuEl = el)}\n                        aria-hidden={`${this.isOpen ? 'false' : 'true'}`}\n                        onMouseEnter={() =>\n                            this.trigger === 'hover' &&\n                            !this.disabled &&\n                            this.mouseEnterHandler()\n                        }\n                        onMouseLeave={() =>\n                            this.trigger === 'hover' &&\n                            !this.disabled &&\n                            this.mouseLeaveHandler()\n                        }\n                        onKeyDown={(event) => {\n                            if (\n                                event.key === 'Enter' ||\n                                event.key === ' ' ||\n                                event.key === 'Escape'\n                            ) {\n                                if (this.autoclose) {\n                                    this.mouseLeaveHandler();\n                                }\n                            }\n                        }}\n                        onClick={() =>\n                            this.autoclose && this.mouseLeaveHandler()\n                        }\n                        class={classname}\n                        data-name=\"menu-content-wrapper\"\n                    >\n                        <slot name=\"menu-content\" />\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}