{"version":3,"names":["inputVariants","cva","variants","disabled","false","true","readonly","invalid","compoundVariants","class","defaultVariants","AtuiTextareaComponent","constructor","hostRef","this","min_rows","max_rows","autocomplete","textareaId","Math","random","toString","substring","handleChange","event","stopPropagation","value","target","atuiChange","emit","render","classname","h","Host","key","name","label","required","info_text","for","hint_text","id","undefined","placeholder","autocapitalize","onInput","onChange","ref","el","textareaEl","style","gridArea","minHeight","maxHeight","error_text"],"sources":["src/components/atui-textarea/atui-textarea.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    State,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nconst inputVariants = cva(\n    'align-center transition[background-color,color,box-shadow] relative flex h-full w-full resize-none rounded-md border border-solid px-8 py-[6px] text-body outline-none duration-300 ease-in-out',\n    {\n        variants: {\n            disabled: {\n                false: 'bg-white',\n                true: 'border-none bg-surface-1 text-disabled focus:ring-0',\n            },\n            readonly: {\n                false: 'bg-white',\n                true: 'border-none text-dark focus:ring-0',\n            },\n            invalid: {\n                false: 'border-med focus:border-active-dark focus:ring-2 focus:ring-active-foreground/30',\n                true: 'border-error-base focus:ring-2 focus:ring-destructive-foreground/30',\n            },\n        },\n        compoundVariants: [\n            {\n                readonly: false,\n                disabled: false,\n                invalid: false,\n                class: 'border-med bg-white text-dark focus:border-active-foreground focus:ring-2 focus:ring-active-foreground/30',\n            },\n        ],\n        defaultVariants: {\n            disabled: false,\n            readonly: false,\n            invalid: false,\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A multi-line text input component for longer text content with auto-resize and validation features. Includes label, hint text, character counting, and accessibility support.\n */\n@Component({\n    tag: 'atui-textarea',\n    shadow: false,\n})\nexport class AtuiTextareaComponent {\n    /**\n     * Label to be displayed for the textarea\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder in the textarea when no text is placed\n     */\n    @Prop()\n    placeholder: string;\n\n    /**\n     * Adds a required * to the label\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * Displays then error text when set\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Makes the textarea read only\n     */\n    @Prop()\n    readonly: boolean;\n\n    /**\n     * Disables interaction with the textarea\n     */\n    @Prop()\n    disabled: boolean;\n\n    /**\n     * Minimum number of rows to display\n     */\n    @Prop()\n    min_rows: number = 1;\n\n    /**\n     * Maximum number of rows to expand to\n     */\n    @Prop()\n    max_rows: number = 10;\n\n    /**\n     * Sets the 'autocomplete' attribute on the textarea\n     */\n    @Prop()\n    autocomplete: string = 'on';\n\n    /**\n     * Sets the value of the textarea\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    @State() textareaEl: HTMLTextAreaElement;\n    @Element() el: HTMLAtuiTextareaElement;\n\n    /**\n     * Emits an event containing the text string when the textarea's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    private textareaId = `textarea-${Math.random().toString(36).substring(2, 11)}`;\n\n    handleChange(event: Event): void {\n        event.stopPropagation();\n        this.value = (event.target as HTMLInputElement).value;\n\n        this.atuiChange.emit(this.value);\n    }\n\n    render() {\n        const classname = inputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n        });\n\n        return (\n            <Host>\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.textareaId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"mb-8 inline-block text-xs leading-tight text-light\"\n                            data-name=\"textarea-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class=\"grid\">\n                    <textarea\n                        id={this.textareaId}\n                        readonly={this.readonly ? true : undefined}\n                        disabled={this.disabled ? true : undefined}\n                        required={this.required}\n                        placeholder={this.placeholder}\n                        autocomplete={this.autocomplete}\n                        autocapitalize=\"none\"\n                        onInput={(event) => {\n                            this.value = (\n                                event.target as HTMLInputElement\n                            ).value;\n                        }}\n                        onChange={(event) => this.handleChange(event)}\n                        value={this.value}\n                        ref={(el) => (this.textareaEl = el)}\n                        style={{ gridArea: '1 / 1 / 2 / 2' }}\n                        class={classname}\n                        data-name=\"textarea-input\"\n                    />\n                    <div\n                        data-name=\"textarea-resize-container\"\n                        style={{\n                            gridArea: '1 / 1 / 2 / 2',\n                            minHeight: `${this.min_rows * 1.5 + 1}rem`,\n                            maxHeight: `${this.max_rows * 1.5 + 1}rem`,\n                        }}\n                        class=\"invisible whitespace-pre-wrap rounded-sm border px-8 py-[6px] text-body\"\n                    >\n                        {this.value}\n                    </div>\n                </div>\n\n                {this.error_text && this.invalid && (\n                    <span\n                        class=\"text-sm text-error\"\n                        data-name=\"textarea-error\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"],"mappings":"oGAYA,MAAMA,EAAgBC,EAClB,kMACA,CACIC,SAAU,CACNC,SAAU,CACNC,MAAO,WACPC,KAAM,uDAEVC,SAAU,CACNF,MAAO,WACPC,KAAM,sCAEVE,QAAS,CACLH,MAAO,mFACPC,KAAM,wEAGdG,iBAAkB,CACd,CACIF,SAAU,MACVH,SAAU,MACVI,QAAS,MACTE,MAAO,8GAGfC,gBAAiB,CACbP,SAAU,MACVG,SAAU,MACVC,QAAS,S,MAaRI,EAAqB,MAJlC,WAAAC,CAAAC,G,iDA+DIC,KAAQC,SAAW,EAMnBD,KAAQE,SAAW,GAMnBF,KAAYG,aAAW,KAiBfH,KAAAI,WAAa,YAAYC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,KAoF5E,CAlFG,YAAAC,CAAaC,GACTA,EAAMC,kBACNX,KAAKY,MAASF,EAAMG,OAA4BD,MAEhDZ,KAAKc,WAAWC,KAAKf,KAAKY,M,CAG9B,MAAAI,GACI,MAAMC,EAAY/B,EAAc,CAC5BO,QAASO,KAAKP,QACdJ,SAAUW,KAAKX,SACfG,SAAUQ,KAAKR,WAGnB,OACI0B,EAACC,EAAI,CAAAC,IAAA,4CACDF,EAAK,OAAAE,IAAA,2CAAAzB,MAAM,iBACPuB,EAAM,QAAAE,IAAA,2CAAAC,KAAK,WACTrB,KAAKsB,OAAStB,KAAKuB,UAAYvB,KAAKwB,YAClCN,EACI,mBAAAE,IAAA,2CAAAE,MAAOtB,KAAKsB,MACZG,IAAKzB,KAAKI,WACVmB,SAAUvB,KAAKuB,WAAavB,KAAKR,SACjCgC,UAAWxB,KAAKwB,YAIvBxB,KAAK0B,WACFR,EAAA,QAAAE,IAAA,2CACIzB,MAAM,qDACI,6BAETK,KAAK0B,YAKlBR,EAAK,OAAAE,IAAA,2CAAAzB,MAAM,QACPuB,EAAA,YAAAE,IAAA,2CACIO,GAAI3B,KAAKI,WACTZ,SAAUQ,KAAKR,SAAW,KAAOoC,UACjCvC,SAAUW,KAAKX,SAAW,KAAOuC,UACjCL,SAAUvB,KAAKuB,SACfM,YAAa7B,KAAK6B,YAClB1B,aAAcH,KAAKG,aACnB2B,eAAe,OACfC,QAAUrB,IACNV,KAAKY,MACDF,EAAMG,OACRD,KAAK,EAEXoB,SAAWtB,GAAUV,KAAKS,aAAaC,GACvCE,MAAOZ,KAAKY,MACZqB,IAAMC,GAAQlC,KAAKmC,WAAaD,EAChCE,MAAO,CAAEC,SAAU,iBACnB1C,MAAOsB,EACG,+BAEdC,EACc,OAAAE,IAAA,mFACVgB,MAAO,CACHC,SAAU,gBACVC,UAAW,GAAGtC,KAAKC,SAAW,IAAM,OACpCsC,UAAW,GAAGvC,KAAKE,SAAW,IAAM,QAExCP,MAAM,2EAELK,KAAKY,QAIbZ,KAAKwC,YAAcxC,KAAKP,SACrByB,EAAA,QAAAE,IAAA,2CACIzB,MAAM,qBACI,8BAETK,KAAKwC,Y","ignoreList":[]}