{"version":3,"names":["AtuiSearchTable","constructor","hostRef","this","page_size","use_custom_pagination","tableCreated","activeFilters","selectedFilters","menuSelectedIds","searchValue","handleSelectedFiltersChange","newValue","map","f","id","componentWillLoad","translations","fetchTranslations","el","componentDidLoad","initGrid","componentDidUpdate","col_defs","tableEl","agGrid","createGrid","setupExternalFilters","_a","table_data","items","setGridOption","hasFilters","Object","keys","length","console","log","node","data","searchLower","toLowerCase","matchesSearch","values","some","value","String","includes","columnFilterResult","entries","every","colId","filterValue","matches","handleColumnChange","event","checked","detail","updatedColDefs","colDef","field","assign","hide","handleFilterChange","Array","isArray","handleMenuFilterChange","handleFilterListChange","updateActiveFilters","selectedIds","filters","filter","trim","forEach","onFilterChanged","handleSearchChange","render","h","Host","key","ag_grid","class","slot","hide_dropdown_filters","selected","onAtuiChange","label","search_label","hint_text","search_hint","info_text","search_info_tooltip","placeholder","ATUI","TABLE","SEARCH_BY_KEYWORD","hide_export_menu","hide_column_manager","name","ref","disable_auto_init"],"sources":["src/components/table-components/atui-search-table/atui-search-table.tsx"],"sourcesContent":["import { Component, h, Prop, State, Element, Watch, Host } from '@stencil/core';\nimport { ColDef, GridApi } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A searchable data table component that combines table functionality with integrated search capabilities. Provides real-time filtering and search result highlighting.\n * @slot actions - Used to place actions related to table content\n * @slot multi-select-actions - Used to place actions related to row selection\n */\n@Component({\n    tag: 'atui-search-table',\n    shadow: false,\n})\nexport class AtuiSearchTable {\n    /**\n     * Table data passed to atui-table component.\n     */\n    @Prop()\n    table_data: {\n        items: any[];\n        total: number;\n    };\n\n    /**\n     * Label for the table, appears above the search input.\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Label for the search input.\n     */\n    @Prop()\n    search_label: string;\n\n    /**\n     * Hint text displayed below the search label.\n     */\n    @Prop()\n    search_hint: string;\n\n    /**\n     * Info text displayed in the search info tooltip.\n     */\n    @Prop()\n    search_info_tooltip: string;\n\n    /**\n     * Column definitions passed to atui-table component.\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Default page size of the table\n     */\n    @Prop()\n    page_size?: number = 10;\n\n    /**\n     * If true the table dropdown filters will not be added\n     */\n    @Prop()\n    hide_dropdown_filters?: boolean;\n\n    /**\n     * If true the column manager will not be added\n     */\n    @Prop()\n    hide_column_manager?: boolean;\n\n    /**\n     * If true the table export menu will not be added\n     */\n    @Prop()\n    hide_export_menu?: boolean;\n\n    /**\n     * If true, disables pagination on the table and shows all data at once.\n     * Useful for server-side pagination where you want to control pagination externally.\n     */\n    @Prop()\n    use_custom_pagination?: boolean = false;\n\n    @Element()\n    el: HTMLElement;\n\n    @State()\n    translations: any;\n\n    @State()\n    agGrid: GridApi;\n\n    @State()\n    tableCreated: boolean = false;\n\n    @State()\n    activeFilters: { [key: string]: string } = {};\n\n    @State()\n    selectedFilters: { id: string; value: string }[] = [];\n\n    @State()\n    menuSelectedIds: string[] = [];\n\n    @State()\n    searchValue: string = '';\n\n    tableEl: HTMLAtuiTableElement;\n\n    @Watch('selectedFilters')\n    handleSelectedFiltersChange(newValue: { id: string; value: string }[]) {\n        this.menuSelectedIds = newValue.map((f) => f.id);\n    }\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    async componentDidLoad() {\n        await this.initGrid();\n    }\n\n    async componentDidUpdate() {\n        await this.initGrid();\n    }\n\n    private async initGrid() {\n        if (this.col_defs && !this.tableCreated && this.tableEl) {\n            this.agGrid = await this.tableEl.createGrid();\n            this.tableCreated = true;\n            this.setupExternalFilters();\n\n            if (this.table_data?.items) {\n                this.agGrid.setGridOption('rowData', this.table_data.items);\n            }\n        }\n    }\n\n    private setupExternalFilters() {\n        if (!this.agGrid) return;\n\n        this.agGrid.setGridOption<'isExternalFilterPresent'>(\n            'isExternalFilterPresent',\n            () => {\n                const hasFilters = Object.keys(this.activeFilters).length > 0;\n                console.log(\n                    'isExternalFilterPresent called, hasFilters:',\n                    hasFilters,\n                );\n                return hasFilters;\n            },\n        );\n\n        this.agGrid.setGridOption<'doesExternalFilterPass'>(\n            'doesExternalFilterPass',\n            (node) => {\n                if (!node.data) return true;\n\n                const searchValue = this.activeFilters['__search__'];\n                if (searchValue) {\n                    const searchLower = searchValue.toLowerCase();\n                    const matchesSearch = Object.values(node.data).some(\n                        (value) =>\n                            value &&\n                            String(value).toLowerCase().includes(searchLower),\n                    );\n                    if (!matchesSearch) return false;\n                }\n\n                const columnFilterResult = Object.entries(\n                    this.activeFilters,\n                ).every(([colId, filterValue]) => {\n                    if (colId === '__search__' || !filterValue) return true;\n                    const value = node.data[colId];\n                    const matches =\n                        value &&\n                        String(value)\n                            .toLowerCase()\n                            .includes(String(filterValue).toLowerCase());\n                    return matches;\n                });\n\n                return columnFilterResult;\n            },\n        );\n    }\n\n    handleColumnChange(event: CustomEvent) {\n        const { id, checked } = event.detail;\n        const updatedColDefs = this.col_defs.map((colDef) => {\n            if (colDef.field === id) {\n                return { ...colDef, hide: !checked };\n            }\n            return colDef;\n        });\n\n        this.col_defs = updatedColDefs;\n    }\n\n    handleFilterChange(event: CustomEvent) {\n        if (event.detail) {\n            if (\n                Array.isArray(event.detail) &&\n                typeof event.detail[0] === 'string'\n            ) {\n                this.handleMenuFilterChange(event.detail);\n            } else if (\n                Array.isArray(event.detail) &&\n                typeof event.detail[0] === 'object'\n            ) {\n                this.handleFilterListChange(event.detail);\n            }\n        }\n\n        this.updateActiveFilters();\n    }\n\n    private handleMenuFilterChange(selectedIds: string[]) {\n        this.selectedFilters = selectedIds.map((id) => ({\n            id,\n            value: '',\n        }));\n        this.menuSelectedIds = selectedIds;\n    }\n\n    private handleFilterListChange(filters: { id: string; value: string }[]) {\n        if (filters.length === 1 && filters[0].id === '') {\n            this.selectedFilters = [];\n            this.menuSelectedIds = [];\n        } else {\n            this.selectedFilters = filters;\n            this.menuSelectedIds = filters\n                .filter((f) => f.value && f.value.trim() !== '')\n                .map((f) => f.id);\n        }\n    }\n\n    private updateActiveFilters() {\n        this.activeFilters = {};\n        this.selectedFilters.forEach((filter) => {\n            if (filter.value) {\n                this.activeFilters[filter.id] = filter.value;\n            }\n        });\n\n        if (this.searchValue) {\n            this.activeFilters['__search__'] = this.searchValue;\n        }\n\n        if (this.agGrid) {\n            this.setupExternalFilters();\n            this.agGrid.onFilterChanged();\n        } else {\n            console.log('agGrid not available, cannot apply filter');\n        }\n    }\n\n    handleSearchChange(event: CustomEvent) {\n        this.searchValue = event.detail || '';\n        this.updateActiveFilters();\n    }\n\n    render() {\n        return (\n            <Host>\n                <atui-table-actions ag_grid={this.agGrid}>\n                    <div\n                        class=\"flex items-center gap-8\"\n                        slot=\"search\"\n                    >\n                        {!this.hide_dropdown_filters && this.col_defs && (\n                            <atui-table-filter-menu\n                                slot=\"filter-menu\"\n                                col_defs={this.col_defs}\n                                selected={this.menuSelectedIds}\n                                onAtuiChange={(event) =>\n                                    this.handleFilterChange(event)\n                                }\n                            ></atui-table-filter-menu>\n                        )}\n\n                        <atui-search\n                            class=\"w-input-md\"\n                            label={this.search_label}\n                            hint_text={this.search_hint}\n                            info_text={this.search_info_tooltip}\n                            placeholder={\n                                this.translations.ATUI.TABLE.SEARCH_BY_KEYWORD\n                            }\n                            onAtuiChange={(event) =>\n                                this.handleSearchChange(event)\n                            }\n                        ></atui-search>\n                    </div>\n\n                    {!this.hide_dropdown_filters && this.col_defs && (\n                        <atui-table-filters\n                            slot=\"filters\"\n                            col_defs={this.col_defs}\n                            selected={this.selectedFilters}\n                            onAtuiChange={(event) =>\n                                this.handleFilterChange(event)\n                            }\n                        ></atui-table-filters>\n                    )}\n\n                    {!this.hide_export_menu && (\n                        <atui-table-export-menu slot=\"export-menu\" />\n                    )}\n\n                    {!this.hide_column_manager && this.col_defs && (\n                        <atui-column-manager\n                            slot=\"column-manager\"\n                            col_defs={this.col_defs}\n                            onAtuiChange={(event) =>\n                                this.handleColumnChange(event)\n                            }\n                        />\n                    )}\n\n                    <div slot=\"actions\">\n                        <slot name=\"actions\" />\n                    </div>\n                </atui-table-actions>\n\n                <slot name=\"multi-select-actions\" />\n\n                <atui-table\n                    ref={(el) => (this.tableEl = el)}\n                    table_data={this.table_data}\n                    col_defs={this.col_defs}\n                    page_size={this.page_size}\n                    use_custom_pagination={this.use_custom_pagination}\n                    disable_auto_init={true}\n                />\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}