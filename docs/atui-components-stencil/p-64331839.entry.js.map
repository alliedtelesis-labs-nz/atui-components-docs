{"version":3,"names":["AtuiColorStatusCell","init","params","color","dataPresent","containerStyles","this","Object","assign","height","width","cursor","getGui","el","refresh","updateCell","newValue","render","h","Host","key","class","position","is_visible","generateTooltip","slot","style","onClick","click"],"sources":["src/components/table-components/cell-components/atui-color-status-cell/atui-color-status-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport { IClickCell, ITooltipCell } from '../../../../types/table-cells';\nimport { CSSProperties } from '../../../../types/styles';\n\nexport interface ColorStatusCellParams extends ITooltipCell, IClickCell {\n    color: string;\n    dataPresent: boolean;\n    containerStyles: CSSProperties;\n}\n\ninterface InitParams extends ColorStatusCellParams, ICellRendererParams {}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a color status.\n */\n\n@Component({\n    tag: 'atui-color-status-cell',\n    shadow: false,\n})\nexport class AtuiColorStatusCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() params: InitParams;\n    @State() containerStyles: CSSProperties;\n    dataPresent: boolean;\n\n    init(params: InitParams): void {\n        const { color, dataPresent, containerStyles } = params;\n\n        this.dataPresent = dataPresent;\n        this.params = params;\n        this.containerStyles = {\n            'background-color': color,\n            'height': '100%',\n            'width': '100%',\n            'cursor': 'pointer',\n            ...containerStyles,\n        };\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: InitParams): boolean {\n        this.updateCell(params.color);\n        return true;\n    }\n\n    protected updateCell(newValue: any) {\n        this.params.color = newValue;\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center leading-[100%]\">\n                <atui-tooltip\n                    position=\"right\"\n                    is_visible={!!this.params.generateTooltip}\n                >\n                    <div\n                        slot=\"tooltip-trigger\"\n                        style={this.containerStyles}\n                        onClick={() => this.params.click(this.params)}\n                        data-present={this.dataPresent}\n                    />\n\n                    {this.params.generateTooltip && (\n                        <span slot=\"tooltip-content\">\n                            {this.params.generateTooltip(this.params)}\n                        </span>\n                    )}\n                </atui-tooltip>\n            </Host>\n        );\n    }\n}\n"],"mappings":"+DAsBaA,EAAmB,M,yBAM5B,IAAAC,CAAKC,GACD,MAAMC,MAAEA,EAAKC,YAAEA,EAAWC,gBAAEA,GAAoBH,EAEhDI,KAAKF,YAAcA,EACnBE,KAAKJ,OAASA,EACdI,KAAKD,gBACDE,OAAAC,OAAA,oBAAoBL,EACpBM,OAAU,OACVC,MAAS,OACTC,OAAU,WACPN,E,CAIX,MAAAO,GACI,OAAON,KAAKO,E,CAGhB,OAAAC,CAAQZ,GACJI,KAAKS,WAAWb,EAAOC,OACvB,OAAO,I,CAGD,UAAAY,CAAWC,GACjBV,KAAKJ,OAAOC,MAAQa,C,CAGxB,MAAAC,GACI,OACIC,EAACC,EAAK,CAAAC,IAAA,2CAAAC,MAAM,2CACRH,EAAA,gBAAAE,IAAA,2CACIE,SAAS,QACTC,aAAcjB,KAAKJ,OAAOsB,iBAE1BN,EAAA,OAAAE,IAAA,2CACIK,KAAK,kBACLC,MAAOpB,KAAKD,gBACZsB,QAAS,IAAMrB,KAAKJ,OAAO0B,MAAMtB,KAAKJ,QAAO,eAC/BI,KAAKF,cAGtBE,KAAKJ,OAAOsB,iBACTN,EAAA,QAAAE,IAAA,2CAAMK,KAAK,mBACNnB,KAAKJ,OAAOsB,gBAAgBlB,KAAKJ,U","ignoreList":[]}