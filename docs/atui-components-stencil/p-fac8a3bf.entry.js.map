{"version":3,"names":["AtuiPromptInputComponent","constructor","hostRef","this","placeholder","max_height","in_progress","show_model_select","model","value","inputId","Math","random","toString","substring","focusInput","textareaEl","focus","handleInput","event","stopPropagation","target","atuiChange","emit","autoResize","style","height","scrollHeight","newHeight","max","min","componentDidLoad","setTimeout","handleKeyDown","key","shiftKey","preventDefault","sendMessage","atuiStop","trim","atuiSubmit","render","canSend","h","Host","tabindex","class","name","label","info_text","for","hint_text","id","maxlength","max_length","onInput","onKeyDown","ref","el","overflow","size","type","icon","disabled","onClick"],"sources":["src/components/prompt/atui-prompt-input/atui-prompt-input.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    State,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\n\n/**\n * @category Prompt\n * @description A specialized input component optimized for AI prompt interfaces. Supports both single-line and multi-line variants with auto-resize, character counting, send/stop functionality, and enhanced UX for conversational interfaces.\n */\n@Component({\n    tag: 'atui-prompt-input',\n    shadow: false,\n})\nexport class AtuiPromptInputComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string = 'Enter your message...';\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Maximum height in pixels for auto-resize\n     */\n    @Prop()\n    max_height: number = 240;\n\n    /**\n     * Maximum character length with counter display\n     */\n    @Prop()\n    max_length: number;\n\n    /**\n     * Controls whether the component is in progress (shows stop button) or ready to send (shows send button)\n     */\n    @Prop()\n    in_progress: boolean = false;\n\n    /**\n     * Controls whether the model select is shown\n     */\n    @Prop()\n    show_model_select: boolean = false;\n\n    /**\n     * The model to use\n     */\n    @Prop()\n    model: string = 'gpt-4o';\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: string = '';\n\n    @State() textareaEl: HTMLTextAreaElement;\n    @Element() el: HTMLElement;\n\n    /**\n     * Emits when the  value changes\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    /**\n     * Emits when a message should be sent\n     */\n    @Event()\n    atuiSubmit: EventEmitter<string>;\n\n    /**\n     * Emits when the stop button is clicked\n     */\n    @Event()\n    atuiStop: EventEmitter<void>;\n\n    /**\n     * @slot label - Custom label content (alternative to using the label prop)\n     */\n\n    private inputId = `prompt-input-${Math.random().toString(36).substring(2, 11)}`;\n\n    private focusInput(): void {\n        if (this.textareaEl) {\n            this.textareaEl.focus();\n        }\n    }\n\n    handleInput(event: Event): void {\n        event.stopPropagation();\n        this.value = (event.target as HTMLTextAreaElement).value;\n        this.atuiChange.emit(this.value);\n        this.autoResize();\n    }\n\n    private autoResize(): void {\n        if (this.textareaEl) {\n            // Reset height to auto to get proper scrollHeight\n            this.textareaEl.style.height = 'auto';\n\n            // Calculate new height within bounds\n            const scrollHeight = this.textareaEl.scrollHeight;\n            const newHeight = Math.max(\n                44,\n                Math.min(scrollHeight, this.max_height),\n            );\n\n            // Set the new height\n            this.textareaEl.style.height = `${newHeight}px`;\n        }\n    }\n\n    componentDidLoad(): void {\n        // Initial auto-resize after component loads\n        setTimeout(() => {\n            this.autoResize();\n        }, 0);\n    }\n\n    handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            this.sendMessage();\n        }\n    }\n\n    sendMessage(): void {\n        if (this.in_progress) {\n            this.atuiStop.emit();\n        } else if (this.value && this.value.trim() !== '') {\n            this.atuiSubmit.emit(this.value.trim());\n            this.value = '';\n            setTimeout(() => {\n                this.autoResize(); // Reset height after clearing\n                this.focusInput();\n            }, 0);\n        }\n    }\n\n    render() {\n        const canSend = this.value && this.value.trim() !== '';\n\n        return (\n            <Host tabindex=\"-1\">\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            info_text={this.info_text}\n                            data-name=\"prompt-input-label\"\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"mb-8 inline-block text-xs leading-tight text-light\"\n                            data-name=\"prompt-input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class=\"relative flex flex-col items-end gap-2 rounded-lg border border-solid border-med bg-white p-8 transition-[background-color,color,box-shadow] duration-300 ease-in-out focus-within:border-active-foreground focus-within:ring-2 focus-within:ring-active-foreground/30\">\n                    <textarea\n                        id={this.inputId}\n                        placeholder={this.placeholder}\n                        maxlength={this.max_length}\n                        onInput={(event) => this.handleInput(event)}\n                        onKeyDown={(event) => this.handleKeyDown(event)}\n                        value={this.value}\n                        ref={(el) => (this.textareaEl = el)}\n                        style={{\n                            height: '44px',\n                            overflow: 'hidden',\n                        }}\n                        class=\"w-full flex-1 resize-none whitespace-pre-wrap break-words border-none bg-transparent text-body text-dark shadow-none outline-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n                        data-name=\"prompt-input\"\n                    />\n\n                    <div class=\"gap-1 flex w-full items-center justify-between\">\n                        <div class=\"flex items-center gap-4\">\n                            <slot name=\"actions-left\" />\n                        </div>\n\n                        <div class=\"flex items-center gap-4 self-end\">\n                            <slot name=\"actions-right\" />\n                            <atui-button\n                                class=\"rounded-lg\"\n                                size=\"sm\"\n                                type=\"secondary\"\n                                icon={\n                                    this.in_progress ? 'stop' : 'arrow_upward'\n                                }\n                                disabled={!canSend}\n                                onClick={() => this.sendMessage()}\n                                onKeyDown={(event) => {\n                                    if (\n                                        event.key === 'Enter' ||\n                                        event.key === ' '\n                                    ) {\n                                        this.sendMessage();\n                                    }\n                                }}\n                                data-name=\"prompt-send-button\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <slot name=\"footer\" />\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}