{"version":3,"names":["AtuiFormLabelComponent","render","h","key","class","this","label","required","htmlFor","_a","for","undefined","info_text","position","slot","variants","cva","open","true","false","AtuiTooltipComponent","constructor","hostRef","is_visible","width","offset","updateTooltipWidth","tooltipEl","requestAnimationFrame","style","maxWidth","componentDidLoad","window","addEventListener","disconnectedCallback","removeEventListener","positionStyle","_b","trim","baseStyles","positionStyles","top","Object","assign","bottom","left","transform","marginBottom","marginTop","right","marginRight","marginLeft","classname","Host","ref","el","triggerEl","name"],"sources":["src/components/atui-form-label/atui-form-label.tsx","src/components/atui-tooltip/atui-tooltip.tsx"],"sourcesContent":["import { Component, h, Prop } from '@stencil/core';\n\n/**\n * @category Form Controls\n * @description A form label component that provides accessible labeling with optional required indicators and info tooltips. Designed for use with form inputs.\n */\n@Component({\n    tag: 'atui-form-label',\n    shadow: false,\n})\nexport class AtuiFormLabelComponent {\n    /**\n     * Label that appears before the info icon.\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * When true, there will be a red star on the label.\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * The text to be contained in the tooltip.\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Placed in the 'for' attribute on the label element\n     */\n    @Prop()\n    for: string;\n\n    render() {\n        return (\n            <div class=\"flex items-center gap-8\">\n                {[\n                    (this.label || this.required) && (\n                        <label\n                            htmlFor={this.for ?? undefined}\n                            class=\"flex gap-4\"\n                        >\n                            {this.label}\n                            {this.required && <span class=\"text-error\">*</span>}\n                        </label>\n                    ),\n                    this.info_text && (\n                        <atui-tooltip position=\"right\">\n                            <span\n                                slot=\"tooltip-trigger\"\n                                class=\"material-icons cursor-pointer !text-icon-sm text-light\"\n                            >\n                                info_outline\n                            </span>\n                            <span slot=\"tooltip-content\">{this.info_text}</span>\n                        </atui-tooltip>\n                    ),\n                ]}\n            </div>\n        );\n    }\n}\n","import { Component, h, Host, Prop, Element } from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nexport type TooltipPosition = 'top' | 'bottom' | 'left' | 'right';\n\nconst variants = cva(\n    'absolute z-50 z-modal box-border flex scale-75 whitespace-nowrap rounded bg-disabled-dark px-4 py-2 text-sm text-white opacity-0 transition-[transform,opacity] peer-hover:scale-100 peer-hover:opacity-100',\n    {\n        variants: {\n            open: {\n                true: null,\n                false: 'hidden',\n            },\n        },\n    },\n);\n\n/**\n * @category Overlays\n * @description A tooltip component that displays contextual information when hovering over or focusing on an element. Provides accessible hover/focus behavior with customizable positioning and content.\n *\n * @slot tooltip-trigger - Shows the tooltip when hovered\n * @slot tooltip-content - Content to go inside of the tooltip\n */\n@Component({\n    tag: 'atui-tooltip',\n    shadow: false,\n})\nexport class AtuiTooltipComponent {\n    /**\n     * Position of the tooltip content relative to the atui-tooltip\n     */\n    @Prop()\n    position: TooltipPosition = 'bottom';\n\n    /**\n     * If false, forces the tooltip to hide.\n     * If true, tooltip will show when trigger is hovered\n     */\n    @Prop()\n    is_visible?: boolean = true;\n\n    /**\n     * String representing the 'max-width' style of the tooltip element (e.g., 'auto', '200px', '50%')\n     */\n    @Prop() width?: string = 'auto';\n\n    /**\n     * Offset in pixels from the edge of the trigger element\n     */\n    @Prop() offset?: number = 8;\n\n    @Element() el: HTMLElement;\n    triggerEl: HTMLElement;\n    tooltipEl: HTMLElement;\n\n    componentDidLoad() {\n        window.addEventListener('resize', this.updateTooltipWidth);\n    }\n\n    disconnectedCallback() {\n        window.removeEventListener('resize', this.updateTooltipWidth);\n    }\n\n    updateTooltipWidth = () => {\n        if (!this.tooltipEl) return;\n\n        requestAnimationFrame(() => {\n            if (this.width !== 'auto') {\n                this.tooltipEl.style.maxWidth = `${this.width}px`;\n            }\n        });\n    };\n\n    get positionStyle(): { [key: string]: string } {\n        const offset = this.offset ?? 8;\n        const width = this.width?.trim() || 'auto';\n\n        const baseStyles = {\n            width: width,\n        };\n\n        const positionStyles = {\n            top: {\n                ...baseStyles,\n                bottom: '100%',\n                left: '50%',\n                transform: 'translateX(-50%)',\n                marginBottom: `${offset}px`,\n            },\n            bottom: {\n                ...baseStyles,\n                top: '100%',\n                left: '50%',\n                transform: 'translateX(-50%)',\n                marginTop: `${offset}px`,\n            },\n            left: {\n                ...baseStyles,\n                right: '100%',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                marginRight: `${offset}px`,\n            },\n            right: {\n                ...baseStyles,\n                left: '100%',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                marginLeft: `${offset}px`,\n            },\n        };\n\n        return positionStyles[this.position] || {};\n    }\n\n    render() {\n        const classname = variants({\n            open: this.is_visible,\n        });\n\n        return (\n            <Host class=\"relative inline-block\">\n                <div\n                    class=\"peer pointer-events-auto contents\"\n                    ref={(el) => (this.triggerEl = el)}\n                >\n                    <slot name=\"tooltip-trigger\" />\n                </div>\n                <div\n                    ref={(el) => (this.tooltipEl = el)}\n                    style={this.positionStyle}\n                    class={classname}\n                >\n                    <slot name=\"tooltip-content\" />\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"mGAUaA,EAAsB,M,yBAyB/B,MAAAC,G,MACI,OACIC,EAAA,OAAAC,IAAA,2CAAKC,MAAM,2BACN,EACIC,KAAKC,OAASD,KAAKE,WAChBL,EAAA,SAAAC,IAAA,2CACIK,SAASC,EAAAJ,KAAKK,OAAG,MAAAD,SAAA,EAAAA,EAAIE,UACrBP,MAAM,cAELC,KAAKC,MACLD,KAAKE,UAAYL,EAAA,QAAAC,IAAA,2CAAMC,MAAM,cAAqB,MAG3DC,KAAKO,WACDV,EAAc,gBAAAC,IAAA,2CAAAU,SAAS,SACnBX,EAAA,QAAAC,IAAA,2CACIW,KAAK,kBACLV,MAAM,0DAGH,gBACPF,EAAM,QAAAC,IAAA,2CAAAW,KAAK,mBAAmBT,KAAKO,a,GCnD/D,MAAMG,EAAWC,EACb,8MACA,CACID,SAAU,CACNE,KAAM,CACFC,KAAM,KACNC,MAAO,a,MAiBVC,EAAoB,MAJjC,WAAAC,CAAAC,G,UASIjB,KAAQQ,SAAoB,SAO5BR,KAAUkB,WAAa,KAKflB,KAAKmB,MAAY,OAKjBnB,KAAMoB,OAAY,EAc1BpB,KAAkBqB,mBAAG,KACjB,IAAKrB,KAAKsB,UAAW,OAErBC,uBAAsB,KAClB,GAAIvB,KAAKmB,QAAU,OAAQ,CACvBnB,KAAKsB,UAAUE,MAAMC,SAAW,GAAGzB,KAAKmB,S,IAE9C,CAoET,CAnFG,gBAAAO,GACIC,OAAOC,iBAAiB,SAAU5B,KAAKqB,mB,CAG3C,oBAAAQ,GACIF,OAAOG,oBAAoB,SAAU9B,KAAKqB,mB,CAa9C,iBAAIU,G,QACA,MAAMX,GAAShB,EAAAJ,KAAKoB,UAAM,MAAAhB,SAAA,EAAAA,EAAI,EAC9B,MAAMe,IAAQa,EAAAhC,KAAKmB,SAAK,MAAAa,SAAA,SAAAA,EAAEC,SAAU,OAEpC,MAAMC,EAAa,CACff,MAAOA,GAGX,MAAMgB,EAAiB,CACnBC,IAAGC,OAAAC,OAAAD,OAAAC,OAAA,GACIJ,GACH,CAAAK,OAAQ,OACRC,KAAM,MACNC,UAAW,mBACXC,aAAc,GAAGtB,QAErBmB,OAAMF,OAAAC,OAAAD,OAAAC,OAAA,GACCJ,GACH,CAAAE,IAAK,OACLI,KAAM,MACNC,UAAW,mBACXE,UAAW,GAAGvB,QAElBoB,KAAIH,OAAAC,OAAAD,OAAAC,OAAA,GACGJ,GACH,CAAAU,MAAO,OACPR,IAAK,MACLK,UAAW,mBACXI,YAAa,GAAGzB,QAEpBwB,MAAKP,OAAAC,OAAAD,OAAAC,OAAA,GACEJ,GACH,CAAAM,KAAM,OACNJ,IAAK,MACLK,UAAW,mBACXK,WAAY,GAAG1B,SAIvB,OAAOe,EAAenC,KAAKQ,WAAa,E,CAG5C,MAAAZ,GACI,MAAMmD,EAAYrC,EAAS,CACvBE,KAAMZ,KAAKkB,aAGf,OACIrB,EAACmD,EAAK,CAAAlD,IAAA,2CAAAC,MAAM,yBACRF,EAAA,OAAAC,IAAA,2CACIC,MAAM,oCACNkD,IAAMC,GAAQlD,KAAKmD,UAAYD,GAE/BrD,EAAA,QAAAC,IAAA,2CAAMsD,KAAK,qBAEfvD,EACI,OAAAC,IAAA,2CAAAmD,IAAMC,GAAQlD,KAAKsB,UAAY4B,EAC/B1B,MAAOxB,KAAK+B,cACZhC,MAAOgD,GAEPlD,EAAA,QAAAC,IAAA,2CAAMsD,KAAK,qB","ignoreList":[]}