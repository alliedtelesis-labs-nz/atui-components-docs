{"version":3,"names":["AtuiTitleSubtitleDateCell","init","params","value","this","Date","getGui","el","refresh","updateCell","newValue","hourMinuteSecond","TimeDatePresentationUtil","getFormattedDate","DateFormat","HOURS_MINUTES_SECONDS","yearMonthDay","YEAR_MONTH_DAY","render","h","Host","key","class"],"sources":["src/components/table-components/cell-components/atui-title-subtitle-date-cell/atui-title-subtitle-date-cell.tsx"],"sourcesContent":["import { Component, Element, h, Host, State } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport { TimeDatePresentationUtil } from '../../../../utils/time-date-presentation.util';\nimport { DateFormat } from '../../../../types';\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a title and subtitle with a date.\n */\n\n@Component({\n    tag: 'atui-title-subtitle-date-cell',\n    shadow: false,\n})\nexport class AtuiTitleSubtitleDateCell implements ICellRendererComp {\n    @Element() el;\n    @State() value: Date;\n    @State() params: ICellRendererParams;\n\n    init(params: ICellRendererParams): void {\n        const { value } = params;\n\n        this.params = params;\n        if (typeof value === 'string') {\n            this.value = new Date(value);\n        } else {\n            this.value = value;\n        }\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICellRendererParams): boolean {\n        this.updateCell(params.value);\n        return true;\n    }\n\n    private updateCell(newValue: Date) {\n        this.params.value = newValue;\n        this.value = newValue;\n    }\n\n    get hourMinuteSecond(): string {\n        return TimeDatePresentationUtil.getFormattedDate(\n            this.value,\n            DateFormat.HOURS_MINUTES_SECONDS,\n        );\n    }\n\n    get yearMonthDay(): string {\n        return TimeDatePresentationUtil.getFormattedDate(\n            this.value,\n            DateFormat.YEAR_MONTH_DAY,\n        );\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"flex h-full flex-col justify-center\">\n                    <div class=\"truncate text-sm leading-[100%]\">\n                        {this.hourMinuteSecond}\n                    </div>\n                    <div class=\"truncate text-xs font-normal leading-[100%] text-med\">\n                        {this.yearMonthDay}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"uLAcaA,EAAyB,M,yBAKlC,IAAAC,CAAKC,GACD,MAAMC,MAAEA,GAAUD,EAElBE,KAAKF,OAASA,EACd,UAAWC,IAAU,SAAU,CAC3BC,KAAKD,MAAQ,IAAIE,KAAKF,E,KACnB,CACHC,KAAKD,MAAQA,C,EAIrB,MAAAG,GACI,OAAOF,KAAKG,E,CAGhB,OAAAC,CAAQN,GACJE,KAAKK,WAAWP,EAAOC,OACvB,OAAO,I,CAGH,UAAAM,CAAWC,GACfN,KAAKF,OAAOC,MAAQO,EACpBN,KAAKD,MAAQO,C,CAGjB,oBAAIC,GACA,OAAOC,EAAyBC,iBAC5BT,KAAKD,MACLW,EAAWC,sB,CAInB,gBAAIC,GACA,OAAOJ,EAAyBC,iBAC5BT,KAAKD,MACLW,EAAWG,e,CAInB,MAAAC,GACI,OACIC,EAACC,EAAI,CAAAC,IAAA,4CACDF,EAAK,OAAAE,IAAA,2CAAAC,MAAM,uCACPH,EAAA,OAAAE,IAAA,2CAAKC,MAAM,mCACNlB,KAAKO,kBAEVQ,EAAK,OAAAE,IAAA,2CAAAC,MAAM,wDACNlB,KAAKY,e","ignoreList":[]}