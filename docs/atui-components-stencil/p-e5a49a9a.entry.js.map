{"version":3,"names":["variants","cva","open","true","false","AtuiTooltipComponent","constructor","hostRef","this","position","is_visible","width","offset","updateTooltipWidth","tooltipEl","requestAnimationFrame","style","maxWidth","componentDidLoad","window","addEventListener","disconnectedCallback","removeEventListener","positionStyle","_a","_b","trim","baseStyles","positionStyles","top","Object","assign","bottom","left","transform","marginBottom","marginTop","right","marginRight","marginLeft","render","classname","h","Host","key","class","ref","el","triggerEl","name"],"sources":["src/components/atui-tooltip/atui-tooltip.tsx"],"sourcesContent":["import { Component, h, Host, Prop, Element } from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nexport type TooltipPosition = 'top' | 'bottom' | 'left' | 'right';\n\nconst variants = cva(\n    'absolute z-50 z-modal box-border flex scale-75 whitespace-nowrap rounded bg-disabled-dark px-4 py-2 text-sm text-white opacity-0 transition-[transform,opacity] peer-hover:scale-100 peer-hover:opacity-100',\n    {\n        variants: {\n            open: {\n                true: null,\n                false: 'hidden',\n            },\n        },\n    },\n);\n\n/**\n * @category Overlays\n * @description A tooltip component that displays contextual information when hovering over or focusing on an element. Provides accessible hover/focus behavior with customizable positioning and content.\n *\n * @slot tooltip-trigger - Shows the tooltip when hovered\n * @slot tooltip-content - Content to go inside of the tooltip\n */\n@Component({\n    tag: 'atui-tooltip',\n    shadow: false,\n})\nexport class AtuiTooltipComponent {\n    /**\n     * Position of the tooltip content relative to the atui-tooltip\n     */\n    @Prop()\n    position: TooltipPosition = 'bottom';\n\n    /**\n     * If false, forces the tooltip to hide.\n     * If true, tooltip will show when trigger is hovered\n     */\n    @Prop()\n    is_visible?: boolean = true;\n\n    /**\n     * String representing the 'max-width' style of the tooltip element (e.g., 'auto', '200px', '50%')\n     */\n    @Prop() width?: string = 'auto';\n\n    /**\n     * Offset in pixels from the edge of the trigger element\n     */\n    @Prop() offset?: number = 8;\n\n    @Element() el: HTMLElement;\n    triggerEl: HTMLElement;\n    tooltipEl: HTMLElement;\n\n    componentDidLoad() {\n        window.addEventListener('resize', this.updateTooltipWidth);\n    }\n\n    disconnectedCallback() {\n        window.removeEventListener('resize', this.updateTooltipWidth);\n    }\n\n    updateTooltipWidth = () => {\n        if (!this.tooltipEl) return;\n\n        requestAnimationFrame(() => {\n            if (this.width !== 'auto') {\n                this.tooltipEl.style.maxWidth = `${this.width}px`;\n            }\n        });\n    };\n\n    get positionStyle(): { [key: string]: string } {\n        const offset = this.offset ?? 8;\n        const width = this.width?.trim() || 'auto';\n\n        const baseStyles = {\n            width: width,\n        };\n\n        const positionStyles = {\n            top: {\n                ...baseStyles,\n                bottom: '100%',\n                left: '50%',\n                transform: 'translateX(-50%)',\n                marginBottom: `${offset}px`,\n            },\n            bottom: {\n                ...baseStyles,\n                top: '100%',\n                left: '50%',\n                transform: 'translateX(-50%)',\n                marginTop: `${offset}px`,\n            },\n            left: {\n                ...baseStyles,\n                right: '100%',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                marginRight: `${offset}px`,\n            },\n            right: {\n                ...baseStyles,\n                left: '100%',\n                top: '50%',\n                transform: 'translateY(-50%)',\n                marginLeft: `${offset}px`,\n            },\n        };\n\n        return positionStyles[this.position] || {};\n    }\n\n    render() {\n        const classname = variants({\n            open: this.is_visible,\n        });\n\n        return (\n            <Host class=\"relative inline-block\">\n                <div\n                    class=\"peer pointer-events-auto contents\"\n                    ref={(el) => (this.triggerEl = el)}\n                >\n                    <slot name=\"tooltip-trigger\" />\n                </div>\n                <div\n                    ref={(el) => (this.tooltipEl = el)}\n                    style={this.positionStyle}\n                    class={classname}\n                >\n                    <slot name=\"tooltip-content\" />\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"6FAKA,MAAMA,EAAWC,EACb,8MACA,CACID,SAAU,CACNE,KAAM,CACFC,KAAM,KACNC,MAAO,a,MAiBVC,EAAoB,MAJjC,WAAAC,CAAAC,G,UASIC,KAAQC,SAAoB,SAO5BD,KAAUE,WAAa,KAKfF,KAAKG,MAAY,OAKjBH,KAAMI,OAAY,EAc1BJ,KAAkBK,mBAAG,KACjB,IAAKL,KAAKM,UAAW,OAErBC,uBAAsB,KAClB,GAAIP,KAAKG,QAAU,OAAQ,CACvBH,KAAKM,UAAUE,MAAMC,SAAW,GAAGT,KAAKG,S,IAE9C,CAoET,CAnFG,gBAAAO,GACIC,OAAOC,iBAAiB,SAAUZ,KAAKK,mB,CAG3C,oBAAAQ,GACIF,OAAOG,oBAAoB,SAAUd,KAAKK,mB,CAa9C,iBAAIU,G,QACA,MAAMX,GAASY,EAAAhB,KAAKI,UAAM,MAAAY,SAAA,EAAAA,EAAI,EAC9B,MAAMb,IAAQc,EAAAjB,KAAKG,SAAK,MAAAc,SAAA,SAAAA,EAAEC,SAAU,OAEpC,MAAMC,EAAa,CACfhB,MAAOA,GAGX,MAAMiB,EAAiB,CACnBC,IAAGC,OAAAC,OAAAD,OAAAC,OAAA,GACIJ,GACH,CAAAK,OAAQ,OACRC,KAAM,MACNC,UAAW,mBACXC,aAAc,GAAGvB,QAErBoB,OAAMF,OAAAC,OAAAD,OAAAC,OAAA,GACCJ,GACH,CAAAE,IAAK,OACLI,KAAM,MACNC,UAAW,mBACXE,UAAW,GAAGxB,QAElBqB,KAAIH,OAAAC,OAAAD,OAAAC,OAAA,GACGJ,GACH,CAAAU,MAAO,OACPR,IAAK,MACLK,UAAW,mBACXI,YAAa,GAAG1B,QAEpByB,MAAKP,OAAAC,OAAAD,OAAAC,OAAA,GACEJ,GACH,CAAAM,KAAM,OACNJ,IAAK,MACLK,UAAW,mBACXK,WAAY,GAAG3B,SAIvB,OAAOgB,EAAepB,KAAKC,WAAa,E,CAG5C,MAAA+B,GACI,MAAMC,EAAYzC,EAAS,CACvBE,KAAMM,KAAKE,aAGf,OACIgC,EAACC,EAAK,CAAAC,IAAA,2CAAAC,MAAM,yBACRH,EAAA,OAAAE,IAAA,2CACIC,MAAM,oCACNC,IAAMC,GAAQvC,KAAKwC,UAAYD,GAE/BL,EAAA,QAAAE,IAAA,2CAAMK,KAAK,qBAEfP,EACI,OAAAE,IAAA,2CAAAE,IAAMC,GAAQvC,KAAKM,UAAYiC,EAC/B/B,MAAOR,KAAKe,cACZsB,MAAOJ,GAEPC,EAAA,QAAAE,IAAA,2CAAMK,KAAK,qB","ignoreList":[]}