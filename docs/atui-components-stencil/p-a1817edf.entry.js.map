{"version":3,"names":["AtuiSearch","onChangeFn","this","atuiChange","emit","searchEl","value","model","clearFn","focus","render","h","key","label","info_text","for","replace","toLowerCase","undefined","class","id","role","tabindex","placeholder","autocomplete","name","onInput","ref","el","size","type","icon","onClick","hint_text","AtuiTableExportMenu","componentWillLoad","translations","fetchTranslations","clickHandler","event","target","width","align","slot","position","ATUI","TABLE","EXPORT_TO_FILE","EXPORT_AS_CSV","EXPORT_AS_PDF","AtuiTableFilterMenu","constructor","hostRef","selected","filteredColumns","col_defs","filter","colDef","field","map","option_id","handleSelectedChange","newValue","handleColumnSelect","detail","Host","autoclose","FILTER_DATA","options","onChange","AtuiTableFilters","clearFilters","clearSingleFilter","columnId","column","filterChangeHandler","stopPropagation","length","prefix","onAtuiChange"],"sources":["src/components/atui-search/atui-search.tsx","src/components/table-components/atui-table-export-menu/atui-table-export-menu.tsx","src/components/table-components/atui-table-filter-menu/atui-table-filter-menu.tsx","src/components/table-components/atui-table-filters/atui-table-filters.tsx"],"sourcesContent":["import { Component, h, Prop, EventEmitter, Event, State } from '@stencil/core';\n\n/**\n * @category Form Controls\n * @description A search component for filtering data.\n */\n\n@Component({\n    tag: 'atui-search',\n    shadow: false,\n})\nexport class AtuiSearch {\n    /**\n     * Label text above the search bar.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Hint text for the input, appears below the search bar.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Tooltip description.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Placeholder text inside the search component.\n     */\n    @Prop()\n    placeholder?: string;\n\n    /**\n     * String content of the search.\n     */\n    @Prop({ mutable: true })\n    model?: string;\n\n    @State()\n    searchEl: HTMLInputElement;\n\n    /**\n     * Emits an event when the input is changed. Used by atui-table.\n     */\n    @Event({ eventName: 'atuiChange' })\n    atuiChange: EventEmitter;\n\n    onChangeFn(): void {\n        this.atuiChange.emit(this.searchEl.value);\n        this.model = this.searchEl.value;\n    }\n\n    clearFn(): void {\n        this.searchEl.value = '';\n        this.atuiChange.emit(this.searchEl.value);\n        this.model = '';\n        this.searchEl.focus();\n    }\n\n    render() {\n        return (\n            <div>\n                {(this.label || this.info_text) && (\n                    <atui-form-label\n                        label={this.label}\n                        for={\n                            this.label\n                                ? `search-input-${this.label.replace(/\\s+/g, '-').toLowerCase()}`\n                                : undefined\n                        }\n                        info_text={this.info_text}\n                    />\n                )}\n                <div class=\"active-within:border-active-dark transition[background-color,color,box-shadow] relative flex h-[36px] flex-row items-center justify-center rounded-md border border-med bg-surface-0 duration-300 ease-in-out focus-within:border-active-dark focus-within:ring-2 focus-within:ring-active-foreground/30\">\n                    <span class=\"px-8\">\n                        <i class=\"material-icons !text-[16px] !leading-[30px] text-light\">\n                            search\n                        </i>\n                    </span>\n\n                    <input\n                        id={\n                            this.label\n                                ? `search-input-${this.label.replace(/\\s+/g, '-').toLowerCase()}`\n                                : undefined\n                        }\n                        role=\"searchbox\"\n                        tabindex=\"0\"\n                        class=\"mr-24 h-30 w-full bg-transparent p-0 leading-[30px] focus:border-none focus:outline-none\"\n                        placeholder={this.placeholder}\n                        value={this.model}\n                        autocomplete=\"off\"\n                        name=\"search\"\n                        onInput={() => this.onChangeFn()}\n                        ref={(el) => (this.searchEl = el)}\n                    />\n\n                    <div\n                        class={`transition-all duration-300 ease-in-out ${\n                            this.model !== '' && this.model !== undefined\n                                ? 'pr-4 opacity-100'\n                                : 'pointer-events-none pr-0 opacity-0'\n                        }`}\n                    >\n                        <atui-button\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"backspace\"\n                            onClick={() => this.clearFn()}\n                            data-name=\"search-clear\"\n                            tabindex={\n                                this.model !== '' && this.model !== undefined\n                                    ? '0'\n                                    : '-1'\n                            }\n                        ></atui-button>\n                    </div>\n                </div>\n\n                <span\n                    class=\"mt-4 truncate text-xs font-normal !leading-normal text-med\"\n                    data-name=\"search-hint\"\n                >\n                    {this.hint_text}\n                </span>\n            </div>\n        );\n    }\n}\n","import {\n    Component,\n    h,\n    State,\n    Element,\n    Listen,\n    EventEmitter,\n    Event,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A menu component for exporting table data in CSV or PDF formats. Provides a user-friendly interface for exporting data from tables.\n */\n\n@Component({\n    tag: 'atui-table-export-menu',\n    shadow: false,\n})\nexport class AtuiTableExportMenu {\n    @Element() el: HTMLAtuiTableExportMenuElement;\n    @State() translations: any;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    /**\n     * Emits id of the clicked button, either 'CSV' or 'PDF'.\n     */\n    @Event() atuiChange: EventEmitter;\n\n    @Listen('atuiClick')\n    clickHandler(event: Event) {\n        this.atuiChange.emit((event.target as HTMLAtuiButtonElement).id);\n    }\n\n    render() {\n        return (\n            <atui-menu\n                width={'auto'}\n                align=\"end\"\n            >\n                <atui-tooltip\n                    slot=\"menu-trigger\"\n                    position=\"top\"\n                >\n                    <atui-button\n                        slot=\"tooltip-trigger\"\n                        icon=\"save_alt\"\n                        type=\"secondaryText\"\n                    />\n                    <span slot=\"tooltip-content\">\n                        {this.translations.ATUI.TABLE.EXPORT_TO_FILE}\n                    </span>\n                </atui-tooltip>\n                <div slot=\"menu-content\">\n                    <atui-button\n                        type=\"secondaryText\"\n                        label={this.translations.ATUI.TABLE.EXPORT_AS_CSV}\n                        id=\"CSV\"\n                    />\n                    <atui-button\n                        type=\"secondaryText\"\n                        label={this.translations.ATUI.TABLE.EXPORT_AS_PDF}\n                        id=\"PDF\"\n                    />\n                </div>\n            </atui-menu>\n        );\n    }\n}\n","import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n    Watch,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A menu component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n */\n\n@Component({\n    tag: 'atui-table-filter-menu',\n    shadow: false,\n})\nexport class AtuiTableFilterMenu {\n    /**\n     * Column definitions used in your atui-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected filter columns\n     */\n    @Prop({ mutable: true })\n    selected: string[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtuiTableFilterMenuElement;\n\n    /**\n     * Emits selected columns when checkbox selection changes\n     */\n    @Event() atuiChange: EventEmitter<string[]>;\n\n    private get filteredColumns() {\n        return this.col_defs\n            .filter((colDef) => colDef.field !== 'Checkbox')\n            .map((colDef) => ({\n                option_id: colDef.field,\n                label: colDef.field,\n            }));\n    }\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    @Watch('selected')\n    handleSelectedChange(newValue: string[]) {\n        this.selected = newValue || [];\n    }\n\n    private handleColumnSelect(event: CustomEvent<string[]>) {\n        const newValue = event.detail || [];\n        this.selected = newValue;\n        this.atuiChange.emit(this.selected);\n    }\n\n    render() {\n        return (\n            <Host>\n                <atui-menu\n                    autoclose={false}\n                    width=\"auto\"\n                    class=\"self-start\"\n                >\n                    <atui-tooltip\n                        slot=\"menu-trigger\"\n                        position=\"top\"\n                    >\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            type=\"secondaryOutline\"\n                            icon=\"filter_list\"\n                        />\n                        <span slot=\"tooltip-content\">\n                            {this.translations.ATUI.TABLE.FILTER_DATA}\n                        </span>\n                    </atui-tooltip>\n                    <atui-checkbox-group\n                        slot=\"menu-content\"\n                        options={this.filteredColumns}\n                        value={this.selected}\n                        onChange={(event: CustomEvent<string[]>) =>\n                            this.handleColumnSelect(event)\n                        }\n                    />\n                </atui-menu>\n            </Host>\n        );\n    }\n}\n","import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n * @internal\n */\n\n@Component({\n    tag: 'atui-table-filters',\n    shadow: false,\n})\nexport class AtuiTableFilters {\n    /**\n     * Column definitions used in your atui-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected columns and filter values\n     */\n    @Prop({ mutable: true })\n    selected: { id: string; value: string }[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtuiTableFiltersElement;\n\n    /**\n     * Emits id of column to filter and value to filter by filter on change.\n     */\n    @Event() atuiChange: EventEmitter;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    filterChangeHandler(event: CustomEvent, columnId: string) {\n        event.stopPropagation();\n        this.selected = this.selected.map((column) => {\n            if (column.id === columnId)\n                return { id: column.id, value: event.detail };\n            return column;\n        });\n        this.atuiChange.emit(this.selected);\n    }\n\n    clearFilters = () => {\n        this.selected = [];\n        this.atuiChange.emit([{ id: '', value: '' }]);\n    };\n\n    clearSingleFilter = (columnId: string) => {\n        this.selected = this.selected.filter(\n            (column) => column.id !== columnId,\n        );\n        this.atuiChange.emit(this.selected);\n    };\n\n    render() {\n        return (\n            this.col_defs && (\n                <Host class=\"flex items-start gap-8\">\n                    <div class=\"flex min-h-[36px] flex-wrap items-end gap-8 rounded-md bg-surface-0 p-8\">\n                        {!this.selected.length && (\n                            <p class=\"text-light\">0 Filters</p>\n                        )}\n                        {this.selected.map((column) => (\n                            <div class=\"flex items-center gap-2\">\n                                <atui-input\n                                    class=\"w-input-sm\"\n                                    label={column.id}\n                                    prefix={column.id + ': '}\n                                    value={column.value}\n                                    onAtuiChange={(event: CustomEvent) =>\n                                        this.filterChangeHandler(\n                                            event,\n                                            column.id,\n                                        )\n                                    }\n                                >\n                                    <div slot=\"input-actions\">\n                                        <atui-button\n                                            icon=\"cancel_outline\"\n                                            type=\"secondaryText\"\n                                            size=\"sm\"\n                                            onClick={() =>\n                                                this.clearSingleFilter(\n                                                    column.id,\n                                                )\n                                            }\n                                            data-name={`filter-clear-${column.id}`}\n                                        ></atui-button>\n                                    </div>\n                                </atui-input>\n                            </div>\n                        ))}\n\n                        {this.selected.length > 0 && (\n                            <atui-button\n                                type=\"secondaryText\"\n                                label=\"Clear All\"\n                                onClick={this.clearFilters}\n                                data-name=\"filter-clear-all\"\n                            />\n                        )}\n                    </div>\n                </Host>\n            )\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}