{"version":3,"names":["variants","cva","disabled","false","true","size","sm","md","lg","type","primary","primaryOutline","primaryText","secondary","secondaryOutline","secondaryText","destructive","destructiveOutline","destructiveText","hasLabel","compoundVariants","class","defaultVariants","focusIndicatorVariants","spinnerColourPerType","AtuiButtonComponent","constructor","hostRef","this","submit","in_progress","spinner_delay_ms","canHideSpinner","spinnerColour","hideSpinnerIfAfterMinimumDisplayPeriod","setSpinner","setTimeout","handleClick","event","atuiClick","emit","el","closest","requestSubmit","handleKeyDown","key","preventDefault","componentWillUpdate","render","classname","label","focusIndicatorClassname","h","Host","role","tabIndex","onKeyDown","onClick","icon","icon_right","atuiLoadingCss","loadingVariants","default","error","spinnerSize","AtuiLoadingComponent","variant","text","typeClasses","sizeClasses","spinnerSizeClasses","renderSpinner","borderColor","renderTyping","style","animationDelay"],"sources":["src/components/atui-button/atui-button.tsx","src/components/atui-loading/atui-loading.scss?tag=atui-loading","src/components/atui-loading/atui-loading.tsx"],"sourcesContent":["import {\n    Component,\n    Host,\n    Prop,\n    h,\n    Element,\n    EventEmitter,\n    Event,\n} from '@stencil/core';\nimport { LoadingType } from '../atui-loading/atui-loading';\nimport { cva } from 'class-variance-authority';\n\nexport type ButtonType =\n    | 'primary'\n    | 'primaryOutline'\n    | 'primaryText'\n    | 'secondary'\n    | 'secondaryOutline'\n    | 'secondaryText'\n    | 'destructive'\n    | 'destructiveOutline'\n    | 'destructiveText';\n\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\nconst variants = cva(\n    'group relative box-border flex inline-flex cursor-pointer items-center justify-center gap-4 overflow-hidden whitespace-nowrap rounded-[0.3rem] text-button font-medium capitalize outline-none duration-150 ease-in-out focus:outline-none',\n    {\n        variants: {\n            disabled: {\n                false: null,\n                true: 'pointer-events-none opacity-30 grayscale-[1]',\n            },\n            size: {\n                sm: 'py-4',\n                md: 'py-[6px]',\n                lg: 'py-8',\n            },\n            type: {\n                primary:\n                    'bg-active-foreground text-impact focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-active-foreground/90 group-focus:bg-active-foreground/80',\n                primaryOutline:\n                    'border border-solid border-primary-foreground bg-transparent text-active-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-active-foreground/10 group-focus:bg-active-foreground/20',\n                primaryText:\n                    'bg-transparent text-active-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-active-foreground/10 group-focus:bg-active-foreground/20',\n                secondary:\n                    'bg-slate-600 text-impact focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-slate-700 group-focus:bg-slate-800',\n                secondaryOutline:\n                    'border border-solid border-dark bg-transparent text-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-slate-100 group-focus:bg-slate-200',\n                secondaryText:\n                    'bg-transparent text-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-slate-100 group-focus:bg-slate-200',\n                destructive:\n                    'bg-destructive-foreground text-impact focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-destructive-foreground/90 group-focus:bg-destructive-foreground/80',\n                destructiveOutline:\n                    'border border-solid border-destructive-foreground bg-transparent text-destructive-foreground focus-visible:ring-2 focus-visible:ring-destructive-foreground/30 group-hover:bg-destructive-foreground/10 group-focus:bg-destructive-foreground/20',\n                destructiveText:\n                    'bg-transparent text-destructive-foreground focus-visible:ring-2 focus-visible:ring-destructive-foreground/30 group-hover:bg-destructive-foreground/10 group-focus:bg-destructive-foreground/20',\n            },\n            hasLabel: {\n                true: null,\n                false: null,\n            },\n        },\n        compoundVariants: [\n            {\n                size: 'sm',\n                hasLabel: false,\n                class: 'px-4',\n            },\n            {\n                size: 'sm',\n                hasLabel: true,\n                class: 'px-8',\n            },\n            {\n                size: 'md',\n                hasLabel: false,\n                class: 'px-[6px]',\n            },\n            {\n                size: 'md',\n                hasLabel: true,\n                class: 'px-8',\n            },\n            {\n                size: 'lg',\n                hasLabel: false,\n                class: 'px-8',\n            },\n            {\n                size: 'lg',\n                hasLabel: true,\n                class: 'px-[12px]',\n            },\n        ],\n        defaultVariants: {\n            size: 'lg',\n            type: 'primary',\n            hasLabel: true,\n            disabled: false,\n        },\n    },\n);\n\nconst focusIndicatorVariants = cva(\n    'pointer-events-none absolute left-0 top-0 z-10 h-full w-full transition-colors duration-300 ease-in-out',\n    {\n        variants: {\n            type: {\n                primary:\n                    'group-hover:bg-blue-900/30 group-active:bg-blue-900/70',\n                primaryOutline:\n                    'group-hover:bg-active-foreground/10 group-active:bg-active-foreground/20',\n                primaryText:\n                    'group-hover:bg-active-foreground/10 group-active:bg-active-foreground/20',\n                secondary:\n                    'group-hover:bg-slate-900/10 group-active:bg-slate-900/20',\n                secondaryOutline:\n                    'group-hover:bg-slate-500/10 group-active:bg-slate-500/20',\n                secondaryText:\n                    'group-hover:bg-slate-500/10 group-active:bg-slate-500/20',\n                destructive:\n                    'group-hover:bg-red-900/30 group-active:bg-red-900/70',\n                destructiveOutline:\n                    'group-hover:bg-destructive-foreground/10 group-active:bg-destructive-foreground/20',\n                destructiveText:\n                    'group-hover:bg-destructive-foreground/10 group-active:bg-destructive-foreground/20',\n            },\n        },\n    },\n);\n\nconst spinnerColourPerType = {\n    primary: 'default' as LoadingType,\n    primaryOutline: 'secondary' as LoadingType,\n    primaryText: 'secondary' as LoadingType,\n    secondary: 'secondary' as LoadingType,\n    secondaryOutline: 'secondary' as LoadingType,\n    secondaryText: 'secondary' as LoadingType,\n    destructive: 'default' as LoadingType,\n    destructiveOutline: 'error' as LoadingType,\n    destructiveText: 'error' as LoadingType,\n};\n\n/**\n * @category Actions\n * @description A versatile button component for user interactions with multiple styling variants, sizes, and loading states. Supports icons, custom content through slots, and accessibility features.\n *\n * @slot - Placed after the label, but before the icon_right. Can be used as a replacement for the label prop.\n */\n@Component({\n    tag: 'atui-button',\n    shadow: false,\n})\nexport class AtuiButtonComponent {\n    /**\n     * If set, will request submit from the closest form element when clicked\n     */\n    @Prop()\n    submit: boolean = false;\n\n    /**\n     * Styling of the button\n     */\n    @Prop()\n    type: ButtonType = 'primary';\n\n    /**\n     * Size of the button\n     */\n    @Prop()\n    size: ButtonSize = 'lg';\n\n    /**\n     * Label to be displayed within the button\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * When set the button's styling will change and will no longer be interactive\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    /**\n     * Material icon to be displayed before the label within the button\n     */\n    @Prop()\n    icon?: string;\n\n    /**\n     * Material icon to be displayed after the label within the button\n     */\n    @Prop()\n    icon_right?: string;\n\n    /**\n     * When set, will display a loading spinner inside the button and hide all labels & icons\n     */\n    @Prop()\n    in_progress = false;\n\n    /**\n     * Delay period on spinner\n     */\n    @Prop()\n    spinner_delay_ms = 1000;\n\n    @Element()\n    el: HTMLAtuiButtonElement;\n\n    /**\n     * Emits when the button is clicked\n     */\n    @Event()\n    atuiClick: EventEmitter<any>;\n\n    canHideSpinner = true;\n\n    get spinnerColour(): LoadingType {\n        return spinnerColourPerType[this.type];\n    }\n\n    private hideSpinnerIfAfterMinimumDisplayPeriod(): void {\n        if (this.in_progress && this.canHideSpinner) {\n            this.in_progress = false;\n        }\n    }\n\n    private setSpinner(): void {\n        if (this.in_progress) {\n            this.canHideSpinner = false;\n            setTimeout(() => {\n                this.canHideSpinner = true;\n                this.hideSpinnerIfAfterMinimumDisplayPeriod();\n            }, this.spinner_delay_ms);\n        } else {\n            this.hideSpinnerIfAfterMinimumDisplayPeriod();\n        }\n    }\n\n    handleClick(event: Event): void {\n        this.atuiClick.emit(event);\n        if (this.submit) {\n            this.el.closest('form').requestSubmit();\n        }\n    }\n\n    handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n            this.atuiClick.emit(event);\n            if (this.submit) {\n                this.el.closest('form').requestSubmit();\n            }\n        }\n    }\n\n    componentWillUpdate(): void {\n        this.setSpinner();\n    }\n\n    render() {\n        const classname = variants({\n            disabled: this.disabled,\n            size: this.size,\n            type: this.type,\n            hasLabel: !!this.label,\n        });\n        const focusIndicatorClassname = focusIndicatorVariants({\n            type: this.type,\n        });\n\n        return (\n            <Host\n                class={classname}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={(event) => this.handleKeyDown(event)}\n                onClick={(event) => this.handleClick(event)}\n            >\n                <div class=\"z-20 flex h-full w-full items-center justify-center gap-4\">\n                    {this.in_progress && (\n                        <atui-loading\n                            class=\"absolute\"\n                            size=\"sm\"\n                            type={this.spinnerColour}\n                        />\n                    )}\n\n                    {this.icon && (\n                        <span\n                            class={`material-icons h-16 w-16 text-[16px] leading-[16px] ${this.in_progress ? 'invisible' : 'visible'}`}\n                            data-name=\"button-icon\"\n                        >\n                            {this.icon}\n                        </span>\n                    )}\n\n                    {this.label && (\n                        <span\n                            class={`leading-[16px] ${this.in_progress ? 'invisible' : 'visible'}`}\n                            data-name=\"button-label\"\n                        >\n                            {this.label}\n                        </span>\n                    )}\n                    <slot />\n\n                    {this.icon_right && (\n                        <span\n                            class={`material-icons h-16 w-16 text-[16px] leading-[16px] ${this.in_progress ? 'invisible w-0' : 'visible'}`}\n                            data-name=\"button-icon-right\"\n                        >\n                            {this.icon_right}\n                        </span>\n                    )}\n                </div>\n\n                <div\n                    data-name=\"focus-indicator\"\n                    role=\"presentation\"\n                    class={focusIndicatorClassname}\n                ></div>\n            </Host>\n        );\n    }\n}\n","@keyframes bounce-dots {\n    0%,\n    80%,\n    100% {\n        transform: scale(0);\n        opacity: 0.5;\n    }\n    40% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n@keyframes typing {\n    0%,\n    60%,\n    100% {\n        transform: translateY(0);\n        opacity: 0.4;\n    }\n    30% {\n        transform: translateY(-10px);\n        opacity: 1;\n    }\n}\n","import { Component, h, Prop } from '@stencil/core';\n\nexport type LoadingVariant = 'spinner' | 'dots' | 'typing' | 'wave';\nexport type LoadingType = 'default' | 'error' | 'secondary';\nexport type LoadingSize = 'sm' | 'md' | 'lg';\n\nconst loadingVariants = {\n    type: {\n        default: 'text-primary',\n        error: 'text-destructive-foreground',\n        secondary: 'text-primary-foreground',\n    },\n    size: {\n        sm: 'text-sm',\n        md: 'text-base',\n        lg: 'text-lg',\n    },\n    spinnerSize: {\n        sm: 'h-16 w-16 border',\n        md: 'h-32 w-32 border-2',\n        lg: 'h-64 w-64 border-4',\n    },\n};\n\n/**\n * @category Feedback\n * @description A versatile loading component with multiple animation types including spinner, dots, typing, wave, and thinking indicators. Perfect for indicating ongoing processes or data fetching states across different contexts.\n */\n@Component({\n    tag: 'atui-loading',\n    styleUrl: 'atui-loading.scss',\n    shadow: false,\n})\nexport class AtuiLoadingComponent {\n    /**\n     * Type of loading animation to display\n     */\n    @Prop()\n    variant: LoadingVariant = 'spinner';\n\n    /**\n     * Visual type/color of the loading indicator\n     */\n    @Prop()\n    type: LoadingType = 'default';\n\n    /**\n     * Size of the loading indicator\n     */\n    @Prop()\n    size: LoadingSize = 'md';\n\n    /**\n     * Custom text to display with text-based animations\n     */\n    @Prop()\n    text: string = 'Loading';\n\n    get typeClasses() {\n        return loadingVariants.type[this.type];\n    }\n\n    get sizeClasses() {\n        return loadingVariants.size[this.size];\n    }\n\n    get spinnerSizeClasses() {\n        return loadingVariants.spinnerSize[this.size];\n    }\n\n    private renderSpinner() {\n        const borderColor =\n            this.type === 'default'\n                ? 'border-primary'\n                : this.type === 'error'\n                  ? 'border-destructive-foreground'\n                  : 'border-primary-foreground';\n\n        return (\n            <div\n                class={`${borderColor} ${this.spinnerSizeClasses} inline-block animate-spin rounded-full border-solid border-e-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]`}\n                role=\"status\"\n                aria-label=\"Loading\"\n            />\n        );\n    }\n\n    private renderTyping() {\n        return (\n            <div\n                class={`flex items-center gap-4`}\n                role=\"status\"\n                aria-label=\"Typing\"\n            >\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-red-500\"\n                    style={{ animationDelay: '0ms' }}\n                ></span>\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-red-500\"\n                    style={{ animationDelay: '250ms' }}\n                ></span>\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-red-500\"\n                    style={{ animationDelay: '500ms' }}\n                ></span>\n            </div>\n        );\n    }\n\n    render() {\n        switch (this.variant) {\n            case 'typing':\n                return this.renderTyping();\n            case 'spinner':\n            default:\n                return this.renderSpinner();\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]}