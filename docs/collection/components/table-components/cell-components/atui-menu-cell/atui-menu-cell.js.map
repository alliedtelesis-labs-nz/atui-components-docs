{"version":3,"file":"atui-menu-cell.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/atui-menu-cell/atui-menu-cell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAenE;;;GAGG;AAMH,MAAM,OAAO,qBAAqB;IAI9B,IAAI,CAAC,MAA0B;QAC3B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,CAAC;QACL,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,MAAM;;QACF,MAAM,OAAO,GACT,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,KAAK,UAAU;YACrC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;QAE9B,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,gCAAgC;YACxC,kEACI,KAAK,EAAC,MAAM,EACZ,MAAM,EAAE,IAAI;gBAEZ,oEACI,IAAI,EAAC,eAAe,EACpB,IAAI,EAAE,MAAA,IAAI,CAAC,MAAM,CAAC,IAAI,mCAAI,WAAW,EACrC,IAAI,EAAC,cAAc,GACrB;gBACF,4DACI,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,eAAe,IAEpB,OAAO;oBACJ,OAAO,CAAC,GAAG,CACP,CAAC,MAAM,EAAE,EAAE,CACP,OAAO,MAAM,KAAK,QAAQ;wBAC1B,CAAC,MAAM,CAAC,WAAW;4BACnB,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;4BACpC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC,CACrB;4BACI,WACI,IAAI,EAAC,iBAAiB,EACtB,KAAK,EAAC,QAAQ;gCAEd,sBACI,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,QAAQ,EAAE,IAAI,EACd,OAAO,EAAE,GAAG,EAAE;wCACV,IACI,MAAM,CAAC,SAAS;4CAChB,SAAS,EACX,CAAC;4CACC,MAAM,CAAC,SAAS,CACZ,IAAI,CAAC,MAAM,CACd,CAAC;wCACN,CAAC;oCACL,CAAC,GACa,CAChB;4BACN,YAAM,IAAI,EAAC,iBAAiB,IACvB,MAAM,CAAC,eAAe,CACpB,CACI,CAClB,CAAC,CAAC,CAAC,CACA,sBACI,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,QAAQ,EACJ,MAAM,CAAC,WAAW;gCACd,CAAC,CAAC,MAAM,CAAC,WAAW,CACd,IAAI,CAAC,MAAM,CAAC,IAAI,CACnB;gCACH,CAAC,CAAC,KAAK,EAEf,OAAO,EAAE,GAAG,EAAE;gCACV,IACI,MAAM,CAAC,SAAS;oCAChB,SAAS,EACX,CAAC;oCACC,MAAM,CAAC,SAAS,CACZ,IAAI,CAAC,MAAM,CACd,CAAC;gCACN,CAAC;4BACL,CAAC,GACa,CACrB,CAAC,CACT,CACH,CACE,CACT,CACV,CAAC;IACN,CAAC;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\n\nexport interface MenuAction {\n    title: string;\n    onTrigger: (params: ICellRendererParams) => void;\n    getDisabled?: (data: any) => boolean;\n    disabledTooltip?: string;\n}\n\nexport interface AtuiMenuCellParams extends ICellRendererParams {\n    icon?: string;\n    actions: MenuAction[] | ((params: ICellRendererParams) => MenuAction[]);\n}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a menu.\n */\n\n@Component({\n    tag: 'atui-menu-cell',\n    shadow: false,\n})\nexport class AtuiMenuCellComponent implements ICellRendererComp {\n    @Element() el;\n    @State() params: AtuiMenuCellParams;\n\n    init(params: AtuiMenuCellParams): void {\n        this.params = params;\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(_): boolean {\n        return false;\n    }\n\n    render() {\n        const actions =\n            typeof this.params.actions === 'function'\n                ? this.params.actions(this.params)\n                : this.params.actions;\n\n        return (\n            <Host class=\"flex h-full items-center gap-4\">\n                <atui-menu\n                    width=\"auto\"\n                    portal={true}\n                >\n                    <atui-button\n                        type=\"secondaryText\"\n                        icon={this.params.icon ?? 'more_vert'}\n                        slot=\"menu-trigger\"\n                    />\n                    <div\n                        slot=\"menu-content\"\n                        class=\"flex flex-col\"\n                    >\n                        {actions &&\n                            actions.map(\n                                (action) =>\n                                    typeof action === 'object' &&\n                                    (action.getDisabled &&\n                                    action.getDisabled(this.params.data) &&\n                                    action.disabledTooltip ? (\n                                        <atui-tooltip>\n                                            <div\n                                                slot=\"tooltip-trigger\"\n                                                class=\"w-full\"\n                                            >\n                                                <atui-menu-item\n                                                    label={action.title}\n                                                    disabled={true}\n                                                    onClick={() => {\n                                                        if (\n                                                            action.onTrigger !==\n                                                            undefined\n                                                        ) {\n                                                            action.onTrigger(\n                                                                this.params,\n                                                            );\n                                                        }\n                                                    }}\n                                                ></atui-menu-item>\n                                            </div>\n                                            <span slot=\"tooltip-content\">\n                                                {action.disabledTooltip}\n                                            </span>\n                                        </atui-tooltip>\n                                    ) : (\n                                        <atui-menu-item\n                                            label={action.title}\n                                            disabled={\n                                                action.getDisabled\n                                                    ? action.getDisabled(\n                                                          this.params.data,\n                                                      )\n                                                    : false\n                                            }\n                                            onClick={() => {\n                                                if (\n                                                    action.onTrigger !==\n                                                    undefined\n                                                ) {\n                                                    action.onTrigger(\n                                                        this.params,\n                                                    );\n                                                }\n                                            }}\n                                        ></atui-menu-item>\n                                    )),\n                            )}\n                    </div>\n                </atui-menu>\n            </Host>\n        );\n    }\n}\n"]}