{"version":3,"file":"atui-menu-cell.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/atui-menu-cell/atui-menu-cell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAGnE;;;GAGG;AAMH,MAAM,OAAO,qBAAqB;IAI9B,IAAI,CAAC,MAAM;QACP,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,CAAC;QACL,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,MAAM;;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,gCAAgC;YACvC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,+DAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAQ;YACtD;gBACI,oEACI,IAAI,EAAC,eAAe,EACpB,IAAI,EAAE,MAAA,IAAI,CAAC,MAAM,CAAC,IAAI,mCAAI,WAAW,EACrC,IAAI,EAAC,cAAc,GACrB;gBACF,4DACI,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,8CAA8C,IAEnD,IAAI,CAAC,MAAM,CAAC,OAAO;oBAChB,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;;wBAC/B,OAAA,OAAO,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC,CACzB,oBACI,UAAU,EACN,MAAM,CAAC,WAAW;gCACd,CAAC,CAAC,MAAM,CAAC,WAAW,CACd,IAAI,CAAC,MAAM,CAAC,IAAI,CACnB;gCACH,CAAC,CAAC,KAAK;4BAGf,mBACI,KAAK,EAAC,wBAAwB,EAC9B,IAAI,EAAC,eAAe,EACpB,KAAK,EAAE,MAAM,CAAC,KAAK,EACnB,IAAI,EAAC,iBAAiB,EACtB,QAAQ,EACJ,MAAM,CAAC,WAAW;oCACd,CAAC,CAAC,MAAM,CAAC,WAAW,CACd,IAAI,CAAC,MAAM,CAAC,IAAI,CACnB;oCACH,CAAC,CAAC,KAAK,EAEf,OAAO,EAAE,CAAC,MAAM,EAAE,EAAE;oCAChB,IACI,MAAM,CAAC,SAAS;wCAChB,SAAS;wCAET,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gCACjC,CAAC,GACU;4BACf,YAAM,IAAI,EAAC,iBAAiB,IACvB,MAAA,MAAM,CAAC,eAAe,mCAAI,EAAE,CAC1B,CACI,CAClB,CAAC,CAAC,CAAC,CACA,YAAM,KAAK,EAAC,MAAM,IAAE,MAAM,CAAQ,CACrC,CAAA;qBAAA,CACJ,CACH,CACE,CACT,CACV,CAAC;IACN,CAAC;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp } from 'ag-grid-community';\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a menu.\n */\n\n@Component({\n    tag: 'atui-menu-cell',\n    shadow: false,\n})\nexport class AtuiMenuCellComponent implements ICellRendererComp {\n    @Element() el;\n    @State() params;\n\n    init(params): void {\n        this.params = params;\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(_): boolean {\n        return false;\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center gap-4\">\n                {this.params.value && <span>{this.params.value}</span>}\n                <atui-menu>\n                    <atui-button\n                        type=\"secondaryText\"\n                        icon={this.params.icon ?? 'more_vert'}\n                        slot=\"menu-trigger\"\n                    />\n                    <div\n                        slot=\"menu-content\"\n                        class=\"flex max-h-120 w-full flex-col overflow-auto\"\n                    >\n                        {this.params.actions &&\n                            this.params.actions.map((action) =>\n                                typeof action === 'object' ? (\n                                    <atui-tooltip\n                                        is_visible={\n                                            action.getDisabled\n                                                ? action.getDisabled(\n                                                      this.params.data,\n                                                  )\n                                                : false\n                                        }\n                                    >\n                                        <atui-button\n                                            class=\"w-full *:justify-start\"\n                                            type=\"secondaryText\"\n                                            label={action.title}\n                                            slot=\"tooltip-trigger\"\n                                            disabled={\n                                                action.getDisabled\n                                                    ? action.getDisabled(\n                                                          this.params.data,\n                                                      )\n                                                    : false\n                                            }\n                                            onClick={(params) => {\n                                                if (\n                                                    action.onTrigger !==\n                                                    undefined\n                                                )\n                                                    action.onTrigger(params);\n                                            }}\n                                        ></atui-button>\n                                        <span slot=\"tooltip-content\">\n                                            {action.disabledTooltip ?? ''}\n                                        </span>\n                                    </atui-tooltip>\n                                ) : (\n                                    <span class=\"py-4\">{action}</span>\n                                ),\n                            )}\n                    </div>\n                </atui-menu>\n            </Host>\n        );\n    }\n}\n"]}