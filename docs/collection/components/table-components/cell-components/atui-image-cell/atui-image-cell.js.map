{"version":3,"file":"atui-image-cell.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/atui-image-cell/atui-image-cell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAcnE;;;GAGG;AAMH,MAAM,OAAO,aAAa;IAMtB,IAAI,CAAC,MAAkB;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;QACtC,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;QAE5C,IAAI,MAAM,CAAC,cAAc,EAAE,CAAC;YACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC1D,CAAC;IACL,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,MAAkB;QACtB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,UAAU,CAAC,QAAa;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;IAChC,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,yDAAyD,IAChE,IAAI,CAAC,WAAW,IAAI,CACjB,qEAAc,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe;YACnD,4DAAK,KAAK,EAAC,mBAAmB;gBAC1B,4DACI,GAAG,EAAE,IAAI,CAAC,WAAW,EACrB,KAAK,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,GAC3B,CACA;YAEN,6DAAM,IAAI,EAAC,iBAAiB,IACvB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CACtC,CACI,CAClB,CACE,CACV,CAAC;IACN,CAAC;;;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport {\n    GetImageSourceFunction,\n    ITooltipCell,\n} from '../../../../types/table-cells';\n\nexport interface ImageCell extends ITooltipCell {\n    imageSource?: string;\n    getImageSource?: GetImageSourceFunction;\n}\n\ninterface InitParams extends ImageCell, ICellRendererParams {}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying an image.\n */\n\n@Component({\n    tag: 'atui-image-cell',\n    shadow: false,\n})\nexport class AtuiImageCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() params: InitParams;\n    @State() imageSource: string;\n    @State() getImageSource: GetImageSourceFunction;\n\n    init(params: InitParams): void {\n        this.params = params;\n        this.imageSource = params.imageSource;\n        this.getImageSource = params.getImageSource;\n\n        if (params.getImageSource) {\n            this.imageSource = params.getImageSource(params.data);\n        }\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: InitParams): boolean {\n        this.updateCell(params.data);\n        return true;\n    }\n\n    protected updateCell(newValue: any) {\n        this.params.data = newValue;\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center overflow-hidden leading-[100%]\">\n                {this.imageSource && (\n                    <atui-tooltip is_visible={!!this.params.generateTooltip}>\n                        <div class=\"flex items-center\">\n                            <img\n                                src={this.imageSource}\n                                style={{ height: '30px' }}\n                            />\n                        </div>\n\n                        <span slot=\"tooltip-content\">\n                            {this.params.generateTooltip(this.params)}\n                        </span>\n                    </atui-tooltip>\n                )}\n            </Host>\n        );\n    }\n}\n"]}