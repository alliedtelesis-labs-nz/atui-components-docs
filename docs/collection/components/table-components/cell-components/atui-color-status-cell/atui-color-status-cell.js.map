{"version":3,"file":"atui-color-status-cell.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/atui-color-status-cell/atui-color-status-cell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAcnE;;;GAGG;AAKH,MAAM,OAAO,mBAAmB;IAJhC;QAOa,SAAI,GAAe,UAAU,CAAC;KA6B1C;IA3BG,IAAI,CAAC,MAA6B;QAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,MAA6B;QACjC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACjD,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,MAAM;QACF,MAAM,aAAa,GAAG;YAClB,KAAK,EAAE,eAAe;YACtB,OAAO,EAAE,iBAAiB;YAC1B,OAAO,EAAE,iBAAiB;YAC1B,QAAQ,EAAE,mBAAmB;SAChC,CAAC;QAEF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,0BAA0B;YAClC,4DAAK,KAAK,EAAE,iBAAiB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAQ,CAC5D,CACV,CAAC;IACN,CAAC;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\n\nexport type StatusType = 'disabled' | 'success' | 'warning' | 'error';\n\nexport interface ColorStatusCellData {\n    status: StatusType;\n}\n\nexport interface ColorStatusCellParams\n    extends ICellRendererParams<ColorStatusCellData> {\n    mapValueToStatus: (data: any) => StatusType;\n}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a color status indicator based on predefined types\n */\n@Component({\n    tag: 'atui-color-status-cell',\n    shadow: false,\n})\nexport class AtuiColorStatusCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n\n    @State() type: StatusType = 'disabled';\n\n    init(params: ColorStatusCellParams): void {\n        this.type = params.mapValueToStatus(params.data);\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ColorStatusCellParams): boolean {\n        this.type = params.mapValueToStatus(params.data);\n        return true;\n    }\n\n    render() {\n        const statusClasses = {\n            error: 'bg-error-base',\n            warning: 'bg-warning-base',\n            success: 'bg-success-base',\n            disabled: 'bg-disabled-light',\n        };\n\n        return (\n            <Host class=\"flex h-full items-center\">\n                <div class={`h-full w-full ${statusClasses[this.type]}`}></div>\n            </Host>\n        );\n    }\n}\n"]}