{"version":3,"file":"atui-checkbox-cell.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/atui-checkbox-cell/atui-checkbox-cell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAGnE;;;GAGG;AAKH,MAAM,OAAO,yBAAyB;IAIlC,IAAI,CAAC,MAAM;QACP,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,EAAE,CAAC;IAC3B,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,MAAM;QACV,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,QAAQ,CAAC,OAAgB;QACrB,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;YACxB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,EAAE,CAAC;QACpC,CAAC;IACL,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,0BAA0B;YAClC,sEACI,KAAK,EAAC,oBAAoB,EAC1B,QAAQ,EACJ,IAAI,CAAC,MAAM,CAAC,WAAW;oBACnB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC3C,CAAC,CAAC,KAAK,EAEf,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,EACxB,YAAY,EAAE,CAAC,KAAkB,EAAE,EAAE,CACjC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,GAElB,CACd,CACV,CAAC;IACN,CAAC;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp } from 'ag-grid-community';\n\n/**\n * @category Table Cell\n * @description A checkbox cell component for table row selection and boolean data display. Provides accessible selection controls within data tables.\n */\n@Component({\n    tag: 'atui-checkbox-cell',\n    shadow: false,\n})\nexport class AtuiCheckboxCellComponent implements ICellRendererComp {\n    @Element() el;\n    @State() params;\n\n    init(params): void {\n        this.params = params;\n        this.params.api.refreshHeader();\n        this.params.width = 60;\n    }\n\n    getGui(): HTMLAtuiCheckboxCellElement {\n        return this.el;\n    }\n\n    refresh(params): boolean {\n        this.params = params;\n        return true;\n    }\n\n    setValue(checked: boolean): void {\n        if (checked !== undefined) {\n            this.params.setValue(checked);\n            this.params.api.refreshHeader();\n        }\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center\">\n                <atui-checkbox\n                    class=\"w-auto self-center\"\n                    disabled={\n                        this.params.getDisabled\n                            ? this.params.getDisabled(this.params.data)\n                            : false\n                    }\n                    value={this.params.value}\n                    onAtuiChange={(event: CustomEvent) =>\n                        this.setValue(event.detail)\n                    }\n                ></atui-checkbox>\n            </Host>\n        );\n    }\n}\n"]}