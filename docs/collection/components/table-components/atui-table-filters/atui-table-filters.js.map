{"version":3,"file":"atui-table-filters.js","sourceRoot":"","sources":["../../../../src/components/table-components/atui-table-filters/atui-table-filters.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n * @internal\n */\n\nexport interface FilterEvent {\n    id: string;\n    value: string;\n}\n\n@Component({\n    tag: 'atui-table-filters',\n    shadow: false,\n})\nexport class AtuiTableFilters {\n    /**\n     * Column definitions used in your atui-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected columns and filter values\n     */\n    @Prop({ mutable: true })\n    selected: { id: string; value: string }[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtuiTableFiltersElement;\n\n    /**\n     * Emits id of column and filter value on change.\n     */\n    @Event() atuiChange: EventEmitter<FilterEvent[]>;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    filterChangeHandler(event: CustomEvent, columnId: string) {\n        event.stopPropagation();\n        this.selected = this.selected.map((column) => {\n            if (column.id === columnId)\n                return { id: column.id, value: event.detail };\n            return column;\n        });\n        this.atuiChange.emit(this.selected);\n    }\n\n    clearFilters = () => {\n        this.selected = [];\n        this.atuiChange.emit([{ id: '', value: '' }]);\n    };\n\n    clearSingleFilter = (columnId: string) => {\n        this.selected = this.selected.filter(\n            (column) => column.id !== columnId,\n        );\n        this.atuiChange.emit(this.selected);\n    };\n\n    render() {\n        return (\n            this.col_defs && (\n                <Host class=\"flex items-start gap-8\">\n                    <div class=\"flex min-h-[36px] flex-wrap items-end gap-8 rounded-md bg-surface-0 p-8\">\n                        {!this.selected.length && (\n                            <p class=\"text-light\">0 Filters</p>\n                        )}\n                        {this.selected.map((column) => (\n                            <div class=\"flex items-center gap-2\">\n                                <atui-input\n                                    class=\"w-input-sm\"\n                                    label={column.id}\n                                    prefix={column.id + ': '}\n                                    value={column.value}\n                                    onAtuiChange={(event: CustomEvent) =>\n                                        this.filterChangeHandler(\n                                            event,\n                                            column.id,\n                                        )\n                                    }\n                                >\n                                    <div slot=\"input-actions\">\n                                        <atui-button\n                                            icon=\"cancel_outline\"\n                                            type=\"secondaryText\"\n                                            size=\"sm\"\n                                            onClick={() =>\n                                                this.clearSingleFilter(\n                                                    column.id,\n                                                )\n                                            }\n                                            data-name={`filter-clear-${column.id}`}\n                                        ></atui-button>\n                                    </div>\n                                </atui-input>\n                            </div>\n                        ))}\n\n                        {this.selected.length > 0 && (\n                            <atui-button\n                                type=\"secondaryText\"\n                                label=\"Clear All\"\n                                onClick={this.clearFilters}\n                                data-name=\"filter-clear-all\"\n                            />\n                        )}\n                    </div>\n                </Host>\n            )\n        );\n    }\n}\n"]}