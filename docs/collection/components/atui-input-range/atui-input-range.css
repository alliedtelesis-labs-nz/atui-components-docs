.range-slider {
  --primary-color: var(--token-state-active-foreground);
  --value-offset-y: var(--ticks-gap);
  --value-active-color: var(--token-color-white);
  --value-background: transparent;
  --value-background-hover: var(--primary-color);
  --value-font: 700 var(--token-font-size-xs) var(--token-font-family-base);
  --fill-color: var(--primary-color);
  --progress-background: #eee;
  --progress-radius: 20px;
  --progress-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1) inset;
  --track-height: calc(var(--thumb-size) / 2);
  --min-max-font: var(--token-font-size-xs) var(--token-font-family-base);
  --min-max-opacity: 0.5;
  --min-max-x-offset: 10%;
  --thumb-size: 20px;
  --thumb-color: white;
  --thumb-shadow: 0 0 3px rgba(0, 0, 0, 0.4),
      0 0 1px rgba(0, 0, 0, 0.5) inset, 0 0 0 99px var(--thumb-color) inset;
  --thumb-shadow-active: 0 0 0 calc(var(--thumb-size) / 4) inset
          var(--thumb-color),
      0 0 0 99px var(--primary-color) inset, 0 0 3px rgba(0, 0, 0, 0.4);
  --thumb-shadow-hover: var(--thumb-shadow);
  --ticks-thickness: 1px;
  --ticks-height: 4px;
  --ticks-gap: 8px;
  --ticks-color: var(--token-text-disabled);
  --step: 1;
  --ticks-count: Calc(var(--max) - var(--min)) / var(--step);
  --maxTicksAllowed: 30;
  --too-many-ticks: Min(
      1,
      Max(var(--ticks-count) - var(--maxTicksAllowed), 0)
  );
  --x-step: Max(
      var(--step),
      var(--too-many-ticks) * (var(--max) - var(--min))
  );
  --tickInterval: 100/ ((var(--max) - var(--min)) / var(--step)) *
      var(--tickEvery, 1);
  --tickIntervalPerc: calc(
      (100% - var(--thumb-size)) /
          ((var(--max) - var(--min)) / var(--x-step)) * var(--tickEvery, 1)
  );
  --value-a: Clamp(var(--min), var(--value, 0), var(--max));
  --value-b: var(--value, 0);
  --text-value-a: var(--text-value, "");
  --completed-a: calc(
      (var(--value-a) - var(--min)) / (var(--max) - var(--min)) * 100
  );
  --completed-b: calc(
      (var(--value-b) - var(--min)) / (var(--max) - var(--min)) * 100
  );
  --ca: Min(var(--completed-a), var(--completed-b));
  --cb: Max(var(--completed-a), var(--completed-b));
  width: 100%;
  display: inline-block;
  height: 22px;
  background: linear-gradient(to right, var(--ticks-color) var(--ticks-thickness), transparent 1px) repeat-x;
  background-size: var(--tickIntervalPerc) var(--ticks-height);
  background-position-x: calc(var(--thumb-size) / 2 - var(--ticks-thickness) / 2);
  background-position-y: var(--flip-y, bottom);
  padding-bottom: var(--flip-y, var(--ticks-gap));
  padding-top: calc(var(--flip-y) * var(--ticks-gap));
  position: relative;
  z-index: 1;
}
.range-slider::before, .range-slider::after {
  --offset: calc(var(--thumb-size) / 2);
  content: counter(x);
  display: var(--show-min-max, block);
  font: var(--min-max-font);
  position: absolute;
  top: 25px;
  transform: translateX(calc(var(--min-max-x-offset) * var(--before, -1) * -1));
  pointer-events: none;
  color: var(--ticks-color);
}
.range-slider::before {
  --before: 1;
  --at-edge: var(--thumb-close-to-min);
  counter-reset: x var(--min);
  left: var(--offset);
}
.range-slider::after {
  --at-edge: var(--thumb-close-to-max);
  counter-reset: x var(--max);
  right: var(--offset);
}
.range-slider__progress {
  --start-end: calc(var(--thumb-size) / 2);
  --clip-end: calc(100% - (var(--cb)) * 1%);
  --clip-start: calc(var(--ca) * 1%);
  --clip: inset(-20px var(--clip-end) -20px var(--clip-start));
  position: absolute;
  left: var(--start-end);
  right: var(--start-end);
  top: calc(var(--ticks-gap) * var(--flip-y, 0) + var(--thumb-size) / 2 - var(--track-height) / 2);
  height: calc(var(--track-height));
  background: var(--progress-background, #eee);
  pointer-events: none;
  z-index: -1;
  border-radius: var(--progress-radius);
}
.range-slider__progress::before {
  content: "";
  position: absolute;
  left: 0;
  right: 0;
  clip-path: var(--clip);
  top: 0;
  bottom: 0;
  background: var(--fill-color, black);
  box-shadow: var(--progress-flll-shadow);
  z-index: 1;
  border-radius: inherit;
}
.range-slider__progress::after {
  content: "";
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  box-shadow: var(--progress-shadow);
  pointer-events: none;
  border-radius: inherit;
}
.range-slider > input {
  -webkit-appearance: none;
  width: 100%;
  height: var(--track-height);
  margin: 0;
  position: absolute;
  left: 0;
  top: 5px;
  cursor: -webkit-grab;
  cursor: grab;
  outline: none;
  background: none;
}
.range-slider > input:not(:only-of-type) {
  pointer-events: none;
}
.range-slider > input::-webkit-slider-thumb {
  appearance: none;
  height: var(--thumb-size);
  width: var(--thumb-size);
  transform: var(--thumb-transform);
  border-radius: var(--thumb-radius, 50%);
  background: var(--thumb-color);
  box-shadow: var(--thumb-shadow);
  border: 1px solid var(--token-border-med);
  border: none;
  pointer-events: auto;
  transition: 0.2s;
}
.range-slider > input::-moz-range-thumb {
  appearance: none;
  height: var(--thumb-size);
  width: var(--thumb-size);
  transform: var(--thumb-transform);
  border-radius: var(--thumb-radius, 50%);
  background: var(--thumb-color);
  box-shadow: var(--thumb-shadow);
  border: 1px solid var(--token-border-med);
  border: none;
  pointer-events: auto;
  transition: 0.2s;
}
.range-slider > input::-ms-thumb {
  appearance: none;
  height: var(--thumb-size);
  width: var(--thumb-size);
  transform: var(--thumb-transform);
  border-radius: var(--thumb-radius, 50%);
  background: var(--thumb-color);
  box-shadow: var(--thumb-shadow);
  border: 1px solid var(--token-border-med);
  border: none;
  pointer-events: auto;
  transition: 0.2s;
}
.range-slider > input:focus::-webkit-slider-thumb {
  outline: 2px solid var(--primary-color);
  -webkit-box-shadow: 0px 0px 0px 5px rgba(var(--primary-color), 0.3);
  -moz-box-shadow: 0px 0px 0px 5px rgba(var(--primary-color), 0.3);
  box-shadow: 0px 0px 0px 5px rgba(var(--primary-color), 0.3);
}
.range-slider > input:focus::-moz-range-thumb {
  outline: 2px solid var(--primary-color);
}
.range-slider > input:focus::-ms-thumb {
  outline: 2px solid var(--primary-color);
}
.range-slider > input:hover + output {
  --value-background: var(--value-background-hover);
  --y-offset: -5px;
  opacity: 1;
  color: var(--value-active-color);
  box-shadow: 0 0 0 3px var(--value-background);
}
.range-slider > input:active {
  cursor: grabbing;
  z-index: 2;
}
.range-slider > input:active + output {
  opacity: 1;
  transition: 0s;
}
.range-slider > input:active ::-webkit-slider-thumb {
  border: 1px solid var(--primay-color);
  box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
  -webkit-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
  -moz-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
}
.range-slider > input:active ::-moz-range-thumb {
  border: 1px solid var(--primay-color);
  box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
  -webkit-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
  -moz-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
}
.range-slider > input:active ::-ms-thumb {
  border: 1px solid var(--primay-color);
  box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
  -webkit-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
  -moz-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);
}
.range-slider > input:nth-of-type(1) {
  --is-left-most: Clamp(
      0,
      (var(--value-a) - var(--value-b)) * 99999,
      1
  );
}
.range-slider > input:nth-of-type(1) + output {
  --value: var(--value-a);
  --x-offset: calc(var(--completed-a) * -1%);
}
.range-slider > input:nth-of-type(1) + output:not(:only-of-type) {
  --flip: calc(var(--thumbs-too-close) * -1);
}
.range-slider > input:nth-of-type(1) + output::after {
  content: var(--prefix, "") var(--text-value-a) var(--suffix, "");
}
.range-slider > input:nth-of-type(2) {
  --is-left-most: Clamp(
      0,
      (var(--value-b) - var(--value-a)) * 99999,
      1
  );
}
.range-slider > input:nth-of-type(2) + output {
  --value: var(--value-b);
}
.range-slider > input:only-of-type ~ .range-slider__progress {
  --clip-start: 0;
}
.range-slider > input + output {
  --flip: -1;
  --x-offset: calc(var(--completed-b) * -1%);
  --pos: calc(
      ((var(--value) - var(--min)) / (var(--max) - var(--min))) * 100%
  );
  opacity: 0;
  pointer-events: none;
  position: absolute;
  z-index: 5;
  background: var(--value-background);
  border-radius: 10px;
  padding: 2px 4px;
  left: var(--pos);
  transform: translate(var(--x-offset), calc(150% * var(--flip) - (var(--y-offset, 0px) + var(--value-offset-y)) * var(--flip)));
  transition: all 0.12s ease-out, left 0s;
}
.range-slider > input + output::after {
  content: var(--prefix, "") var(--text-value-b) var(--suffix, "");
  font: var(--value-font);
}