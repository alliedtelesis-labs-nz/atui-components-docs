{"version":3,"file":"atui-button-group-option.js","sourceRoot":"","sources":["../../../../src/components/atui-button-group/atui-button-group-option/atui-button-group-option.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,CAAC,EACD,IAAI,EACJ,OAAO,EACP,KAAK,EAEL,KAAK,GACR,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,GAAG,EAAE,MAAM,0BAA0B,CAAC;AAG/C,MAAM,QAAQ,GAAG,GAAG,CAChB,yTAAyT,EACzT;IACI,QAAQ,EAAE;QACN,MAAM,EAAE;YACJ,IAAI,EAAE,qCAAqC;YAC3C,KAAK,EAAE,WAAW;SACrB;QACD,QAAQ,EAAE;YACN,IAAI,EAAE,uDAAuD;YAC7D,KAAK,EAAE,IAAI;SACd;QACD,YAAY,EAAE;YACV,IAAI,EAAE,uDAAuD;YAC7D,KAAK,EAAE,IAAI;SACd;KACJ;CACJ,CACJ,CAAC;AAEF;;;GAGG;AAMH,MAAM,OAAO,qBAAqB;IA4C9B,KAAK,CAAC,gBAAgB;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAC3B,mBAAmB,CACQ,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;IAChD,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YAChB,aAAa,EAAE,KAAK;YACpB,aAAa,EAAE,0BAA0B;YACzC,OAAO,EAAE,IAAI,CAAC,EAAE;SACnB,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACF,MAAM,SAAS,GAAG,QAAQ,CAAC;YACvB,MAAM,EAAE,IAAI,CAAC,SAAS;YACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,aAAa;SACnC,CAAC,CAAC;QAEH,OAAO,CACH,+DACI,KAAK,EAAE,SAAS,EAChB,IAAI,EAAC,OAAO,EACZ,QAAQ,EAAE,CAAC,kBACG,IAAI,CAAC,SAAS,EAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,eACjC,qBAAqB,EAC/B,IAAI,EAAC,QAAQ;YAEb,6DAAM,IAAI,EAAC,MAAM,GAAG;YACnB,IAAI,CAAC,KAAK,CACN,CACZ,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Element,\n    Event,\n    EventEmitter,\n    State,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\nimport { AtuiEvent } from '../../../types/events';\n\nconst variants = cva(\n    'relative flex h-[30px] items-center gap-4 rounded-md border border-solid border-transparent px-12 py-8 font-normal leading-none outline-none transition-colors duration-300 ease-in-out focus-visible:border-active-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/40 focus-visible:ring-offset-0',\n    {\n        variants: {\n            active: {\n                true: 'bg-active-foreground/15 text-active',\n                false: 'text-dark',\n            },\n            disabled: {\n                true: 'pointer-events-none text-disabled hover:text-disabled',\n                false: null,\n            },\n            hostDisabled: {\n                true: 'pointer-events-none text-disabled hover:text-disabled',\n                false: null,\n            },\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A button group option component for the button group.\n */\n\n@Component({\n    tag: 'atui-button-group-option',\n    shadow: false,\n})\nexport class AtuiButtonGroupOption {\n    /**\n     * ID of the button element and its option\n     */\n    @Prop()\n    option_id?: string;\n\n    /**\n     * String to be displayed in the button\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Icon to be displayed in the button\n     */\n    @Prop()\n    icon: string;\n\n    /**\n     * Will disable interaction if set\n     */\n    @Prop()\n    disabled: boolean;\n\n    /**\n     * Will apply active styling to the button\n     */\n    @Prop()\n    is_active: boolean;\n\n    @Element() el;\n\n    /**\n     * Emits when the button is clicked\n     */\n    @Event()\n    atuiClick: EventEmitter<AtuiEvent>;\n\n    @State()\n    host_disabled: boolean;\n\n    private provider: HTMLAtuiButtonGroupElement;\n\n    async componentDidLoad() {\n        this.provider = this.el.closest(\n            'atui-button-group',\n        ) as HTMLAtuiButtonGroupElement;\n        this.host_disabled = this.provider.disabled;\n    }\n\n    handleClick(event: Event) {\n        this.is_active = true;\n        this.atuiClick.emit({\n            originalEvent: event,\n            componentType: 'atui-button-group-option',\n            element: this.el,\n        });\n    }\n\n    render() {\n        const classname = variants({\n            active: this.is_active,\n            disabled: this.disabled,\n            hostDisabled: this.host_disabled,\n        });\n\n        return (\n            <button\n                class={classname}\n                role=\"radio\"\n                tabindex={0}\n                aria-checked={this.is_active}\n                disabled={this.disabled}\n                onClick={(event) => this.handleClick(event)}\n                data-name=\"button-group-option\"\n                type=\"button\"\n            >\n                <slot name=\"icon\" />\n                {this.label}\n            </button>\n        );\n    }\n}\n"]}