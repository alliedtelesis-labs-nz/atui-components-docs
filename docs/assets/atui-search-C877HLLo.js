import{j as t,M as i}from"./index-uKwJqZOP.js";import{useMDXComponents as r}from"./index-ye-STgU3.js";import{ar as o}from"./MermaidMarkdown-COM3d1XX.js";import"./iframe-an26wWG3.js";import"./index-CfOrKyLd.js";import"./index-DrFu-skq.js";const s="# atui-search\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property      | Attribute     | Description                                            | Type     | Default     |\n| ------------- | ------------- | ------------------------------------------------------ | -------- | ----------- |\n| `hint_text`   | `hint_text`   | Hint text for the input, appears below the search bar. | `string` | `undefined` |\n| `info_text`   | `info_text`   | Tooltip description.                                   | `string` | `undefined` |\n| `label`       | `label`       | Label text above the search bar.                       | `string` | `undefined` |\n| `model`       | `model`       | String content of the search.                          | `string` | `undefined` |\n| `placeholder` | `placeholder` | Placeholder text inside the search component.          | `string` | `undefined` |\n\n\n## Events\n\n| Event        | Description                                                   | Type               |\n| ------------ | ------------------------------------------------------------- | ------------------ |\n| `atuiChange` | Emits an event when the input is changed. Used by atui-table. | `CustomEvent<any>` |\n\n\n## Dependencies\n\n### Used by\n\n - [atui-search-table](../table-components/atui-search-table)\n\n### Depends on\n\n- [atui-form-label](../atui-form-label)\n- [atui-button](../atui-button)\n\n### Graph\n```mermaid\ngraph TD;\n  atui-search --> atui-form-label\n  atui-search --> atui-button\n  atui-form-label --> atui-tooltip\n  atui-button --> atui-loading\n  atui-search-table --> atui-search\n  style atui-search fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n";function a(n){return t.jsxs(t.Fragment,{children:[t.jsx(i,{title:"Components/Search"}),`
`,t.jsx(o,{md:s})]})}function m(n={}){const{wrapper:e}={...r(),...n.components};return e?t.jsx(e,{...n,children:t.jsx(a,{...n})}):a()}export{m as default};
