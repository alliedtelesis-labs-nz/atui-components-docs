{"version":3,"names":["AtuiColorStatusCell","constructor","hostRef","this","type","init","params","mapValueToStatus","data","getGui","el","refresh","render","statusClasses","error","warning","success","disabled","h","Host","key","class"],"sources":["src/components/table-components/cell-components/atui-color-status-cell/atui-color-status-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\n\nexport type StatusType = 'disabled' | 'success' | 'warning' | 'error';\n\nexport interface ColorStatusCellData {\n    status: StatusType;\n}\n\nexport interface ColorStatusCellParams\n    extends ICellRendererParams<ColorStatusCellData> {\n    mapValueToStatus: (data: any) => StatusType;\n}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a color status indicator based on predefined types\n */\n@Component({\n    tag: 'atui-color-status-cell',\n    shadow: false,\n})\nexport class AtuiColorStatusCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n\n    @State() type: StatusType = 'disabled';\n\n    init(params: ColorStatusCellParams): void {\n        this.type = params.mapValueToStatus(params.data);\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ColorStatusCellParams): boolean {\n        this.type = params.mapValueToStatus(params.data);\n        return true;\n    }\n\n    render() {\n        const statusClasses = {\n            error: 'bg-error-base',\n            warning: 'bg-warning-base',\n            success: 'bg-success-base',\n            disabled: 'bg-disabled-light',\n        };\n\n        return (\n            <Host class=\"flex h-full items-center\">\n                <div class={`h-full w-full ${statusClasses[this.type]}`}></div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"+DAsBaA,EAAmB,MAJhC,WAAAC,CAAAC,G,UAOaC,KAAIC,KAAe,UA6B/B,CA3BG,IAAAC,CAAKC,GACDH,KAAKC,KAAOE,EAAOC,iBAAiBD,EAAOE,K,CAG/C,MAAAC,GACI,OAAON,KAAKO,E,CAGhB,OAAAC,CAAQL,GACJH,KAAKC,KAAOE,EAAOC,iBAAiBD,EAAOE,MAC3C,OAAO,I,CAGX,MAAAI,GACI,MAAMC,EAAgB,CAClBC,MAAO,gBACPC,QAAS,kBACTC,QAAS,kBACTC,SAAU,qBAGd,OACIC,EAACC,EAAK,CAAAC,IAAA,2CAAAC,MAAM,4BACRH,EAAA,OAAAE,IAAA,2CAAKC,MAAO,iBAAiBR,EAAcV,KAAKC,U","ignoreList":[]}