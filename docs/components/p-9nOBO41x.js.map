{"file":"p-9nOBO41x.js","mappings":";;MAkBa,UAAU,iBAAAA,kBAAA,CAAA,MAAA,UAAA,SAAAC,CAAA,CAAA;AAJvB,IAAA,WAAA,GAAA;;;AAKI;;AAEG;AAEH,QAAA,IAAQ,CAAA,QAAA,GAAa,eAAe;AAEpC;;AAEG;AAEH,QAAA,IAAQ,CAAA,QAAA,GAAG,IAAI;AAiDlB;AA/CG,IAAA,IAAI,aAAa,GAAA;AACb,QAAA,QAAQ,IAAI,CAAC,QAAQ;AACjB,YAAA,KAAK,eAAe;AAChB,gBAAA,QACI,CACI,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,uCAAuC,eACnC,uBAAuB,EAAA,EAEjC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,yCAAyC,EAAA,EAChD,CAAA,CAAA,MAAA,EAAA,EAAM,IAAI,EAAC,QAAQ,EAAA,CAAG,CACpB,EACN,CAAA,CAAA,KAAA,EAAA,EACI,KAAK,EAAE,CAAA,wBAAA,EAA2B,IAAI,CAAC,QAAQ,GAAG,eAAe,GAAG,iBAAiB,CAAA,CAAE,EAAA,EAEvF,CAAA,CAAA,MAAA,EAAA,EAAM,IAAI,EAAC,QAAQ,GAAG,CACpB,CACJ;AAEd,YAAA,KAAK,QAAQ;gBACT,QACI,CACI,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,sBAAsB,eAClB,gBAAgB,EAAA,EAE1B,CAAM,CAAA,MAAA,EAAA,EAAA,IAAI,EAAC,mBAAmB,EAAG,CAAA,EACjC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,oCAAoC,EAAA,EAC3C,CAAA,CAAA,MAAA,EAAA,EAAM,IAAI,EAAC,gBAAgB,GAAG,CAC5B,CACJ;AAEd,YAAA,KAAK,mBAAmB;AACpB,gBAAA,QACI,CACI,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,qCAAqC,eACjC,2BAA2B,EAAA,EAErC,CAAK,CAAA,KAAA,EAAA,EAAA,KAAK,EAAC,mCAAmC,EAAA,EAC1C,CAAQ,CAAA,MAAA,EAAA,IAAA,CAAA,CACN,CACJ;;;IAKtB,MAAM,GAAA;AACF,QAAA,OAAO,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EAAE,IAAI,CAAC,aAAa,CAAQ;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/atui-layout/atui-layout.tsx"],"sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\n\nexport type Template = 'content-container' | 'master-detail' | 'tabset';\n\n/**\n * @category Layout\n * @description A base layout component for structuring page content with flexible sections and responsive behavior. Provides foundation for consistent page layouts.\n *\n * @slot master - Used as the master element when template is master-detail\n * @slot detail - Used as the detail element when template is master-detail\n * @slot tabset-navigation - Used as the navigation element when template is tabset\n * @slot tabset-content - Used as the content element when template is tabset\n * @slot - Content when template is content-container\n */\n@Component({\n    tag: 'atui-layout',\n    shadow: false,\n})\nexport class AtuiLayout {\n    /**\n     * Template used to display content\n     */\n    @Prop()\n    template: Template = 'master-detail';\n\n    /**\n     * If overflow is allowed on the detail in master-detail\n     */\n    @Prop()\n    overflow = true;\n\n    get layoutElement(): any {\n        switch (this.template) {\n            case 'master-detail':\n                return (\n                    <div\n                        class=\"flex h-full flex-grow overflow-hidden\"\n                        data-name=\"wrapper-master-detail\"\n                    >\n                        <div class=\"flex w-sidebar flex-col overflow-hidden\">\n                            <slot name=\"master\" />\n                        </div>\n                        <div\n                            class={`flex flex-grow flex-col ${this.overflow ? 'overflow-auto' : 'overflow-hidden'}`}\n                        >\n                            <slot name=\"detail\" />\n                        </div>\n                    </div>\n                );\n            case 'tabset':\n                return (\n                    <div\n                        class=\"flex w-full flex-col\"\n                        data-name=\"wrapper-tabset\"\n                    >\n                        <slot name=\"tabset-navigation\" />\n                        <div class=\"flex w-full flex-col overflow-auto\">\n                            <slot name=\"tabset-content\" />\n                        </div>\n                    </div>\n                );\n            case 'content-container':\n                return (\n                    <div\n                        class=\"flex flex-grow justify-center py-64\"\n                        data-name=\"wrapper-content-container\"\n                    >\n                        <div class=\"flex max-w-3xl flex-grow flex-col\">\n                            <slot />\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    render() {\n        return <Host>{this.layoutElement}</Host>;\n    }\n}\n"],"version":3}