{"file":"p-B8CZQmb1.js","mappings":";;MAaa,qBAAqB,iBAAAA,kBAAA,CAAA,MAAA,qBAAA,SAAAC,CAAA,CAAA;;;;;AAK9B,IAAA,IAAI,CAAC,MAA2B,EAAA;AAC5B,QAAA,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM;AAExB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM;AACpB,QAAA,IAAI,CAAC,KAAK,GAAG,KAAK;;IAGtB,MAAM,GAAA;QACF,OAAO,IAAI,CAAC,EAAE;;AAGlB,IAAA,OAAO,CAAC,MAA2B,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;AAC7B,QAAA,OAAO,IAAI;;AAGP,IAAA,UAAU,CAAC,QAAwB,EAAA;AACvC,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ;AAC5B,QAAA,IAAI,CAAC,KAAK,GAAG,QAAQ;;IAGzB,MAAM,GAAA;;QACF,QACI,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACD,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,qCAAqC,EAAA,EAC5C,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,iCAAiC,EACvC,EAAA,CAAA,EAAA,GAAA,IAAI,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAA,KAAK,CAChB,EACN,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAC,sDAAsD,EAAA,EAC5D,MAAA,IAAI,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,MAAA,GAAA,MAAA,GAAA,EAAA,CAAE,QAAQ,CACnB,CACJ,CACH;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/table-components/cell-components/atui-title-subtitle-cell/atui-title-subtitle-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport { ITitleSubtitle } from '../../../../types/table-cells';\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a title and subtitle.\n */\n\n@Component({\n    tag: 'atui-title-subtitle-cell',\n    shadow: false,\n})\nexport class AtuiTitleSubtitleCell implements ICellRendererComp {\n    @Element() el;\n    @State() value: ITitleSubtitle;\n    @State() params: ICellRendererParams;\n\n    init(params: ICellRendererParams): void {\n        const { value } = params;\n\n        this.params = params;\n        this.value = value;\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICellRendererParams): boolean {\n        this.updateCell(params.value);\n        return true;\n    }\n\n    private updateCell(newValue: ITitleSubtitle) {\n        this.params.value = newValue;\n        this.value = newValue;\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"flex h-full flex-col justify-center\">\n                    <div class=\"truncate text-sm leading-normal\">\n                        {this.value?.title}\n                    </div>\n                    <div class=\"truncate text-xs font-normal leading-normal text-med\">\n                        {this.value?.subtitle}\n                    </div>\n                </div>\n            </Host>\n        );\n    }\n}\n"],"version":3}