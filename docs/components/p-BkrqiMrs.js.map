{"file":"p-BkrqiMrs.js","mappings":";;;MA4Ba,iBAAiB,iBAAAA,kBAAA,CAAA,MAAA,iBAAA,SAAAC,CAAA,CAAA;AAJ9B,IAAA,WAAA,GAAA;;;AAQa,QAAA,IAAW,CAAA,WAAA,GAAG,EAAE;AAsE5B;AAnEG,IAAA,IAAI,CAAC,MAAkB,EAAA;AACnB,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM;AACpB,QAAA,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW;QACrC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW;QACzD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,IAAI;QAEvC,IAAI,MAAM,CAAC,cAAc,IAAI,MAAM,CAAC,IAAI,EAAE;YACtC,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;;;IAI7D,MAAM,GAAA;QACF,OAAO,IAAI,CAAC,EAAE;;AAGlB,IAAA,OAAO,CAAC,MAA2B,EAAA;AAC/B,QAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC;AAC7B,QAAA,OAAO,IAAI;;AAGP,IAAA,UAAU,CAAC,QAAgB,EAAA;AAC/B,QAAA,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ;AAC5B,QAAA,IAAI,CAAC,IAAI,GAAG,QAAQ;;IAGxB,MAAM,GAAA;QACF,QACI,CAAC,CAAA,IAAI,EAAC,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,mCAAmC,EAAA,EAC3C,CAAA,CAAA,cAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,QAAQ,EAAC,OAAO,EAChB,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,eAAe,EAAA,EAEzC,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAC,mBAAmB,EACzB,IAAI,EAAC,iBAAiB,EAAA,EAErB,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,KAC3C,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,GAAG,EAAE,IAAI,CAAC,WAAW,EACrB,KAAK,EAAC,MAAM,EACZ,KAAK,EAAE,EAAE,MAAM,EAAE,CAAA,EAAG,IAAI,CAAC,WAAW,CAAA,EAAA,CAAI,EAAE,GAC5C,CACL,EAED,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAM,KAAK,EAAC,UAAU,IAAE,IAAI,CAAC,IAAI,CAAQ,EAExC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,IAAI,IAAI,CAAC,WAAW,KAC5C,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,GAAG,EAAE,IAAI,CAAC,WAAW,EACrB,KAAK,EAAC,MAAM,EACZ,KAAK,EAAE,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAI,EAAA,CAAA,EAAE,EAAA,CAC5C,CACL,CACC,EAEL,IAAI,CAAC,MAAM,CAAC,eAAe,KACxB,CACI,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,iBAAiB,EACtB,KAAK,EAAE,CAAgB,cAAA,CAAA,EAAA,EAEtB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CACtC,CACV,CACU,CACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/table-components/cell-components/atui-text-image-cell/atui-text-image-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport {\n    GetImageSourceFunction,\n    ITooltipCell,\n} from '../../../../types/table-cells';\n\nexport interface ITextWithImageCell extends ITooltipCell {\n    imageSource?: string;\n    text?: string;\n    imageHeight?: number;\n    isImageAtFront?: boolean;\n    getImageSource?: GetImageSourceFunction;\n    getRouterLink?: (cellInput: any, cellValue: string) => any[];\n    isLinkDisabled?: (cellInput: any) => boolean;\n}\n\ninterface InitParams extends ITextWithImageCell, ICellRendererParams {}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a text with an image.\n */\n\n@Component({\n    tag: 'atui-text-image-cell',\n    shadow: false,\n})\nexport class AtuiTextImageCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() params: InitParams;\n    @State() imageSource: string;\n    @State() imageHeight = 20;\n    @State() text: string;\n\n    init(params: InitParams): void {\n        this.params = params;\n        this.imageSource = params.imageSource;\n        this.imageHeight = params.imageHeight || this.imageHeight;\n        this.text = params.value || params.text;\n\n        if (params.getImageSource && params.data) {\n            this.imageSource = params.getImageSource(params.data);\n        }\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICellRendererParams): boolean {\n        this.updateCell(params.value);\n        return true;\n    }\n\n    private updateCell(newValue: string) {\n        this.params.value = newValue;\n        this.text = newValue;\n    }\n\n    render() {\n        return (\n            <Host class=\"flex items-center overflow-hidden\">\n                <atui-tooltip\n                    position=\"right\"\n                    is_visible={!!this.params.generateTooltip}\n                >\n                    <div\n                        class=\"flex items-center\"\n                        slot=\"tooltip-trigger\"\n                    >\n                        {this.params.isImageAtFront && this.imageSource && (\n                            <img\n                                src={this.imageSource}\n                                class=\"mr-2\"\n                                style={{ height: `${this.imageHeight}px` }}\n                            />\n                        )}\n\n                        <span class=\"truncate\">{this.text}</span>\n\n                        {!this.params.isImageAtFront && this.imageSource && (\n                            <img\n                                src={this.imageSource}\n                                class=\"ml-2\"\n                                style={{ height: `${this.imageHeight}px` }}\n                            />\n                        )}\n                    </div>\n\n                    {this.params.generateTooltip && (\n                        <span\n                            slot=\"tooltip-content\"\n                            class={`leading-normal`}\n                        >\n                            {this.params.generateTooltip(this.params)}\n                        </span>\n                    )}\n                </atui-tooltip>\n            </Host>\n        );\n    }\n}\n"],"version":3}