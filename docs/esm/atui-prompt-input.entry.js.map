{"version":3,"file":"atui-prompt-input.entry.js","sources":["src/components/prompt/atui-prompt-input/atui-prompt-input.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    State,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\n\n/**\n * @category Prompt\n * @description A specialized input component optimized for AI prompt interfaces. Supports both single-line and multi-line variants with auto-resize, character counting, send/stop functionality, and enhanced UX for conversational interfaces.\n */\n@Component({\n    tag: 'atui-prompt-input',\n    shadow: false,\n})\nexport class AtuiPromptInputComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string = 'Enter your message...';\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Maximum height in pixels for auto-resize\n     */\n    @Prop()\n    max_height: number = 240;\n\n    /**\n     * Maximum character length with counter display\n     */\n    @Prop()\n    max_length: number;\n\n    /**\n     * Controls whether the component is in progress (shows stop button) or ready to send (shows send button)\n     */\n    @Prop()\n    in_progress: boolean = false;\n\n    /**\n     * Controls whether the model select is shown\n     */\n    @Prop()\n    show_model_select: boolean = false;\n\n    /**\n     * The model to use\n     */\n    @Prop()\n    model: string = 'gpt-4o';\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: string = '';\n\n    @State() textareaEl: HTMLTextAreaElement;\n    @Element() el: HTMLElement;\n\n    /**\n     * Emits when the  value changes\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    /**\n     * Emits when a message should be sent\n     */\n    @Event()\n    atuiSubmit: EventEmitter<string>;\n\n    /**\n     * Emits when the stop button is clicked\n     */\n    @Event()\n    atuiStop: EventEmitter<void>;\n\n    /**\n     * @slot label - Custom label content (alternative to using the label prop)\n     */\n\n    private inputId = `prompt-input-${Math.random().toString(36).substring(2, 11)}`;\n\n    private focusInput(): void {\n        if (this.textareaEl) {\n            this.textareaEl.focus();\n        }\n    }\n\n    handleInput(event: Event): void {\n        event.stopPropagation();\n        this.value = (event.target as HTMLTextAreaElement).value;\n        this.atuiChange.emit(this.value);\n        this.autoResize();\n    }\n\n    private autoResize(): void {\n        if (this.textareaEl) {\n            // Reset height to auto to get proper scrollHeight\n            this.textareaEl.style.height = 'auto';\n\n            // Calculate new height within bounds\n            const scrollHeight = this.textareaEl.scrollHeight;\n            const newHeight = Math.max(\n                44,\n                Math.min(scrollHeight, this.max_height),\n            );\n\n            // Set the new height\n            this.textareaEl.style.height = `${newHeight}px`;\n        }\n    }\n\n    componentDidLoad(): void {\n        // Initial auto-resize after component loads\n        setTimeout(() => {\n            this.autoResize();\n        }, 0);\n    }\n\n    handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            this.sendMessage();\n        }\n    }\n\n    sendMessage(): void {\n        if (this.in_progress) {\n            this.atuiStop.emit();\n        } else if (this.value && this.value.trim() !== '') {\n            this.atuiSubmit.emit(this.value.trim());\n            this.value = '';\n            setTimeout(() => {\n                this.autoResize(); // Reset height after clearing\n                this.focusInput();\n            }, 0);\n        }\n    }\n\n    render() {\n        const canSend = this.value && this.value.trim() !== '';\n\n        return (\n            <Host tabindex=\"-1\">\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            info_text={this.info_text}\n                            data-name=\"prompt-input-label\"\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"mb-8 inline-block text-xs leading-tight text-light\"\n                            data-name=\"prompt-input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class=\"relative flex flex-col items-end gap-2 rounded-lg border border-solid border-med bg-white p-8 transition-[background-color,color,box-shadow] duration-300 ease-in-out focus-within:border-active-foreground focus-within:ring-2 focus-within:ring-active-foreground/30\">\n                    <textarea\n                        id={this.inputId}\n                        placeholder={this.placeholder}\n                        maxlength={this.max_length}\n                        onInput={(event) => this.handleInput(event)}\n                        onKeyDown={(event) => this.handleKeyDown(event)}\n                        value={this.value}\n                        ref={(el) => (this.textareaEl = el)}\n                        style={{\n                            height: '44px',\n                            overflow: 'hidden',\n                        }}\n                        class=\"w-full flex-1 resize-none whitespace-pre-wrap break-words border-none bg-transparent text-body text-dark shadow-none outline-none focus-visible:ring-0 focus-visible:ring-offset-0\"\n                        data-name=\"prompt-input\"\n                    />\n\n                    <div class=\"gap-1 flex w-full items-center justify-between\">\n                        <div class=\"flex items-center gap-2\">\n                            <slot name=\"actions-left\" />\n                        </div>\n\n                        <div class=\"flex items-center gap-2 self-end\">\n                            <slot name=\"actions-right\" />\n                            <atui-button\n                                class=\"rounded-lg\"\n                                size=\"sm\"\n                                type=\"secondary\"\n                                icon={\n                                    this.in_progress ? 'stop' : 'arrow_upward'\n                                }\n                                disabled={!canSend}\n                                onClick={() => this.sendMessage()}\n                                onKeyDown={(event) => {\n                                    if (\n                                        event.key === 'Enter' ||\n                                        event.key === ' '\n                                    ) {\n                                        this.sendMessage();\n                                    }\n                                }}\n                                data-name=\"prompt-send-button\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <slot name=\"footer\" />\n            </Host>\n        );\n    }\n}\n"],"names":[],"mappings":"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"}