{"version":3,"file":"atui-text-badge-cell.entry.js","sources":["src/components/table-components/cell-components/atui-text-badge-cell/atui-text-badge-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport {\n    InitTextCellParams,\n    ITooltipCell,\n} from '../../../../types/table-cells';\nimport { BadgeType } from '../../../atui-badge/atui-badge';\n\nexport interface ITextWithBadgeCellParams extends ITooltipCell {\n    badgeText: (params: ICellRendererParams) => string;\n    badgeType?: BadgeType;\n    badgeTooltipClass?: string;\n    generateBadgeTooltip?: (\n        params: ICellRendererParams,\n    ) => HTMLElement | string;\n}\n\ninterface InitParams extends ITextWithBadgeCellParams, InitTextCellParams {}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a text with a badge.\n */\n\n@Component({\n    tag: 'atui-text-badge-cell',\n    shadow: false,\n})\nexport class AtuiTextBadgeCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() textValue: string;\n    @State() badgeTextValue: string;\n    @State() params: InitParams;\n\n    init(params: InitParams): void {\n        const { textTransform, badgeText } = params;\n\n        this.params = params;\n\n        this.textValue = params.value;\n        this.badgeTextValue = badgeText(params);\n\n        if (params.data) {\n            if (textTransform) {\n                this.textValue = textTransform(params.data, params.value);\n            }\n        }\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICellRendererParams): boolean {\n        this.updateCell(String(params.value));\n        return true;\n    }\n\n    private updateCell(newValue: string) {\n        this.params.value = newValue;\n        this.textValue = this.params.value;\n    }\n\n    render() {\n        return (\n            <Host class=\"align-center flex h-full\">\n                <atui-tooltip\n                    position=\"right\"\n                    is_visible={!!this.params.generateTooltip}\n                >\n                    <span\n                        slot=\"tooltip-trigger\"\n                        data-index={`column-${this.params.rowIndex}-data`}\n                        class=\"truncate\"\n                        onClick={() => {\n                            if (this.params.click)\n                                this.params.click(this.params);\n                        }}\n                    >\n                        {this.textValue}\n                    </span>\n\n                    {this.params.generateTooltip && (\n                        <span\n                            slot=\"tooltip-content\"\n                            class={`${this.params.tooltipClass ?? ''} leading-normal`}\n                        >\n                            {this.params.generateTooltip(this.params)}\n                        </span>\n                    )}\n                </atui-tooltip>\n\n                <atui-tooltip\n                    position=\"right\"\n                    is_visible={!!this.params.generateBadgeTooltip}\n                >\n                    <span\n                        slot=\"tooltip-trigger\"\n                        data-index={`column-${this.params.rowIndex}-data`}\n                        class=\"truncate\"\n                        onClick={() => {\n                            if (this.params.click)\n                                this.params.click(this.params);\n                        }}\n                    >\n                        <atui-badge\n                            type={this.params?.badgeType}\n                            class=\"ml-4\"\n                            label={this.badgeTextValue}\n                        ></atui-badge>\n                    </span>\n\n                    {this.params.generateBadgeTooltip && (\n                        <span\n                            slot=\"tooltip-content\"\n                            class={`${this.params.badgeTooltipClass ?? ''} leading-normal`}\n                        >\n                            {this.params.generateBadgeTooltip(this.params)}\n                        </span>\n                    )}\n                </atui-tooltip>\n            </Host>\n        );\n    }\n}\n"],"names":[],"mappings":"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"}