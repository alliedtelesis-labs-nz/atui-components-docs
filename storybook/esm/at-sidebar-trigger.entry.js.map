{"version":3,"file":"at-sidebar-trigger.entry.js","sources":["src/components/at-sidebar/at-sidebar-trigger/at-sidebar-trigger.scss?tag=at-sidebar-trigger","src/components/at-sidebar/at-sidebar-trigger/at-sidebar-trigger.tsx"],"sourcesContent":["at-sidebar-trigger {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    overflow: hidden;\n    border-radius: var(--token-border-radius-md);\n    cursor: pointer;\n    padding: 6px;\n    font-weight: var(--token-font-weight-med);\n    color: var(--token-sidebar-foreground);\n    background-color: var(--token-sidebar-background);\n    transition:\n        background-color var(--token-transition-time-fast),\n        color var(--token-transition-time-fast),\n        box-shadow var(--token-transition-time-fast);\n\n    i.material-icons {\n        font-style: normal;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        font-size: var(--token-font-size-icon-lg);\n        z-index: 10;\n    }\n\n    div[data-name='focus-indicator'] {\n        pointer-events: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        z-index: 0;\n        background-color: var(--token-sidebar-foreground);\n        opacity: 0;\n        transition: background-color var(--token-transition-time-fast);\n    }\n}\n\nat-sidebar-trigger:hover div[data-name='focus-indicator'] {\n    opacity: 0.1;\n}\n\nat-sidebar-trigger:focus-visible {\n    outline: none;\n    box-shadow: 0 0 0 2px\n        color-mix(\n            in srgb,\n            var(--token-state-active-foreground) 40%,\n            transparent\n        );\n}\n","import { Component, h, Element, State, Host } from '@stencil/core';\n\n/**\n * @category Navigation\n * @description A sidebar trigger component for the sidebar.\n */\n\n@Component({\n    tag: 'at-sidebar-trigger',\n    shadow: false,\n    styleUrls: ['./at-sidebar-trigger.scss'],\n})\nexport class AtSidebarTriggerComponent {\n    @Element() el: HTMLElement;\n    @State() isOpen: boolean = false;\n\n    private provider: HTMLAtSidebarElement;\n\n    private async updateIsOpen() {\n        if (this.provider && typeof this.provider.getIsOpen === 'function') {\n            this.isOpen = await this.provider.getIsOpen();\n        }\n    }\n\n    private async toggleSidebar(): Promise<void> {\n        if (\n            this.provider &&\n            typeof this.provider.toggleSidebar === 'function'\n        ) {\n            await this.provider.toggleSidebar();\n            await this.updateIsOpen();\n        }\n    }\n\n    private handleKeyDown = (event: KeyboardEvent): void => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            this.el.click();\n        }\n    };\n\n    async componentDidLoad() {\n        this.provider = this.el.closest('at-sidebar') as HTMLAtSidebarElement;\n        await this.updateIsOpen();\n\n        if (this.provider) {\n            this.provider.addEventListener(\n                'atuiSidebarChange',\n                this.handleSidebarChange,\n            );\n        }\n    }\n\n    disconnectedCallback() {\n        if (this.provider) {\n            this.provider.removeEventListener(\n                'atuiSidebarChange',\n                this.handleSidebarChange,\n            );\n        }\n    }\n\n    private handleSidebarChange = (event: CustomEvent<boolean>) => {\n        this.isOpen = event.detail;\n    };\n\n    render() {\n        return (\n            <Host\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={this.handleKeyDown}\n                onClick={() => this.toggleSidebar()}\n            >\n                {this.isOpen !== undefined && (\n                    <i class=\"material-icons\">\n                        {this.isOpen ? 'menu_open' : 'menu'}\n                    </i>\n                )}\n                <div\n                    data-name=\"focus-indicator\"\n                    role=\"presentation\"\n                ></div>\n            </Host>\n        );\n    }\n}\n"],"names":[],"mappings":";;AAAA,MAAM,mBAAmB,GAAG,2jCAA2jC;;MCY1kC,yBAAyB,GAAA,MAAA;;;;;IAEzB,MAAM,GAAY,KAAK;AAExB,IAAA,QAAQ;AAER,IAAA,MAAM,YAAY,GAAA;AACtB,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,UAAU,EAAE;YAChE,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;;;AAI7C,IAAA,MAAM,aAAa,GAAA;QACvB,IACI,IAAI,CAAC,QAAQ;YACb,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,KAAK,UAAU,EACnD;AACE,YAAA,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;AACnC,YAAA,MAAM,IAAI,CAAC,YAAY,EAAE;;;AAIzB,IAAA,aAAa,GAAG,CAAC,KAAoB,KAAU;AACnD,QAAA,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE;YAC5C,KAAK,CAAC,cAAc,EAAE;AACtB,YAAA,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE;;AAEvB,KAAC;AAED,IAAA,MAAM,gBAAgB,GAAA;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAyB;AACrE,QAAA,MAAM,IAAI,CAAC,YAAY,EAAE;AAEzB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC1B,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAC3B;;;IAIT,oBAAoB,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAC7B,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAC3B;;;AAID,IAAA,mBAAmB,GAAG,CAAC,KAA2B,KAAI;AAC1D,QAAA,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM;AAC9B,KAAC;IAED,MAAM,GAAA;AACF,QAAA,QACI,CAAC,CAAA,IAAI,EACD,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,OAAO,EAAE,MAAM,IAAI,CAAC,aAAa,EAAE,EAAA,EAElC,IAAI,CAAC,MAAM,KAAK,SAAS,KACtB,CAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAG,KAAK,EAAC,gBAAgB,EAAA,EACpB,IAAI,CAAC,MAAM,GAAG,WAAW,GAAG,MAAM,CACnC,CACP,EACD,CACc,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,WAAA,EAAA,iBAAiB,EAC3B,IAAI,EAAC,cAAc,EAChB,CAAA,CACJ;;;;;;;"}