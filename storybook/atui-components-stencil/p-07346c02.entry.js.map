{"version":3,"names":["inputVariants","cva","variants","focused","false","true","disabled","readonly","invalid","typeahead","defaultVariants","optionVariants","active","AtuiSelectComponent","constructor","hostRef","this","autoclose","searchText","isOpen","hasMatchingOptions","menuId","Math","random","toString","substring","optionEls","componentWillLoad","translations","fetchTranslations","el","componentDidLoad","querySelectorAll","forEach","option","push","parentRect","getBoundingClientRect","parentWidth","width","updateIsOpenState","event","detail","handleChange","_a","menuRef","closeMenu","value","inputEl","atuiChange","emit","focus","handleClear","focusOption","relativePosition","indexOfActiveOption","indexOf","ownerDocument","activeElement","nextOptionEl","length","handleSearchChange","target","toLowerCase","trimmedSearch","trim","options","some","includes","handleKeyDownInput","key","toggleMenu","openMenu","handleKeyDownMenu","HTMLLIElement","click","preventDefault","render","h","Host","class","onFocusout","async","contains","relatedTarget","renderlabel","ref","trigger","align","role","portal","onAtuiMenuStateChange","renderInput","renderOptions","error_text","name","label","required","info_text","for","hint_text","classname","slot","list","autoComplete","undefined","type","placeholder","onKeyDown","onBlur","clearable","size","icon","onClick","stopPropagation","console","log","id","filter","map","renderOption","ATUI","NO_RESULTS_FOUND","tabIndex"],"sources":["src/components/atui-select/atui-select.tsx"],"sourcesContent":["import {\n    Component,\n    Prop,\n    State,\n    Element,\n    h,\n    Host,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../utils/translation';\nimport { cva } from 'class-variance-authority';\nimport { SelectOption } from '../../types/select';\n\nconst inputVariants = cva(\n    'height-[36px] transition[background-color,color,box-shadow] placeholder-text-light group/select:focus-within:ring-2 w-full rounded-md border border-solid p-8 outline-0 duration-300 ease-in-out focus:ring-2',\n    {\n        variants: {\n            focused: {\n                false: 'ring-active-foreground/30',\n                true: 'pointer-events-none',\n            },\n            disabled: {\n                false: 'bg-white focus-within:ring-active-foreground/30',\n                true: 'pointer-events-none border-none bg-surface-1 !text-disabled',\n            },\n            readonly: {\n                false: 'focus-within:ring-active-foreground/30',\n                true: 'cursor-text border-none !bg-surface-1 !text-dark',\n            },\n            invalid: {\n                false: 'border-med focus-within:border-active-dark focus-within:ring-active-foreground/30',\n                true: 'border-error-base focus-within:border-error-base focus-within:ring-destructive-foreground/30',\n            },\n            typeahead: {\n                false: 'cursor-pointer caret-transparent',\n                true: 'cursor-text',\n            },\n        },\n        defaultVariants: {\n            disabled: false,\n            readonly: false,\n            invalid: false,\n            typeahead: false,\n        },\n    },\n);\n\nconst optionVariants = cva(\n    'transition[background-color,color,box-shadow] flex w-full cursor-pointer items-center truncate p-8 text-body font-normal duration-300 ease-in-out focus:outline-0 focus:ring-2 focus:ring-inset focus:ring-active-foreground/40',\n    {\n        variants: {\n            active: {\n                true: 'bg-active-light text-active',\n                false: 'bg-white hover:bg-disabled-light',\n            },\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A dropdown selection component for choosing single values from a list of options. Features search functionality, keyboard navigation, and accessibility support.\n */\n@Component({\n    tag: 'atui-select',\n    shadow: false,\n})\nexport class AtuiSelectComponent {\n    /**\n     * Value of the currently selected option\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    /**\n     * Sets the options in the dropdown\n     */\n    @Prop()\n    options: SelectOption[];\n\n    /**\n     * Label of the input.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Optional info icon with detailed tooltip description. Displayed at right of label.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Placeholder for the select.\n     */\n    @Prop()\n    placeholder?: string;\n\n    /**\n     * Error message visible when input is valid.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Indicated form field is required.\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Set the input to appear valid.\n     */\n    @Prop()\n    invalid?: boolean;\n\n    /**\n     * Set input to readonly mode, allows users to select any active values.\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Disable user interaction. Disabled state should be applied via form control.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Set the select input to be clearable. Only enabled on typeahead selects.\n     */\n    @Prop()\n    clearable?: boolean;\n\n    /**\n     * Set the select to appear as a typeahead input.\n     */\n    @Prop()\n    typeahead?: boolean = false;\n\n    /**\n     * Close the menu when the user clicks within the menu panel. Default for single selection menus.\n     */\n    @Prop()\n    autoclose?: boolean = true;\n\n    inputEl: HTMLInputElement;\n    @State() searchText: string = '';\n    @State() isOpen: boolean = false;\n    @State() translations: any;\n    @State() hasMatchingOptions: boolean = false;\n    @State() parentWidth: string;\n\n    @Element() el: HTMLElement;\n    private menuId = `dropdown-${Math.random().toString(36).substring(2, 11)}`;\n    private menuRef: HTMLAtuiMenuElement;\n    private optionEls: HTMLLIElement[] = [];\n\n    /**\n     * Emits an event containing the selected value when changed.\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    componentDidLoad() {\n        this.el\n            .querySelectorAll('li[data-name=\"select-option\"]')\n            .forEach((option) => {\n                this.optionEls.push(option as HTMLLIElement);\n            });\n        const parentRect = this.el.getBoundingClientRect();\n        this.parentWidth = `${parentRect.width}px`;\n    }\n\n    private updateIsOpenState(event: CustomEvent<boolean>): void {\n        this.isOpen = event.detail;\n    }\n\n    private async handleChange(option: string): Promise<void> {\n        if (!this.autoclose) {\n            await this.menuRef?.closeMenu();\n        }\n\n        this.value = option;\n        this.inputEl.value = '';\n        this.searchText = '';\n        this.atuiChange.emit(this.value);\n        this.inputEl.focus();\n    }\n\n    private async handleClear(): Promise<void> {\n        await this.menuRef?.closeMenu();\n        this.searchText = '';\n        this.value = '';\n        this.inputEl.value = '';\n        this.atuiChange.emit(this.value);\n        this.inputEl.focus();\n    }\n\n    private focusOption(relativePosition: number): void {\n        const indexOfActiveOption = this.optionEls.indexOf(\n            this.el.ownerDocument.activeElement as HTMLLIElement,\n        );\n        const nextOptionEl =\n            this.optionEls[\n                (indexOfActiveOption +\n                    relativePosition +\n                    this.optionEls.length) %\n                    this.optionEls.length\n            ];\n        nextOptionEl.focus();\n    }\n\n    private handleSearchChange(event: KeyboardEvent): void {\n        this.searchText = (\n            event.target as HTMLInputElement\n        ).value.toLowerCase();\n\n        const trimmedSearch = this.searchText.trim().toLowerCase();\n        this.hasMatchingOptions = trimmedSearch\n            ? this.options?.some((option) =>\n                  option.value.toLowerCase().includes(trimmedSearch),\n              )\n            : false;\n    }\n\n    private async handleKeyDownInput(event: KeyboardEvent): Promise<void> {\n        switch (event.key) {\n            case 'Enter':\n            case 'Space':\n                await this.menuRef.toggleMenu();\n                break;\n            case 'Escape':\n                await this.menuRef.closeMenu();\n                break;\n            default:\n                this.handleSearchChange(event);\n                await this.menuRef.openMenu();\n                break;\n        }\n    }\n\n    private async handleKeyDownMenu(event: KeyboardEvent): Promise<void> {\n        switch (event.key) {\n            case 'Escape':\n                await this.menuRef.closeMenu;\n                break;\n            case 'Enter':\n            case ' ':\n                if (event.target instanceof HTMLLIElement) {\n                    event.target.click();\n                }\n                break;\n            case 'ArrowUp':\n            case 'ArrowLeft':\n                event.preventDefault();\n                this.focusOption(-1);\n                break;\n            case 'ArrowDown':\n            case 'ArrowRight':\n                event.preventDefault();\n                this.focusOption(1);\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <Host\n                class=\"group/select\"\n                onFocusout={async (event: FocusEvent): Promise<void> => {\n                    if (!this.el.contains(event.relatedTarget as Node)) {\n                        await this.menuRef.closeMenu();\n                    }\n                }}\n            >\n                {this.renderlabel()}\n                <atui-menu\n                    ref={(el) => (this.menuRef = el)}\n                    trigger=\"click\"\n                    align=\"start\"\n                    width={this.parentWidth}\n                    role=\"listbox\"\n                    portal={true}\n                    disabled={this.disabled || this.readonly}\n                    onAtuiMenuStateChange={(event) =>\n                        this.updateIsOpenState(event)\n                    }\n                >\n                    {this.renderInput()}\n                    {!this.disabled || !this.readonly\n                        ? this.renderOptions()\n                        : null}\n                </atui-menu>\n\n                <div>\n                    {this.error_text && this.invalid && (\n                        <span\n                            class=\"text-error\"\n                            data-name=\"select-error\"\n                        >\n                            {this.error_text}\n                        </span>\n                    )}\n                </div>\n            </Host>\n        );\n    }\n\n    renderlabel() {\n        return (\n            <div class=\"mb-4 flex flex-col\">\n                <slot name=\"label\" />\n                {(this.label || this.required || this.info_text) && (\n                    <atui-form-label\n                        for={this.menuId}\n                        label={this.label}\n                        required={this.required && !this.readonly}\n                        info_text={this.info_text}\n                    />\n                )}\n                {this.hint_text && (\n                    <span\n                        class=\"inline-block text-xs leading-tight text-light\"\n                        data-name=\"select-hint\"\n                    >\n                        {this.hint_text}\n                    </span>\n                )}\n            </div>\n        );\n    }\n\n    renderInput() {\n        const classname = inputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n            typeahead: this.typeahead,\n        });\n\n        return (\n            <div\n                class=\"relative flex items-center gap-4\"\n                slot=\"menu-trigger\"\n            >\n                <input\n                    class={classname}\n                    role=\"combobox\"\n                    list=\"atui-select\"\n                    autoComplete=\"off\"\n                    aria-autocomplete={this.typeahead ? 'list' : undefined}\n                    aria-expanded={this.isOpen}\n                    aria-controls={this.menuId}\n                    type=\"text\"\n                    readonly={this.readonly}\n                    disabled={this.disabled}\n                    placeholder={this.placeholder}\n                    value={this.value}\n                    onKeyDown={async (event) => {\n                        await this.handleKeyDownInput(event);\n                    }}\n                    onBlur={() => (this.searchText = '')}\n                    data-name=\"select-input\"\n                    ref={(el) => (this.inputEl = el)}\n                ></input>\n\n                <div class=\"absolute right-4 flex h-full items-center bg-transparent\">\n                    {this.clearable && !this.readonly && !this.disabled && (\n                        <div\n                            class={`transition-all duration-300 ease-in-out ${\n                                !!this.value || this.searchText\n                                    ? 'scale-100 opacity-100'\n                                    : 'pointer-events-none scale-90 opacity-0'\n                            }`}\n                        >\n                            <atui-button\n                                size=\"sm\"\n                                icon=\"cancel\"\n                                type=\"secondaryText\"\n                                onClick={(event) => {\n                                    event.stopPropagation();\n                                    this.handleClear();\n                                }}\n                                data-name=\"select-clear\"\n                            ></atui-button>\n                        </div>\n                    )}\n                    {!this.readonly && !this.disabled && (\n                        <atui-button\n                            size=\"sm\"\n                            class=\"!i>text-light h-[18pz] w-[18px]\"\n                            icon={\n                                this.isOpen\n                                    ? 'arrow_drop_up'\n                                    : 'arrow_drop_down'\n                            }\n                            type=\"secondaryText\"\n                            onClick={async () => {\n                                console.log('arrow');\n                                await this.menuRef.toggleMenu;\n                            }}\n                            data-name=\"select-toggle\"\n                        ></atui-button>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    renderOptions() {\n        return (\n            <ul\n                slot=\"menu-content\"\n                class=\"contents\"\n                id=\"atui-select\"\n                onKeyDown={async (event) => {\n                    await this.handleKeyDownMenu(event);\n                }}\n            >\n                {this.options\n                    ?.filter((option) =>\n                        option.value.toLowerCase().includes(this.searchText),\n                    )\n                    .map((option) => this.renderOption(option))}\n\n                {this.typeahead && !this.hasMatchingOptions && (\n                    <div class=\"w-full bg-white px-16 py-8 text-body text-light\">\n                        {this.translations.ATUI.NO_RESULTS_FOUND}\n                    </div>\n                )}\n            </ul>\n        );\n    }\n\n    renderOption(option: SelectOption) {\n        const classname = optionVariants({\n            active: this.value === option.value,\n        });\n\n        return (\n            <li\n                role=\"option\"\n                value={option.value}\n                data-name=\"select-option\"\n                aria-selected={this.value === option.value}\n                tabIndex={0}\n                class={classname}\n                onClick={() => this.handleChange(option.value)}\n            >\n                <i\n                    role=\"presentation\"\n                    class={`material-icons h-16 w-16 text-sm ease-in-out ${\n                        this.value === option.value ? 'visible' : 'hidden'\n                    }`}\n                >\n                    check\n                </i>\n                {option.value}\n            </li>\n        );\n    }\n}\n"],"mappings":"wIAcA,MAAMA,EAAgBC,EAClB,gNACA,CACIC,SAAU,CACNC,QAAS,CACLC,MAAO,4BACPC,KAAM,uBAEVC,SAAU,CACNF,MAAO,kDACPC,KAAM,+DAEVE,SAAU,CACNH,MAAO,yCACPC,KAAM,oDAEVG,QAAS,CACLJ,MAAO,oFACPC,KAAM,gGAEVI,UAAW,CACPL,MAAO,mCACPC,KAAM,gBAGdK,gBAAiB,CACbJ,SAAU,MACVC,SAAU,MACVC,QAAS,MACTC,UAAW,SAKvB,MAAME,EAAiBV,EACnB,kOACA,CACIC,SAAU,CACNU,OAAQ,CACJP,KAAM,8BACND,MAAO,uC,MAcVS,EAAmB,MAJhC,WAAAC,CAAAC,G,iDAiFIC,KAASP,UAAa,MAMtBO,KAASC,UAAa,KAGbD,KAAUE,WAAW,GACrBF,KAAMG,OAAY,MAElBH,KAAkBI,mBAAY,MAI/BJ,KAAAK,OAAS,YAAYC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,MAE7DT,KAASU,UAAoB,EAsTxC,CA9SG,uBAAMC,GACFX,KAAKY,mBAAqBC,EAAkBb,KAAKc,G,CAGrD,gBAAAC,GACIf,KAAKc,GACAE,iBAAiB,iCACjBC,SAASC,IACNlB,KAAKU,UAAUS,KAAKD,EAAwB,IAEpD,MAAME,EAAapB,KAAKc,GAAGO,wBAC3BrB,KAAKsB,YAAc,GAAGF,EAAWG,S,CAG7B,iBAAAC,CAAkBC,GACtBzB,KAAKG,OAASsB,EAAMC,M,CAGhB,kBAAMC,CAAaT,G,MACvB,IAAKlB,KAAKC,UAAW,QACX2B,EAAA5B,KAAK6B,WAAS,MAAAD,SAAA,SAAAA,EAAAE,Y,CAGxB9B,KAAK+B,MAAQb,EACblB,KAAKgC,QAAQD,MAAQ,GACrB/B,KAAKE,WAAa,GAClBF,KAAKiC,WAAWC,KAAKlC,KAAK+B,OAC1B/B,KAAKgC,QAAQG,O,CAGT,iBAAMC,G,aACJR,EAAA5B,KAAK6B,WAAS,MAAAD,SAAA,SAAAA,EAAAE,aACpB9B,KAAKE,WAAa,GAClBF,KAAK+B,MAAQ,GACb/B,KAAKgC,QAAQD,MAAQ,GACrB/B,KAAKiC,WAAWC,KAAKlC,KAAK+B,OAC1B/B,KAAKgC,QAAQG,O,CAGT,WAAAE,CAAYC,GAChB,MAAMC,EAAsBvC,KAAKU,UAAU8B,QACvCxC,KAAKc,GAAG2B,cAAcC,eAE1B,MAAMC,EACF3C,KAAKU,WACA6B,EACGD,EACAtC,KAAKU,UAAUkC,QACf5C,KAAKU,UAAUkC,QAE3BD,EAAaR,O,CAGT,kBAAAU,CAAmBpB,G,MACvBzB,KAAKE,WACDuB,EAAMqB,OACRf,MAAMgB,cAER,MAAMC,EAAgBhD,KAAKE,WAAW+C,OAAOF,cAC7C/C,KAAKI,mBAAqB4C,GACpBpB,EAAA5B,KAAKkD,WAAO,MAAAtB,SAAA,SAAAA,EAAEuB,MAAMjC,GAChBA,EAAOa,MAAMgB,cAAcK,SAASJ,KAExC,K,CAGF,wBAAMK,CAAmB5B,GAC7B,OAAQA,EAAM6B,KACV,IAAK,QACL,IAAK,cACKtD,KAAK6B,QAAQ0B,aACnB,MACJ,IAAK,eACKvD,KAAK6B,QAAQC,YACnB,MACJ,QACI9B,KAAK6C,mBAAmBpB,SAClBzB,KAAK6B,QAAQ2B,WACnB,M,CAIJ,uBAAMC,CAAkBhC,GAC5B,OAAQA,EAAM6B,KACV,IAAK,eACKtD,KAAK6B,QAAQC,UACnB,MACJ,IAAK,QACL,IAAK,IACD,GAAIL,EAAMqB,kBAAkBY,cAAe,CACvCjC,EAAMqB,OAAOa,O,CAEjB,MACJ,IAAK,UACL,IAAK,YACDlC,EAAMmC,iBACN5D,KAAKqC,aAAY,GACjB,MACJ,IAAK,YACL,IAAK,aACDZ,EAAMmC,iBACN5D,KAAKqC,YAAY,GACjB,M,CAIZ,MAAAwB,GACI,OACIC,EAACC,EAAI,CAAAT,IAAA,2CACDU,MAAM,eACNC,WAAYC,MAAOzC,IACf,IAAKzB,KAAKc,GAAGqD,SAAS1C,EAAM2C,eAAwB,OAC1CpE,KAAK6B,QAAQC,W,IAI1B9B,KAAKqE,cACNP,EACI,aAAAR,IAAA,2CAAAgB,IAAMxD,GAAQd,KAAK6B,QAAUf,EAC7ByD,QAAQ,QACRC,MAAM,QACNjD,MAAOvB,KAAKsB,YACZmD,KAAK,UACLC,OAAQ,KACRpF,SAAUU,KAAKV,UAAYU,KAAKT,SAChCoF,sBAAwBlD,GACpBzB,KAAKwB,kBAAkBC,IAG1BzB,KAAK4E,eACJ5E,KAAKV,WAAaU,KAAKT,SACnBS,KAAK6E,gBACL,MAGVf,EACK,OAAAR,IAAA,4CAAAtD,KAAK8E,YAAc9E,KAAKR,SACrBsE,EAAA,QAAAR,IAAA,2CACIU,MAAM,aACI,4BAEThE,KAAK8E,a,CAQ9B,WAAAT,GACI,OACIP,EAAA,OAAKE,MAAM,sBACPF,EAAM,QAAAiB,KAAK,WACT/E,KAAKgF,OAAShF,KAAKiF,UAAYjF,KAAKkF,YAClCpB,EACI,mBAAAqB,IAAKnF,KAAKK,OACV2E,MAAOhF,KAAKgF,MACZC,SAAUjF,KAAKiF,WAAajF,KAAKT,SACjC2F,UAAWlF,KAAKkF,YAGvBlF,KAAKoF,WACFtB,EACI,QAAAE,MAAM,gDAA+C,YAC3C,eAEThE,KAAKoF,W,CAO1B,WAAAR,GACI,MAAMS,EAAYrG,EAAc,CAC5BQ,QAASQ,KAAKR,QACdF,SAAUU,KAAKV,SACfC,SAAUS,KAAKT,SACfE,UAAWO,KAAKP,YAGpB,OACIqE,EAAA,OACIE,MAAM,mCACNsB,KAAK,gBAELxB,EAAA,SACIE,MAAOqB,EACPZ,KAAK,WACLc,KAAK,cACLC,aAAa,MAAK,oBACCxF,KAAKP,UAAY,OAASgG,UAAS,gBACvCzF,KAAKG,OAAM,gBACXH,KAAKK,OACpBqF,KAAK,OACLnG,SAAUS,KAAKT,SACfD,SAAUU,KAAKV,SACfqG,YAAa3F,KAAK2F,YAClB5D,MAAO/B,KAAK+B,MACZ6D,UAAW1B,MAAOzC,UACRzB,KAAKqD,mBAAmB5B,EAAM,EAExCoE,OAAQ,IAAO7F,KAAKE,WAAa,GACvB,2BACVoE,IAAMxD,GAAQd,KAAKgC,QAAUlB,IAGjCgD,EAAK,OAAAE,MAAM,4DACNhE,KAAK8F,YAAc9F,KAAKT,WAAaS,KAAKV,UACvCwE,EACI,OAAAE,MAAO,6CACDhE,KAAK+B,OAAS/B,KAAKE,WACf,wBACA,4CAGV4D,EAAA,eACIiC,KAAK,KACLC,KAAK,SACLN,KAAK,gBACLO,QAAUxE,IACNA,EAAMyE,kBACNlG,KAAKoC,aAAa,EAEZ,+BAIpBpC,KAAKT,WAAaS,KAAKV,UACrBwE,EAAA,eACIiC,KAAK,KACL/B,MAAM,kCACNgC,KACIhG,KAAKG,OACC,gBACA,kBAEVuF,KAAK,gBACLO,QAAS/B,UACLiC,QAAQC,IAAI,eACNpG,KAAK6B,QAAQ0B,UAAU,EAChC,YACS,mB,CAQlC,aAAAsB,G,MACI,OACIf,EAAA,MACIwB,KAAK,eACLtB,MAAM,WACNqC,GAAG,cACHT,UAAW1B,MAAOzC,UACRzB,KAAKyD,kBAAkBhC,EAAM,IAGtCG,EAAA5B,KAAKkD,WAAO,MAAAtB,SAAA,SACPA,EAAA0E,QAAQpF,GACNA,EAAOa,MAAMgB,cAAcK,SAASpD,KAAKE,cAE5CqG,KAAKrF,GAAWlB,KAAKwG,aAAatF,KAEtClB,KAAKP,YAAcO,KAAKI,oBACrB0D,EAAA,OAAKE,MAAM,mDACNhE,KAAKY,aAAa6F,KAAKC,kB,CAO5C,YAAAF,CAAatF,GACT,MAAMmE,EAAY1F,EAAe,CAC7BC,OAAQI,KAAK+B,QAAUb,EAAOa,QAGlC,OACI+B,EACI,MAAAW,KAAK,SACL1C,MAAOb,EAAOa,MAAK,YACT,gBACK,gBAAA/B,KAAK+B,QAAUb,EAAOa,MACrC4E,SAAU,EACV3C,MAAOqB,EACPY,QAAS,IAAMjG,KAAK2B,aAAaT,EAAOa,QAExC+B,EACI,KAAAW,KAAK,eACLT,MAAO,gDACHhE,KAAK+B,QAAUb,EAAOa,MAAQ,UAAY,YAI9C,SACHb,EAAOa,M","ignoreList":[]}