{"version":3,"names":["inputVariantsConfig","variants","focused","false","true","disabled","readonly","invalid","defaultVariants","optionVariantsConfig","active","AtuiSelectComponent","constructor","hostRef","this","typeahead","autoclose","searchText","isOpen","hasMatchingOptions","menuId","Math","random","toString","substring","optionEls","componentWillLoad","translations","fetchTranslations","el","componentDidLoad","querySelectorAll","forEach","option","push","parentRect","getBoundingClientRect","parentWidth","width","updateIsOpenState","event","detail","requestAnimationFrame","searchInputEl","focus","handleChange","_a","menuRef","closeMenu","value","inputEl","atuiChange","emit","handleClear","handleKeyDownMenu","key","target","HTMLLIElement","preventDefault","click","menuContainer","querySelector","handleArrowNavigation","handleHomeEndNavigation","handleSearchInput","toLowerCase","trimmedSearch","trim","options","some","includes","render","h","Host","class","onFocusout","async","relatedTarget","contains","setTimeout","renderLabel","ref","trigger","align","role","onAtuiMenuStateChange","renderInput","renderOptions","error_text","name","label","required","info_text","for","hint_text","getClassname","classlist","classname","slot","list","type","placeholder","tabindex","id","onKeyDown","clearable","_b","ATUI","SEARCH","autoComplete","onInput","stopPropagation","onClick","e","size","icon","_c","filter","map","renderOption","_e","_d","NO_RESULTS_FOUND","getOptionClassname","isSelected","tabIndex"],"sources":["src/components/atui-select/atui-select.tsx"],"sourcesContent":["import {\n    Component,\n    Prop,\n    State,\n    Element,\n    h,\n    Host,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../utils/translation';\nimport { classlist } from '../../utils/classlist';\nimport { SelectOption } from '../../types/select';\nimport {\n    handleArrowNavigation,\n    handleHomeEndNavigation,\n} from '../../utils/keyboard-navigation';\n\nconst inputVariantsConfig = {\n    variants: {\n        focused: {\n            false: 'ring-active-foreground/30',\n            true: 'pointer-events-none',\n        },\n        disabled: {\n            false: 'focus-within:ring-active-foreground/30 cursor-pointer bg-white',\n            true: 'bg-surface-1 !text-disabled pointer-events-none border-none',\n        },\n        readonly: {\n            false: 'focus-within:ring-active-foreground/30',\n            true: '!bg-surface-1 !text-dark cursor-text border-none',\n        },\n        invalid: {\n            false: 'border-med focus-within:border-active-dark focus-within:ring-active-foreground/30',\n            true: 'border-error-base focus-within:border-error-base focus-within:ring-destructive-foreground/30',\n        },\n    },\n    defaultVariants: {\n        disabled: false,\n        readonly: false,\n        invalid: false,\n    },\n};\n\nconst optionVariantsConfig = {\n    variants: {\n        active: {\n            true: 'bg-active-light text-active',\n            false: 'hover:bg-disabled-light bg-white',\n        },\n    },\n};\n\n/**\n * @category Form Controls\n * @description A dropdown selection component for choosing single values from a list of options. Features search functionality, keyboard navigation, and accessibility support.\n */\n@Component({\n    tag: 'atui-select',\n    shadow: false,\n})\nexport class AtuiSelectComponent {\n    /**\n     * Value of the currently selected option\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    /**\n     * Sets the options in the dropdown\n     */\n    @Prop()\n    options: SelectOption[];\n\n    /**\n     * Label of the input.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Optional info icon with detailed tooltip description. Displayed at right of label.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Placeholder for the select.\n     */\n    @Prop()\n    placeholder?: string;\n\n    /**\n     * Error message visible when input is valid.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Indicated form field is required.\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Set the input to appear valid.\n     */\n    @Prop()\n    invalid?: boolean;\n\n    /**\n     * Disable user interaction. Disabled state should be applied via form control.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Set input to readonly mode, allows users to select any active values.\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Set the select input to be clearable. Only enabled on typeahead selects.\n     */\n    @Prop()\n    clearable?: boolean;\n\n    /**\n     * Set the select to appear as a typeahead input.\n     */\n    @Prop()\n    typeahead?: boolean = false;\n\n    /**\n     * Close the menu when the user clicks within the menu panel. Default for single selection menus.\n     */\n    @Prop()\n    autoclose?: boolean = true;\n\n    inputEl: HTMLInputElement;\n    @State() searchText: string = '';\n    @State() isOpen: boolean = false;\n    @State() translations: any;\n    @State() hasMatchingOptions: boolean = false;\n    @State() parentWidth: string;\n\n    @Element() el: HTMLElement;\n    private menuId = `dropdown-${Math.random().toString(36).substring(2, 11)}`;\n    private menuRef: HTMLAtuiMenuElement;\n    private optionEls: HTMLLIElement[] = [];\n    private searchInputEl: HTMLInputElement;\n\n    /**\n     * Emits an event containing the selected value when changed.\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    componentDidLoad() {\n        this.el\n            .querySelectorAll('li[data-name=\"select-option\"]')\n            .forEach((option) => {\n                this.optionEls.push(option as HTMLLIElement);\n            });\n        const parentRect = this.el.getBoundingClientRect();\n        this.parentWidth = `${parentRect.width}px`;\n    }\n\n    private updateIsOpenState(event: CustomEvent<boolean>): void {\n        this.isOpen = event.detail;\n\n        if (this.isOpen && this.typeahead) {\n            requestAnimationFrame(() => {\n                if (this.searchInputEl) {\n                    this.searchInputEl.focus();\n                }\n            });\n        }\n    }\n\n    private async handleChange(option: string): Promise<void> {\n        if (this.autoclose) {\n            await this.menuRef?.closeMenu();\n        }\n        this.value = option;\n        this.inputEl.focus();\n        this.atuiChange.emit(this.value);\n    }\n\n    private async handleClear(): Promise<void> {\n        this.searchText = '';\n    }\n\n    private async handleKeyDownMenu(event: KeyboardEvent): Promise<void> {\n        if (event.key === 'Enter' || event.key === ' ') {\n            if (event.target instanceof HTMLLIElement) {\n                event.preventDefault();\n                event.target.click();\n            }\n            return;\n        }\n\n        const menuContainer = this.el.querySelector(\n            'ul[id=\"atui-select\"]',\n        ) as HTMLElement;\n        if (!menuContainer) return;\n\n        handleArrowNavigation(event, menuContainer);\n        handleHomeEndNavigation(event, menuContainer);\n    }\n\n    private handleSearchInput(event: Event): void {\n        const inputEl = event.target as HTMLInputElement;\n        this.searchText = inputEl.value.toLowerCase();\n        const trimmedSearch = this.searchText.trim().toLowerCase();\n        this.hasMatchingOptions = trimmedSearch\n            ? this.options?.some((option) =>\n                  option.value.toLowerCase().includes(trimmedSearch),\n              )\n            : true;\n    }\n\n    render() {\n        return (\n            <Host\n                class=\"group/select\"\n                onFocusout={async (event: FocusEvent) => {\n                    await this.handleClear();\n                    const relatedTarget = event.relatedTarget as HTMLElement;\n                    if (!relatedTarget || !this.el.contains(relatedTarget)) {\n                        setTimeout(async () => {\n                            await this.menuRef?.closeMenu();\n                        }, 100);\n                    }\n                }}\n            >\n                {this.renderLabel()}\n                <atui-menu\n                    ref={(el) => (this.menuRef = el)}\n                    trigger=\"click\"\n                    align=\"start\"\n                    width={this.parentWidth}\n                    role=\"listbox\"\n                    disabled={this.disabled || this.readonly}\n                    onAtuiMenuStateChange={(event) =>\n                        this.updateIsOpenState(event)\n                    }\n                >\n                    {this.renderInput()}\n                    {!this.disabled || !this.readonly\n                        ? this.renderOptions()\n                        : null}\n                </atui-menu>\n\n                <div>\n                    {this.error_text && this.invalid && (\n                        <span\n                            class=\"text-error\"\n                            data-name=\"select-error\"\n                        >\n                            {this.error_text}\n                        </span>\n                    )}\n                </div>\n            </Host>\n        );\n    }\n\n    renderLabel() {\n        return (\n            <div class=\"mb-4 flex flex-col\">\n                <slot name=\"label\" />\n                {(this.label || this.required || this.info_text) && (\n                    <atui-form-label\n                        for={this.menuId}\n                        label={this.label}\n                        required={this.required && !this.readonly}\n                        info_text={this.info_text}\n                    />\n                )}\n                {this.hint_text && (\n                    <span\n                        class=\"text-light inline-block text-xs leading-tight\"\n                        data-name=\"select-hint\"\n                    >\n                        {this.hint_text}\n                    </span>\n                )}\n            </div>\n        );\n    }\n\n    renderInput() {\n        const getClassname = classlist(\n            'height-[36px] transition[background-color,color,box-shadow] placeholder-text-light group/select:focus-within:ring-2 w-full cursor-pointer rounded-md border border-solid p-8 outline-0 duration-300 ease-in-out select-none focus:ring-2',\n            inputVariantsConfig,\n        );\n\n        const classname = getClassname({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n        });\n\n        return (\n            <div\n                class=\"relative flex items-center gap-4\"\n                slot=\"menu-trigger\"\n            >\n                <input\n                    class={classname}\n                    role=\"combobox\"\n                    list=\"atui-select\"\n                    aria-expanded={this.isOpen}\n                    aria-controls={this.menuId}\n                    type=\"text\"\n                    readonly={true}\n                    aria-disabled={this.disabled}\n                    disabled={this.disabled}\n                    placeholder={this.placeholder}\n                    value={this.value}\n                    data-name=\"select-input\"\n                    ref={(el) => (this.inputEl = el)}\n                ></input>\n\n                {!this.readonly && !this.disabled && (\n                    <div\n                        class=\"bg-surface1 absolute right-4 flex h-full cursor-pointer items-center rounded-md p-4 select-none\"\n                        role=\"presentation\"\n                        tabindex={-1}\n                    >\n                        <span\n                            class=\"material-icons h-16 w-16 text-[16px] leading-[16px]\"\n                            data-name=\"button-icon-right\"\n                        >\n                            {this.isOpen ? 'arrow_drop_up' : 'arrow_drop_down'}\n                        </span>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    renderOptions() {\n        return (\n            <ul\n                class=\"contents\"\n                id=\"atui-select\"\n                onKeyDown={async (event) => {\n                    await this.handleKeyDownMenu(event);\n                }}\n            >\n                {this.typeahead && (\n                    <div class=\"relative z-10 bg-white p-4\">\n                        <input\n                            type=\"text\"\n                            class={`transition[background-color,color] bg-surface-1 ring-active-foreground/30 mb-4 h-[28px] w-full flex-shrink flex-grow basis-0 rounded-md p-8 outline-0 duration-300 ease-in-out focus:ring-2 ${\n                                this.clearable ? 'pr-24' : ''\n                            } `}\n                            placeholder={\n                                this.translations?.ATUI?.SEARCH || 'Search'\n                            }\n                            name=\"\"\n                            autoComplete=\"off\"\n                            aria-autocomplete=\"list\"\n                            value={this.searchText}\n                            onInput={(event) => {\n                                event.stopPropagation();\n                                this.handleSearchInput(event);\n                            }}\n                            onClick={(e) => e.stopPropagation()}\n                            ref={(el) => (this.searchInputEl = el)}\n                        />\n\n                        {this.clearable && this.searchText !== '' && (\n                            <div class=\"absolute top-4 right-4\">\n                                <atui-button\n                                    size=\"sm\"\n                                    icon=\"cancel\"\n                                    type=\"secondaryText\"\n                                    onClick={async (event) => {\n                                        event.stopPropagation();\n                                        await this.handleClear();\n                                    }}\n                                    data-name=\"select-clear\"\n                                ></atui-button>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {this.options\n                    ?.filter(\n                        (option) =>\n                            !this.searchText ||\n                            option.value\n                                .toLowerCase()\n                                .includes(this.searchText),\n                    )\n                    .map((option) => this.renderOption(option))}\n\n                {this.typeahead &&\n                    this.searchText &&\n                    !this.hasMatchingOptions && (\n                        <div class=\"text-body text-light w-full bg-white px-16 py-8\">\n                            {this.translations?.ATUI?.NO_RESULTS_FOUND ||\n                                'No results found'}\n                        </div>\n                    )}\n            </ul>\n        );\n    }\n\n    renderOption(option: SelectOption) {\n        const getOptionClassname = classlist(\n            'transition[background-color,color,box-shadow] text-body focus:ring-active-foreground/40 flex w-full cursor-pointer items-center truncate p-8 font-normal duration-300 ease-in-out focus:ring-2 focus:outline-0 focus:ring-inset',\n            optionVariantsConfig,\n        );\n\n        const classname = getOptionClassname({\n            active: this.value === option.value,\n        });\n\n        const isSelected = this.value === option.value;\n\n        return (\n            <li\n                role=\"option\"\n                value={option.value}\n                data-name=\"select-option\"\n                aria-selected={isSelected ? 'true' : 'false'}\n                tabIndex={0}\n                class={classname}\n                onClick={() => this.handleChange(option.value)}\n            >\n                {option.value}\n            </li>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}