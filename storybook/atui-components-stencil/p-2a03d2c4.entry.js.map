{"version":3,"names":["AtuiImageCell","init","params","this","imageSource","getImageSource","data","getGui","el","refresh","updateCell","newValue","render","h","Host","key","class","is_visible","generateTooltip","src","style","height","slot"],"sources":["src/components/table-components/cell-components/atui-image-cell/atui-image-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport {\n    GetImageSourceFunction,\n    ITooltipCell,\n} from '../../../../types/table-cells';\n\nexport interface ImageCell extends ITooltipCell {\n    imageSource?: string;\n    getImageSource?: GetImageSourceFunction;\n}\n\ninterface InitParams extends ImageCell, ICellRendererParams {}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying an image.\n */\n\n@Component({\n    tag: 'atui-image-cell',\n    shadow: false,\n})\nexport class AtuiImageCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() params: InitParams;\n    @State() imageSource: string;\n    @State() getImageSource: GetImageSourceFunction;\n\n    init(params: InitParams): void {\n        this.params = params;\n        this.imageSource = params.imageSource;\n        this.getImageSource = params.getImageSource;\n\n        if (params.getImageSource) {\n            this.imageSource = params.getImageSource(params.data);\n        }\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: InitParams): boolean {\n        this.updateCell(params.data);\n        return true;\n    }\n\n    protected updateCell(newValue: any) {\n        this.params.data = newValue;\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center overflow-hidden leading-[100%]\">\n                {this.imageSource && (\n                    <atui-tooltip is_visible={!!this.params.generateTooltip}>\n                        <div class=\"flex items-center\">\n                            <img\n                                src={this.imageSource}\n                                style={{ height: '30px' }}\n                            />\n                        </div>\n\n                        <span slot=\"tooltip-content\">\n                            {this.params.generateTooltip(this.params)}\n                        </span>\n                    </atui-tooltip>\n                )}\n            </Host>\n        );\n    }\n}\n"],"mappings":"+DAuBaA,EAAa,M,yBAMtB,IAAAC,CAAKC,GACDC,KAAKD,OAASA,EACdC,KAAKC,YAAcF,EAAOE,YAC1BD,KAAKE,eAAiBH,EAAOG,eAE7B,GAAIH,EAAOG,eAAgB,CACvBF,KAAKC,YAAcF,EAAOG,eAAeH,EAAOI,K,EAIxD,MAAAC,GACI,OAAOJ,KAAKK,E,CAGhB,OAAAC,CAAQP,GACJC,KAAKO,WAAWR,EAAOI,MACvB,OAAO,I,CAGD,UAAAI,CAAWC,GACjBR,KAAKD,OAAOI,KAAOK,C,CAGvB,MAAAC,GACI,OACIC,EAACC,EAAI,CAAAC,IAAA,2CAACC,MAAM,2DACPb,KAAKC,aACFS,EAAA,gBAAAE,IAAA,2CAAcE,aAAcd,KAAKD,OAAOgB,iBACpCL,EAAK,OAAAE,IAAA,2CAAAC,MAAM,qBACPH,EAAA,OAAAE,IAAA,2CACII,IAAKhB,KAAKC,YACVgB,MAAO,CAAEC,OAAQ,WAIzBR,EAAA,QAAAE,IAAA,2CAAMO,KAAK,mBACNnB,KAAKD,OAAOgB,gBAAgBf,KAAKD,U","ignoreList":[]}