{"version":3,"names":["atuiInputNumericCss","containerVariants","cva","variants","showButtons","true","false","inputVariants","disabled","readonly","invalid","activePlaceholder","compoundVariants","class","defaultVariants","AtuiInputNumericComponent","constructor","hostRef","this","placeholder","min","max","step","show_buttons","value","inputId","Math","random","toString","substring","handleDecrease","atuiChange","emit","handleIncrease","handleChange","event","stopPropagation","Number","target","render","containerClassname","classname","h","Host","key","name","label","required","info_text","for","hint_text","type","icon","onClick","id","undefined","onInput","onChange","ref","el","inputEl","error_text"],"sources":["src/components/atui-input-numeric/atui-input-numeric.scss?tag=atui-input-numeric","src/components/atui-input-numeric/atui-input-numeric.tsx"],"sourcesContent":["/* Hide default buttons: Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n/* Hide default buttons: Firefox */\ninput[type='number'] {\n    -moz-appearance: textfield;\n}\n","import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nconst containerVariants = cva('height-[36px] relative flex rounded-md', {\n    variants: {\n        showButtons: {\n            true: 'border border-solid border-med',\n            false: '',\n        },\n    },\n});\n\nconst inputVariants = cva(\n    'height-[36px] transition[background-color,color,box-shadow] w-full rounded-md p-8 text-right outline-0 duration-300 ease-in-out',\n    {\n        variants: {\n            disabled: {\n                false: 'bg-white',\n                true: 'pointer-events-none border-none bg-surface-1 !text-disabled',\n            },\n            readonly: {\n                false: 'bg-white',\n                true: 'border-none bg-surface-1 text-dark',\n            },\n            invalid: {\n                false: 'border-med focus:border-active-dark focus:ring-2 focus:ring-active-foreground/30',\n                true: 'border-error-base focus:ring-2 focus:ring-destructive-foreground/30',\n            },\n            activePlaceholder: {\n                false: 'placeholder:text-disabled',\n                true: 'placeholder:text-dark',\n            },\n            showButtons: {\n                true: '',\n                false: 'border border-solid',\n            },\n        },\n        compoundVariants: [\n            {\n                readonly: true,\n                disabled: true,\n                class: 'bg-surface-1 text-dark',\n            },\n            {\n                readonly: false,\n                disabled: false,\n                class: 'bg-surface-base text-dark',\n            },\n        ],\n        defaultVariants: {\n            disabled: false,\n            readonly: false,\n            invalid: false,\n            activePlaceholder: false,\n            showButtons: false,\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A numeric input component for entering numerical values.\n */\n\n@Component({\n    tag: 'atui-input-numeric',\n    styleUrl: 'atui-input-numeric.scss',\n    shadow: false,\n})\nexport class AtuiInputNumericComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string = '';\n\n    /**\n     * Adds a required * to the element\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Makes the input read only\n     */\n    @Prop()\n    readonly: boolean;\n\n    /**\n     * Disables interaction with the input\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    /**\n     * Min selectable value of the input.\n     */\n    @Prop()\n    min = 0;\n\n    /**\n     * Max selectable value of the input.\n     */\n    @Prop()\n    max = 100;\n\n    /**\n     * Interval between selections.\n     */\n    @Prop()\n    step?: number = 1;\n\n    /**\n     * Show buttons inside input or outside\n     */\n    @Prop()\n    show_buttons: boolean = true;\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: number = 0;\n\n    inputEl: HTMLInputElement;\n    @Element() el: HTMLAtuiInputElement;\n\n    /**\n     * Emits an event containing the text string or number when the input's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<string | number>;\n\n    private inputId = `input-${Math.random().toString(36).substring(2, 11)}`;\n\n    handleChange(event: Event): void {\n        event.stopPropagation();\n        this.value = Number((event.target as HTMLInputElement).value);\n        this.atuiChange.emit(this.value);\n    }\n\n    handleDecrease = () => {\n        if (this.value > this.min) {\n            this.value = Math.max(this.value - this.step, this.min);\n            this.atuiChange.emit(this.value);\n        }\n    };\n\n    handleIncrease = () => {\n        if (this.value < this.max) {\n            this.value = Math.min(this.value + this.step, this.max);\n            this.atuiChange.emit(this.value);\n        }\n    };\n\n    render() {\n        const containerClassname = containerVariants({\n            showButtons: this.show_buttons,\n        });\n        const classname = inputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n            showButtons: this.show_buttons,\n        });\n\n        return (\n            <Host class=\"w-full\">\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"mb-8 inline-block text-xs leading-tight text-light\"\n                            data-name=\"input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class={containerClassname}>\n                    {this.show_buttons && !this.disabled && !this.readonly && (\n                        <atui-button\n                            class=\"rounded-l-md rounded-r-none border-r border-solid border-med\"\n                            type=\"secondaryText\"\n                            icon=\"remove\"\n                            onClick={this.handleDecrease}\n                            disabled={this.value <= this.min}\n                            aria-label=\"Subtract\"\n                            data-name=\"input-subtract\"\n                        ></atui-button>\n                    )}\n                    <input\n                        id={this.inputId}\n                        readonly={this.readonly ? true : undefined}\n                        disabled={this.disabled ? true : undefined}\n                        required={this.required}\n                        type=\"number\"\n                        placeholder={`${this.placeholder}`}\n                        onInput={(event) =>\n                            (this.value = Number(\n                                (event.target as HTMLInputElement).value,\n                            ))\n                        }\n                        onChange={(event) => this.handleChange(event)}\n                        value={this.value}\n                        ref={(el) => (this.inputEl = el)}\n                        class={classname}\n                        data-name=\"input\"\n                    />\n                    {this.show_buttons && !this.disabled && !this.readonly && (\n                        <atui-button\n                            class=\"rounded-l-none rounded-r-md border-l border-solid border-med\"\n                            type=\"secondaryText\"\n                            icon=\"add\"\n                            onClick={this.handleIncrease}\n                            disabled={this.value >= this.max}\n                            aria-label=\"Add\"\n                            data-name=\"input-add\"\n                        ></atui-button>\n                    )}\n                </div>\n\n                {this.error_text && this.invalid && (\n                    <span\n                        class=\"text-sm text-error\"\n                        data-name=\"input-error\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}