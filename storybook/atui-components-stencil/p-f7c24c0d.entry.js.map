{"version":3,"names":["messageVariants","cva","variants","role","user","assistant","loading","true","false","defaultVariants","AtuiPromptMessage","constructor","hostRef","this","content","error","handleCopy","atuiCopy","emit","handleRetry","atuiRetry","handleEdit","atuiEdit","handleFeedbackPositive","atuiPositiveFeedback","handleFeedbackNegative","atuiNegativeFeedback","componentWillLoad","translations","fetchTranslations","errorEl","renderAvatar","variant","initials","name","charAt","toUpperCase","h","src","avatar","alt","size","renderActions","class","position","slot","type","icon","onClick","Fragment","renderContent","ref","el","error_message","ATUI","PROMPT","ERROR_GENERATING_RESPONSE","render","messageClasses","Host","key"],"sources":["src/components/prompt/atui-prompt-message/atui-prompt-message.tsx"],"sourcesContent":["import {\n    Component,\n    Host,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Fragment,\n    State,\n    Element,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\nimport { MessageRole } from '../../../types/prompt';\nimport { fetchTranslations } from '../../../utils/translation';\n\nconst messageVariants = cva('text-base max-w-4xl rounded-lg px-8 py-4', {\n    variants: {\n        role: {\n            user: 'ml-auto bg-surface-2 text-dark',\n            assistant: 'mr-auto text-dark',\n        },\n        loading: {\n            true: 'animate-pulse',\n            false: '',\n        },\n    },\n    defaultVariants: {\n        role: 'user',\n        loading: false,\n    },\n});\n\n/**\n * @category Prompt\n * @description A message component for displaying individual chat messages with different roles (user, assistant). Supports optional avatars, loading states, error states, and interactive actions like copy, edit, and retry.\n */\n@Component({\n    tag: 'atui-prompt-message',\n    shadow: false,\n})\nexport class AtuiPromptMessage {\n    /**\n     * The role/type of the message sender (only 'user' and 'assistant' are supported)\n     */\n    @Prop() role: Exclude<MessageRole, 'system'> = 'user';\n\n    /**\n     * The message content text\n     */\n    @Prop() content: string = '';\n\n    /**\n     * URL for a custom avatar image\n     */\n    @Prop() avatar: string;\n\n    /**\n     * Display name for the message sender\n     */\n    @Prop() name: string;\n\n    /**\n     * Shows loading state with animated placeholder content\n     */\n    @Prop() loading: boolean = false;\n\n    /**\n     * Shows error state styling and enables retry action\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Custom error message text (defaults to generic error message)\n     */\n    @Prop() error_message: string;\n\n    /**\n     * Emitted when the copy action is triggered\n     */\n    @Event() atuiCopy: EventEmitter<string>;\n\n    /**\n     * Emitted when positive feedback action is triggered\n     */\n    @Event() atuiPositiveFeedback: EventEmitter<void>;\n\n    /**\n     * Emitted when negative feedback action is triggered\n     */\n    @Event() atuiNegativeFeedback: EventEmitter<void>;\n\n    /**\n     * Emitted when the retry action is triggered (for assistant messages with errors)\n     */\n    @Event() atuiRetry: EventEmitter<void>;\n\n    /**\n     * Emitted when the edit action is triggered (for user messages)\n     */\n    @Event() atuiEdit: EventEmitter<string>;\n\n    /**\n     * @slot - Custom message content (alternative to using the content prop)\n     */\n    @State() translations: any;\n\n    errorEl: HTMLDivElement;\n    @Element() el: HTMLAtuiInputElement;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.errorEl);\n    }\n\n    private handleCopy = () => {\n        this.atuiCopy.emit(this.content);\n    };\n\n    private handleRetry = () => {\n        this.atuiRetry.emit();\n    };\n\n    private handleEdit = () => {\n        this.atuiEdit.emit(this.content);\n    };\n\n    private handleFeedbackPositive = () => {\n        this.atuiPositiveFeedback.emit();\n    };\n\n    private handleFeedbackNegative = () => {\n        this.atuiNegativeFeedback.emit();\n    };\n\n    private renderAvatar() {\n        const variant = this.role === 'user' ? 'primary' : 'secondary';\n\n        const initials = this.name\n            ? this.name.charAt(0).toUpperCase()\n            : this.role === 'user'\n              ? 'U'\n              : 'A';\n\n        return (\n            <atui-avatar\n                src={this.avatar}\n                alt={this.name || this.role}\n                initials={initials}\n                variant={variant}\n                size=\"sm\"\n                data-name=\"message-avatar\"\n            />\n        );\n    }\n\n    private renderActions() {\n        if (this.loading) return null;\n\n        return (\n            <div\n                class=\"mt-2 flex items-center justify-end gap-2\"\n                data-name=\"message-actions\"\n            >\n                {this.role === 'user' && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"edit\"\n                            class=\"text-xs\"\n                            onClick={this.handleEdit}\n                            data-name=\"edit-button\"\n                        />\n                        <span slot=\"tooltip-content\">Edit</span>\n                    </atui-tooltip>\n                )}\n\n                {this.role === 'assistant' && (\n                    <Fragment>\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                icon=\"thumb_up\"\n                                onClick={this.handleFeedbackPositive}\n                                data-name=\"feedback-positive-button\"\n                            />\n                            <span slot=\"tooltip-content\">Helpful</span>\n                        </atui-tooltip>\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                icon=\"thumb_down\"\n                                onClick={this.handleFeedbackNegative}\n                                data-name=\"feedback-negative-button\"\n                            />\n                            <span slot=\"tooltip-content\">Not helpful</span>\n                        </atui-tooltip>\n\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                icon=\"content_copy\"\n                                type=\"secondaryText\"\n                                onClick={this.handleCopy}\n                                data-name=\"copy-button\"\n                            />\n                            <span slot=\"tooltip-content\">Copy</span>\n                        </atui-tooltip>\n                    </Fragment>\n                )}\n                {this.role === 'assistant' && this.error && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"refresh\"\n                            onClick={this.handleRetry}\n                            data-name=\"retry-button\"\n                        />\n                        <span slot=\"tooltip-content\">Retry</span>\n                    </atui-tooltip>\n                )}\n            </div>\n        );\n    }\n\n    private renderContent() {\n        if (this.loading) {\n            return (\n                <div\n                    class=\"py-8\"\n                    data-name=\"loading-content\"\n                >\n                    <atui-loading\n                        variant=\"typing\"\n                        size=\"sm\"\n                    />\n                </div>\n            );\n        }\n\n        if (this.error) {\n            return (\n                <div\n                    class=\"space-y-2\"\n                    ref={(el) => (this.errorEl = el)}\n                    data-name=\"error-content\"\n                >\n                    <p class=\"text-destructive\">\n                        {this.error_message ||\n                            this.translations.ATUI.PROMPT\n                                .ERROR_GENERATING_RESPONSE}\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                class=\"prose prose-sm preserve-newlines max-w-none\"\n                data-name=\"message-content\"\n            >\n                <slot></slot>\n                {this.content}\n            </div>\n        );\n    }\n\n    render() {\n        const messageClasses = messageVariants({\n            role: this.role,\n            loading: this.loading,\n        });\n\n        return (\n            <Host\n                class=\"flex w-full gap-8\"\n                data-name=\"message-container\"\n            >\n                {this.avatar && this.renderAvatar()}\n\n                <div class=\"space-y-1 flex-1\">\n                    <div class=\"flex items-center gap-8\">\n                        {this.name && (\n                            <span\n                                class=\"text-sm text-light\"\n                                data-name=\"message-name\"\n                            >\n                                {this.name}\n                            </span>\n                        )}\n                    </div>\n\n                    <div class={messageClasses}>{this.renderContent()}</div>\n\n                    {this.renderActions()}\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}