{"version":3,"names":["atuiDialogCss","AtuiDialogComponent","constructor","hostRef","this","role","isOpen","handleDialogClose","event","preventDefault","closeDialog","handleKeyDown","key","openDialog","dialog","el","querySelector","showModal","close","removeAttribute","render","h","class","id","dialog_id","onClose","onKeyDown"],"sources":["src/components/atui-dialog/atui-dialog.scss?tag=atui-dialog","src/components/atui-dialog/atui-dialog.tsx"],"sourcesContent":[".c-atui-dialog {\n    margin: auto;\n    display: block;\n    max-height: calc(100dvh - 48px);\n    overflow: hidden;\n    border: 0;\n    padding: 0;\n    background: transparent;\n    visibility: hidden;\n    z-index: var(--token-z-index-modal);\n    transform-origin: bottom center;\n    opacity: 0;\n    scale: 0.95;\n    box-shadow: var(--token-shadow-3);\n    transition:\n        translate var(--token-transition-time),\n        scale var(--token-transition-time),\n        filter var(--token-transition-time),\n        opacity var(--token-transition-time),\n        visibility var(--token-transition-time);\n\n    &::backdrop {\n        animation: fadeIn 0.3s ease forwards;\n        background: rgba(0, 0, 0, 0.2);\n        transition: opacity var(--token-transition-time) ease-in-out\n            allow-discrete;\n    }\n\n    @keyframes fadeIn {\n        from {\n            background-color: rgba(0, 0, 0, 0);\n        }\n        to {\n            background-color: rgba(0, 0, 0, 0.6);\n        }\n    }\n\n    & > * {\n        max-height: calc(100dvh - 48px);\n    }\n\n    &[open] {\n        translate: 0 0;\n        scale: 1;\n        opacity: 1;\n        visibility: visible;\n\n        @starting-style {\n            opacity: 0;\n            scale: 1.15;\n        }\n    }\n\n    &:not([open]) {\n        scale: 0.95;\n        opacity: 0;\n        visibility: hidden;\n    }\n}\n","import { Component, Prop, h, Element, Method, State } from '@stencil/core';\n\n/**\n * @category Overlays\n * @description A modal dialog component for displaying content that requires user interaction or attention. Features backdrop click handling, escape key support, and programmatic open/close control.\n *\n * @slot - Content placed inside of the dialog box\n */\n@Component({\n    tag: 'atui-dialog',\n    styleUrl: 'atui-dialog.scss',\n    shadow: false,\n})\nexport class AtuiDialogComponent {\n    @Element() el!: HTMLAtuiDialogElement;\n\n    /**\n     * ID of the dialog element (used to open and close the modal)\n     */\n    @Prop()\n    dialog_id: string;\n\n    /**\n     * Role of the dialog element. Can be either 'dialog' or 'alertdialog'\n     */\n    @Prop()\n    role: 'dialog' | 'alertdialog' = 'dialog';\n\n    /**\n     * Internal state to track if dialog is open\n     */\n    @State()\n    isOpen: boolean = false;\n\n    /**\n     * Opens the dialog modal\n     * @returns Promise that resolves when the dialog is opened\n     */\n    @Method()\n    async openDialog(): Promise<void> {\n        const dialog = this.el.querySelector('dialog') as HTMLDialogElement;\n        if (dialog && !this.isOpen) {\n            dialog.showModal();\n            this.isOpen = true;\n        }\n    }\n\n    /**\n     * Closes the dialog modal\n     * @returns Promise that resolves when the dialog is closed\n     */\n    @Method()\n    async closeDialog(): Promise<void> {\n        const dialog = this.el.querySelector('dialog') as HTMLDialogElement;\n        if (dialog && this.isOpen) {\n            dialog.close();\n            this.isOpen = false;\n            dialog.removeAttribute('open');\n        }\n    }\n\n    private handleDialogClose = (event: Event) => {\n        event.preventDefault();\n        if (this.isOpen) {\n            this.closeDialog();\n        }\n    };\n\n    private handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Escape' && this.isOpen) {\n            event.preventDefault();\n            this.closeDialog();\n        }\n    };\n\n    render() {\n        return (\n            <dialog\n                class=\"c-atui-dialog\"\n                id={this.dialog_id}\n                data-name=\"dialog\"\n                role={this.role}\n                aria-modal=\"true\"\n                onClose={this.handleDialogClose}\n                onKeyDown={this.handleKeyDown}\n            >\n                <div class=\"backdrop-content\">\n                    <slot />\n                </div>\n            </dialog>\n        );\n    }\n}\n"],"mappings":"kDAAA,MAAMA,EAAgB,orC,MCaTC,EAAmB,MALhC,WAAAC,CAAAC,G,UAkBIC,KAAIC,KAA6B,SAMjCD,KAAME,OAAY,MA6BVF,KAAAG,kBAAqBC,IACzBA,EAAMC,iBACN,GAAIL,KAAKE,OAAQ,CACbF,KAAKM,a,GAILN,KAAAO,cAAiBH,IACrB,GAAIA,EAAMI,MAAQ,UAAYR,KAAKE,OAAQ,CACvCE,EAAMC,iBACNL,KAAKM,a,EAqBhB,CArDG,gBAAMG,GACF,MAAMC,EAASV,KAAKW,GAAGC,cAAc,UACrC,GAAIF,IAAWV,KAAKE,OAAQ,CACxBQ,EAAOG,YACPb,KAAKE,OAAS,I,EAStB,iBAAMI,GACF,MAAMI,EAASV,KAAKW,GAAGC,cAAc,UACrC,GAAIF,GAAUV,KAAKE,OAAQ,CACvBQ,EAAOI,QACPd,KAAKE,OAAS,MACdQ,EAAOK,gBAAgB,O,EAkB/B,MAAAC,GACI,OACIC,EAAA,UAAAT,IAAA,2CACIU,MAAM,gBACNC,GAAInB,KAAKoB,UACC,qBACVnB,KAAMD,KAAKC,KAAI,aACJ,OACXoB,QAASrB,KAAKG,kBACdmB,UAAWtB,KAAKO,eAEhBU,EAAK,OAAAT,IAAA,2CAAAU,MAAM,oBACPD,EAAQ,QAAAT,IAAA,8C","ignoreList":[]}