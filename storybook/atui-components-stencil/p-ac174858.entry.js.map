{"version":3,"names":["inputVariants","cva","variants","focused","false","true","disabled","readonly","invalid","defaultVariants","optionVariants","active","AtuiSelectComponent","constructor","hostRef","this","typeahead","autoclose","searchText","isOpen","hasMatchingOptions","menuId","Math","random","toString","substring","optionEls","componentWillLoad","translations","fetchTranslations","el","componentDidLoad","querySelectorAll","forEach","option","push","parentRect","getBoundingClientRect","parentWidth","width","updateIsOpenState","event","detail","handleChange","_a","menuRef","closeMenu","value","inputEl","focus","atuiChange","emit","handleClear","handleKeyDownMenu","key","preventDefault","target","HTMLLIElement","click","menuContainer","querySelector","handleArrowNavigation","handleHomeEndNavigation","render","h","Host","class","onFocusout","async","relatedTarget","contains","closest","setTimeout","renderlabel","ref","trigger","align","role","portal","onAtuiMenuStateChange","renderInput","renderOptions","error_text","name","label","required","info_text","for","hint_text","classname","slot","list","autoComplete","undefined","type","placeholder","onInput","e","tabindex","id","onKeyDown","clearable","toLowerCase","trimmedSearch","trim","options","some","includes","onClick","stopPropagation","size","icon","filter","map","renderOption","_c","_b","ATUI","NO_RESULTS_FOUND","isSelected","tabIndex"],"sources":["src/components/atui-select/atui-select.tsx"],"sourcesContent":["import {\n    Component,\n    Prop,\n    State,\n    Element,\n    h,\n    Host,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../utils/translation';\nimport { cva } from 'class-variance-authority';\nimport { SelectOption } from '../../types/select';\nimport {\n    handleArrowNavigation,\n    handleHomeEndNavigation,\n} from '../../utils/keyboard-navigation';\n\nconst inputVariants = cva(\n    'height-[36px] transition[background-color,color,box-shadow] placeholder-text-light group/select:focus-within:ring-2 w-full cursor-pointer rounded-md border border-solid p-8 outline-0 duration-300 ease-in-out focus:ring-2',\n    {\n        variants: {\n            focused: {\n                false: 'ring-active-foreground/30',\n                true: 'pointer-events-none',\n            },\n            disabled: {\n                false: 'bg-white focus-within:ring-active-foreground/30',\n                true: 'pointer-events-none border-none bg-surface-1 !text-disabled',\n            },\n            readonly: {\n                false: 'focus-within:ring-active-foreground/30',\n                true: 'cursor-text border-none !bg-surface-1 !text-dark',\n            },\n            invalid: {\n                false: 'border-med focus-within:border-active-dark focus-within:ring-active-foreground/30',\n                true: 'border-error-base focus-within:border-error-base focus-within:ring-destructive-foreground/30',\n            },\n        },\n        defaultVariants: {\n            disabled: false,\n            readonly: false,\n            invalid: false,\n        },\n    },\n);\n\nconst optionVariants = cva(\n    'transition[background-color,color,box-shadow] flex w-full cursor-pointer items-center truncate p-8 text-body font-normal duration-300 ease-in-out focus:outline-0 focus:ring-2 focus:ring-inset focus:ring-active-foreground/40',\n    {\n        variants: {\n            active: {\n                true: 'bg-active-light text-active',\n                false: 'bg-white hover:bg-disabled-light',\n            },\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A dropdown selection component for choosing single values from a list of options. Features search functionality, keyboard navigation, and accessibility support.\n */\n@Component({\n    tag: 'atui-select',\n    shadow: false,\n})\nexport class AtuiSelectComponent {\n    /**\n     * Value of the currently selected option\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    /**\n     * Sets the options in the dropdown\n     */\n    @Prop()\n    options: SelectOption[];\n\n    /**\n     * Label of the input.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Optional info icon with detailed tooltip description. Displayed at right of label.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Placeholder for the select.\n     */\n    @Prop()\n    placeholder?: string;\n\n    /**\n     * Error message visible when input is valid.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Indicated form field is required.\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Set the input to appear valid.\n     */\n    @Prop()\n    invalid?: boolean;\n\n    /**\n     * Set input to readonly mode, allows users to select any active values.\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Disable user interaction. Disabled state should be applied via form control.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Set the select input to be clearable. Only enabled on typeahead selects.\n     */\n    @Prop()\n    clearable?: boolean;\n\n    /**\n     * Set the select to appear as a typeahead input.\n     */\n    @Prop()\n    typeahead?: boolean = false;\n\n    /**\n     * Close the menu when the user clicks within the menu panel. Default for single selection menus.\n     */\n    @Prop()\n    autoclose?: boolean = true;\n\n    inputEl: HTMLInputElement;\n    @State() searchText: string = '';\n    @State() isOpen: boolean = false;\n    @State() translations: any;\n    @State() hasMatchingOptions: boolean = false;\n    @State() parentWidth: string;\n\n    @Element() el: HTMLElement;\n    private menuId = `dropdown-${Math.random().toString(36).substring(2, 11)}`;\n    private menuRef: HTMLAtuiMenuElement;\n    private optionEls: HTMLLIElement[] = [];\n\n    /**\n     * Emits an event containing the selected value when changed.\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    componentDidLoad() {\n        this.el\n            .querySelectorAll('li[data-name=\"select-option\"]')\n            .forEach((option) => {\n                this.optionEls.push(option as HTMLLIElement);\n            });\n        const parentRect = this.el.getBoundingClientRect();\n        this.parentWidth = `${parentRect.width}px`;\n    }\n\n    private updateIsOpenState(event: CustomEvent<boolean>): void {\n        this.isOpen = event.detail;\n    }\n\n    private async handleChange(option: string): Promise<void> {\n        if (this.autoclose) {\n            await this.menuRef?.closeMenu();\n        }\n        this.value = option;\n        this.searchText = '';\n        this.inputEl.focus();\n        this.atuiChange.emit(this.value);\n    }\n\n    private async handleClear(): Promise<void> {\n        this.searchText = '';\n    }\n\n    private async handleKeyDownMenu(event: KeyboardEvent): Promise<void> {\n        if (event.key === 'Escape') {\n            event.preventDefault();\n            await this.menuRef.closeMenu();\n            this.inputEl.focus();\n            return;\n        }\n\n        if (event.key === 'Enter' || event.key === ' ') {\n            if (event.target instanceof HTMLLIElement) {\n                event.preventDefault();\n                event.target.click();\n            }\n            return;\n        }\n\n        if (event.key === 'Tab') {\n            return;\n        }\n\n        const menuContainer = this.el.querySelector(\n            'ul[id=\"atui-select\"]',\n        ) as HTMLElement;\n        if (!menuContainer) return;\n\n        handleArrowNavigation(event, menuContainer);\n        handleHomeEndNavigation(event, menuContainer);\n    }\n\n    render() {\n        return (\n            <Host\n                class=\"group/select\"\n                onFocusout={async (event: FocusEvent) => {\n                    await this.handleClear();\n                    const relatedTarget = event.relatedTarget as HTMLElement;\n                    if (\n                        !relatedTarget ||\n                        (!this.el.contains(relatedTarget) &&\n                            !relatedTarget.closest('[data-atui-menu-portal]'))\n                    ) {\n                        setTimeout(async () => {\n                            await this.menuRef?.closeMenu();\n                        }, 100);\n                    }\n                }}\n            >\n                {this.renderlabel()}\n                <atui-menu\n                    ref={(el) => (this.menuRef = el)}\n                    trigger=\"click\"\n                    align=\"start\"\n                    width={this.parentWidth}\n                    role=\"listbox\"\n                    portal={true}\n                    disabled={this.disabled || this.readonly}\n                    onAtuiMenuStateChange={(event) =>\n                        this.updateIsOpenState(event)\n                    }\n                >\n                    {this.renderInput()}\n                    {!this.disabled || !this.readonly\n                        ? this.renderOptions()\n                        : null}\n                </atui-menu>\n\n                <div>\n                    {this.error_text && this.invalid && (\n                        <span\n                            class=\"text-error\"\n                            data-name=\"select-error\"\n                        >\n                            {this.error_text}\n                        </span>\n                    )}\n                </div>\n            </Host>\n        );\n    }\n\n    renderlabel() {\n        return (\n            <div class=\"mb-4 flex flex-col\">\n                <slot name=\"label\" />\n                {(this.label || this.required || this.info_text) && (\n                    <atui-form-label\n                        for={this.menuId}\n                        label={this.label}\n                        required={this.required && !this.readonly}\n                        info_text={this.info_text}\n                    />\n                )}\n                {this.hint_text && (\n                    <span\n                        class=\"inline-block text-xs leading-tight text-light\"\n                        data-name=\"select-hint\"\n                    >\n                        {this.hint_text}\n                    </span>\n                )}\n            </div>\n        );\n    }\n\n    renderInput() {\n        const classname = inputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n        });\n\n        return (\n            <div\n                class=\"relative flex items-center gap-4\"\n                slot=\"menu-trigger\"\n            >\n                <input\n                    class={classname}\n                    role=\"combobox\"\n                    list=\"atui-select\"\n                    autoComplete=\"off\"\n                    aria-autocomplete={this.typeahead ? 'list' : undefined}\n                    aria-expanded={this.isOpen}\n                    aria-controls={this.menuId}\n                    type=\"text\"\n                    readonly={true}\n                    disabled={this.disabled}\n                    placeholder={this.placeholder}\n                    value={this.value}\n                    onInput={(e: InputEvent) => e.preventDefault()}\n                    data-name=\"select-input\"\n                    ref={(el) => (this.inputEl = el)}\n                ></input>\n\n                {!this.readonly && !this.disabled && (\n                    <div\n                        class=\"user-select-none pointer-events-none absolute right-4 flex h-full items-center bg-transparent p-4 text-foreground\"\n                        role=\"presentation\"\n                        tabindex={-1}\n                    >\n                        <span\n                            class=\"material-icons h-16 w-16 text-[16px] leading-[16px]\"\n                            data-name=\"button-icon-right\"\n                        >\n                            {this.isOpen ? 'arrow_drop_up' : 'arrow_drop_down'}\n                        </span>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    renderOptions() {\n        return (\n            <ul\n                slot=\"menu-content\"\n                class=\"contents\"\n                id=\"atui-select\"\n                onKeyDown={async (event) => {\n                    await this.handleKeyDownMenu(event);\n                }}\n            >\n                {this.typeahead && (\n                    <div class=\"relative z-10 bg-white p-4\">\n                        <input\n                            type=\"text\"\n                            class={`transition[background-color,color] mb-4 h-24 w-full flex-shrink flex-grow basis-0 rounded-md bg-surface-1 p-8 outline-0 ring-active-foreground/30 duration-300 ease-in-out focus:ring-2 ${\n                                this.clearable ? 'pr-24' : ''\n                            } `}\n                            placeholder=\"Search...\"\n                            value={this.searchText}\n                            onInput={(event) => {\n                                this.searchText = (\n                                    event.target as HTMLInputElement\n                                ).value.toLowerCase();\n                                const trimmedSearch = this.searchText\n                                    .trim()\n                                    .toLowerCase();\n                                this.hasMatchingOptions = trimmedSearch\n                                    ? this.options?.some((option) =>\n                                          option.value\n                                              .toLowerCase()\n                                              .includes(trimmedSearch),\n                                      )\n                                    : true;\n                            }}\n                            onClick={(e) => e.stopPropagation()}\n                        />\n\n                        {this.clearable && this.searchText !== '' && (\n                            <div class=\"absolute right-4 top-4\">\n                                <atui-button\n                                    size=\"sm\"\n                                    icon=\"cancel\"\n                                    type=\"secondaryText\"\n                                    onClick={(event) => {\n                                        event.stopPropagation();\n                                        this.handleClear();\n                                    }}\n                                    data-name=\"select-clear\"\n                                ></atui-button>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {this.options\n                    ?.filter(\n                        (option) =>\n                            !this.searchText ||\n                            option.value\n                                .toLowerCase()\n                                .includes(this.searchText),\n                    )\n                    .map((option) => this.renderOption(option))}\n\n                {this.typeahead &&\n                    this.searchText &&\n                    !this.hasMatchingOptions && (\n                        <div class=\"w-full bg-white px-16 py-8 text-body text-light\">\n                            {this.translations?.ATUI?.NO_RESULTS_FOUND ||\n                                'No results found'}\n                        </div>\n                    )}\n            </ul>\n        );\n    }\n\n    renderOption(option: SelectOption) {\n        const classname = optionVariants({\n            active: this.value === option.value,\n        });\n\n        const isSelected = this.value === option.value;\n\n        return (\n            <li\n                role=\"option\"\n                value={option.value}\n                data-name=\"select-option\"\n                aria-selected={isSelected ? 'true' : 'false'}\n                tabIndex={0}\n                class={classname}\n                onClick={() => this.handleChange(option.value)}\n            >\n                {option.value}\n            </li>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}