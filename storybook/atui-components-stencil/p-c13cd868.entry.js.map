{"version":3,"names":["AtTabSelector","constructor","hostRef","this","tabs","layout","hide_nav","tabsetId","Math","random","toString","substring","componentDidLoad","updateIndicatorPosition","componentDidUpdate","handleActiveTabChange","newValue","activeTab","find","tab","id","atuiChange","emit","requestAnimationFrame","indicatorRef","el","querySelector","containerRef","handleTabChange","active_tab","getActiveTab","setActiveTab","value","tabOptions","map","h","tab_id","tab_title","title","is_active","onClick","containerRect","getBoundingClientRect","buttonRect","style","width","left","opacity","checkLayoutAndRender","class","template","slot","role","name","render","Host","key"],"sources":["src/components/at-tab-selector/at-tab-selector.tsx"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n    Event,\n    Method,\n    Element,\n    Watch,\n} from '@stencil/core';\n\nexport interface Tab {\n    id: string;\n    title: string;\n}\n\nexport type Layout = 'vertical' | 'horizontal';\n\n/**\n * ### interface Tab\n * ```\n * {\n *   id: string;\n *   title: string;\n * }\n * ```\n * @category Navigation\n * @description A tab selector component for switching between different content sections. Provides keyboard navigation and accessible tab panel management.\n *\n * @slot nav-content - Content to be placed after the tabs\n */\n@Component({\n    tag: 'at-tab-selector',\n    shadow: false,\n})\nexport class AtTabSelector {\n    @Element() el: HTMLElement;\n\n    /**\n     * List of tabs the selector will have\n     */\n    @Prop()\n    tabs: Tab[] = [];\n\n    /**\n     * Layout of the tabs\n     */\n    @Prop()\n    layout: Layout = 'horizontal';\n\n    /**\n     * hide navigation when you want to provide custom controls\n     */\n    @Prop()\n    hide_nav: boolean = false;\n\n    /**\n     * Sets the current active tab\n     */\n    @Prop({ mutable: true })\n    active_tab?: string;\n\n    /**\n     * Emits the id of the tab when a new active_tab is set\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    componentDidLoad() {\n        this.updateIndicatorPosition();\n    }\n\n    componentDidUpdate() {\n        this.updateIndicatorPosition();\n    }\n\n    @Watch('active_tab')\n    handleActiveTabChange(newValue: string) {\n        const activeTab = this.tabs.find((tab) => tab.id === newValue);\n        if (activeTab) {\n            this.atuiChange.emit(activeTab.id);\n            requestAnimationFrame(() => {\n                this.updateIndicatorPosition();\n            });\n        }\n    }\n\n    private tabsetId = `tabset-${Math.random().toString(36).substring(2, 11)}`;\n\n    private get indicatorRef(): HTMLElement {\n        return this.el.querySelector(`#indicator-${this.tabsetId}`);\n    }\n\n    private get containerRef(): HTMLElement {\n        return this.el.querySelector(`#container-${this.tabsetId}`);\n    }\n\n    handleTabChange(id: string): void {\n        this.active_tab = id;\n    }\n\n    /**\n     * Gets the current active tab\n     * @returns The current active_tab value\n     */\n    @Method()\n    async getActiveTab(): Promise<string> {\n        return this.active_tab;\n    }\n\n    /**\n     * Sets the current active tab\n     * @param value - The tab id to set as active\n     */\n    @Method()\n    async setActiveTab(value: string): Promise<void> {\n        this.active_tab = value;\n    }\n\n    get tabOptions(): any {\n        if (this.tabs) {\n            return this.tabs.map((tab) => (\n                <at-tab\n                    tab_id={tab.id}\n                    tab_title={tab.title}\n                    layout={this.layout}\n                    is_active={this.active_tab === tab.id}\n                    onClick={() => this.handleTabChange(tab.id)}\n                ></at-tab>\n            ));\n        }\n    }\n\n    private updateIndicatorPosition() {\n        if (!this.indicatorRef || !this.containerRef) return;\n\n        const activeTab = this.el.querySelector('at-tab[data-active=\"true\"]');\n\n        if (activeTab) {\n            const containerRect = this.containerRef.getBoundingClientRect();\n            const buttonRect = activeTab.getBoundingClientRect();\n\n            this.indicatorRef.style.width = `${buttonRect.width - 16}px`;\n            this.indicatorRef.style.left = `${buttonRect.left - containerRect.left}px`;\n            this.indicatorRef.style.opacity = '1';\n        }\n    }\n\n    checkLayoutAndRender(): any {\n        if (this.layout === 'horizontal') {\n            return (\n                <at-layout\n                    class=\"flex flex-grow\"\n                    template=\"tabset\"\n                    data-name=\"navigation-top\"\n                >\n                    {!this.hide_nav && (\n                        <div slot=\"tabset-navigation\">\n                            <nav\n                                role=\"tablist\"\n                                class=\"relative flex flex-wrap border-b border-gray-200 text-center text-sm font-medium\"\n                                id={`container-${this.tabsetId}`}\n                            >\n                                {this.tabOptions}\n                                <slot name=\"tab-nav\" />\n\n                                <div\n                                    id={`indicator-${this.tabsetId}`}\n                                    class=\"bg-active-foreground pointer-events-none absolute bottom-0 z-10 mx-8 h-2 rounded-sm transition-[left] duration-150 ease-in-out\"\n                                    style={{\n                                        left: '0',\n                                        opacity: '0',\n                                    }}\n                                    aria-hidden=\"true\"\n                                    role=\"presentation\"\n                                />\n                            </nav>\n                        </div>\n                    )}\n\n                    <div\n                        role=\"tabpanel\"\n                        slot=\"tabset-content\"\n                    >\n                        <slot />\n                    </div>\n                </at-layout>\n            );\n        }\n\n        if (this.layout === 'vertical') {\n            return (\n                <at-layout\n                    class=\"flex flex-grow\"\n                    template=\"master-detail\"\n                    data-name=\"navigation-left\"\n                >\n                    <div slot=\"master\">\n                        <nav\n                            role=\"tablist\"\n                            class=\"flex flex-grow flex-col pr-16\"\n                        >\n                            {this.tabOptions}\n                            <slot name=\"tab-nav\" />\n                        </nav>\n                    </div>\n                    <div\n                        role=\"tabpanel\"\n                        slot=\"detail\"\n                        class=\"flex flex-grow flex-col\"\n                    >\n                        <slot />\n                    </div>\n                </at-layout>\n            );\n        }\n    }\n\n    render() {\n        return <Host>{this.checkLayoutAndRender()}</Host>;\n    }\n}\n\n/**\n * @category Form Controls\n * @description A tab selector component for switching between different content sections. Provides keyboard navigation and accessible tab panel management.\n */\n"],"mappings":"sEAoCaA,EAAa,MAJ1B,WAAAC,CAAAC,G,iDAWIC,KAAIC,KAAU,GAMdD,KAAME,OAAW,aAMjBF,KAAQG,SAAY,MAiCZH,KAAAI,SAAW,UAAUC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,KAsIxE,CAzJG,gBAAAC,GACIT,KAAKU,yB,CAGT,kBAAAC,GACIX,KAAKU,yB,CAIT,qBAAAE,CAAsBC,GAClB,MAAMC,EAAYd,KAAKC,KAAKc,MAAMC,GAAQA,EAAIC,KAAOJ,IACrD,GAAIC,EAAW,CACXd,KAAKkB,WAAWC,KAAKL,EAAUG,IAC/BG,uBAAsB,KAClBpB,KAAKU,yBAAyB,G,EAO1C,gBAAYW,GACR,OAAOrB,KAAKsB,GAAGC,cAAc,cAAcvB,KAAKI,W,CAGpD,gBAAYoB,GACR,OAAOxB,KAAKsB,GAAGC,cAAc,cAAcvB,KAAKI,W,CAGpD,eAAAqB,CAAgBR,GACZjB,KAAK0B,WAAaT,C,CAQtB,kBAAMU,GACF,OAAO3B,KAAK0B,U,CAQhB,kBAAME,CAAaC,GACf7B,KAAK0B,WAAaG,C,CAGtB,cAAIC,GACA,GAAI9B,KAAKC,KAAM,CACX,OAAOD,KAAKC,KAAK8B,KAAKf,GAClBgB,EAAA,UACIC,OAAQjB,EAAIC,GACZiB,UAAWlB,EAAImB,MACfjC,OAAQF,KAAKE,OACbkC,UAAWpC,KAAK0B,aAAeV,EAAIC,GACnCoB,QAAS,IAAMrC,KAAKyB,gBAAgBT,EAAIC,O,EAMhD,uBAAAP,GACJ,IAAKV,KAAKqB,eAAiBrB,KAAKwB,aAAc,OAE9C,MAAMV,EAAYd,KAAKsB,GAAGC,cAAc,8BAExC,GAAIT,EAAW,CACX,MAAMwB,EAAgBtC,KAAKwB,aAAae,wBACxC,MAAMC,EAAa1B,EAAUyB,wBAE7BvC,KAAKqB,aAAaoB,MAAMC,MAAQ,GAAGF,EAAWE,MAAQ,OACtD1C,KAAKqB,aAAaoB,MAAME,KAAO,GAAGH,EAAWG,KAAOL,EAAcK,SAClE3C,KAAKqB,aAAaoB,MAAMG,QAAU,G,EAI1C,oBAAAC,GACI,GAAI7C,KAAKE,SAAW,aAAc,CAC9B,OACI8B,EACI,aAAAc,MAAM,iBACNC,SAAS,SAAQ,YACP,mBAER/C,KAAKG,UACH6B,EAAK,OAAAgB,KAAK,qBACNhB,EAAA,OACIiB,KAAK,UACLH,MAAM,mFACN7B,GAAI,aAAajB,KAAKI,YAErBJ,KAAK8B,WACNE,EAAM,QAAAkB,KAAK,YAEXlB,EAAA,OACIf,GAAI,aAAajB,KAAKI,WACtB0C,MAAM,iIACNL,MAAO,CACHE,KAAM,IACNC,QAAS,KAED,qBACZK,KAAK,mBAMrBjB,EAAA,OACIiB,KAAK,WACLD,KAAK,kBAELhB,EAAQ,c,CAMxB,GAAIhC,KAAKE,SAAW,WAAY,CAC5B,OACI8B,EACI,aAAAc,MAAM,iBACNC,SAAS,gBAAe,YACd,mBAEVf,EAAK,OAAAgB,KAAK,UACNhB,EAAA,OACIiB,KAAK,UACLH,MAAM,iCAEL9C,KAAK8B,WACNE,EAAA,QAAMkB,KAAK,cAGnBlB,EACI,OAAAiB,KAAK,WACLD,KAAK,SACLF,MAAM,2BAENd,EAAQ,c,EAO5B,MAAAmB,GACI,OAAOnB,EAACoB,EAAM,CAAAC,IAAA,4CAAArD,KAAK6C,uB","ignoreList":[]}