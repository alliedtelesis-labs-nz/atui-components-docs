{"version":3,"names":["AtuiTextCellComponent","init","params","size","color","textStyles","containerStyles","textClass","textTransform","this","Object","assign","fontSize","textValue","getTextValue","data","value","getGui","el","refresh","constructor","Array","transferArrayValueToString","String","compactValue","filter","val","length","textVal","reduce","acc","current","render","h","Host","key","class","position","is_visible","generateTooltip","slot","rowIndex","style","_a","onClick","click","_b","tooltipClass"],"sources":["src/components/table-components/cell-components/atui-text-cell/atui-text-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport { InitTextCellParams, ITooltipCell } from '../../../../types';\nimport { CSSProperties } from '../../../../types/styles';\n\nexport interface TextCellData {\n    text: string;\n    tooltip?: string;\n}\n\nexport interface ITextCellParams extends ICellRendererParams, ITooltipCell {\n    text?: (data: TextCellData) => string;\n    color?: string;\n    textStyles?: any | ((params: ICellRendererParams) => any);\n    textClass?: string;\n    textTransform?: (data: any, value: any) => string;\n}\n\n/**\n * @category Table Cell\n * @description A basic text cell component for displaying simple text content in data tables. Provides consistent typography and overflow handling.\n */\n@Component({\n    tag: 'atui-text-cell',\n    shadow: false,\n})\nexport class AtuiTextCellComponent implements ICellRendererComp {\n    @Element() el;\n    @State() containerStyles: CSSProperties;\n    @State() textStyles: CSSProperties;\n    @State() textClass: string;\n    @State() textValue: string;\n    @State() params: InitTextCellParams;\n\n    init(params: InitTextCellParams): void {\n        const {\n            size,\n            color,\n            textStyles,\n            containerStyles,\n            textClass,\n            textTransform,\n        } = params;\n\n        this.textClass = textClass;\n        this.containerStyles = containerStyles;\n        this.params = params;\n\n        if (typeof textStyles == 'function') {\n            this.textStyles = textStyles(params);\n        } else {\n            this.textStyles = {\n                fontSize: size || null,\n                color: color || null,\n                ...textStyles,\n            };\n        }\n\n        this.textValue = this.getTextValue(params);\n\n        if (textTransform) {\n            this.textValue = textTransform(params.data, params.value);\n        }\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: InitTextCellParams): boolean {\n        this.textValue = this.getTextValue(params);\n        return true;\n    }\n\n    // If you are using objects for the value, they will appear as [object Object].\n    // This indicates that you may need to use a valueGetter (see ag-grid API),\n    // with a different cell type - this one is designed for displaying a single string value.\n    private getTextValue(params: ICellRendererParams): string {\n        const { value } = params;\n\n        if (value === '') {\n            return '-';\n        }\n        if (value.constructor === Array) {\n            return this.transferArrayValueToString(value);\n        }\n\n        return String(value);\n    }\n\n    private transferArrayValueToString(value: Array<string | number>): string {\n        const compactValue = value.filter((val) => !!val);\n        if (!compactValue.length) {\n            return '-';\n        }\n        const textVal: string | number = compactValue.reduce((acc, current) => {\n            acc = acc ? `${acc},${current}` : `${current}`;\n            return acc;\n        });\n        return String(textVal);\n    }\n\n    render() {\n        return (\n            <Host class=\"align-center flex h-full\">\n                <atui-tooltip\n                    position=\"right\"\n                    is_visible={!!this.params.generateTooltip}\n                >\n                    <span\n                        slot=\"tooltip-trigger\"\n                        data-index={`column-${this.params.rowIndex}-data`}\n                        style={this.textStyles}\n                        class={`${this.textClass ?? ''} truncate`}\n                        onClick={() => {\n                            if (this.params.click)\n                                this.params.click(this.params);\n                        }}\n                    >\n                        {this.textValue}\n                    </span>\n                    {this.params.generateTooltip && (\n                        <span\n                            slot=\"tooltip-content\"\n                            class={`${this.params.tooltipClass ?? ''} leading-normal`}\n                        >\n                            {this.params.generateTooltip(this.params)}\n                        </span>\n                    )}\n                </atui-tooltip>\n            </Host>\n        );\n    }\n}\n"],"mappings":"+DA0BaA,EAAqB,M,yBAQ9B,IAAAC,CAAKC,GACD,MAAMC,KACFA,EAAIC,MACJA,EAAKC,WACLA,EAAUC,gBACVA,EAAeC,UACfA,EAASC,cACTA,GACAN,EAEJO,KAAKF,UAAYA,EACjBE,KAAKH,gBAAkBA,EACvBG,KAAKP,OAASA,EAEd,UAAWG,GAAc,WAAY,CACjCI,KAAKJ,WAAaA,EAAWH,E,KAC1B,CACHO,KAAKJ,WAAUK,OAAAC,OAAA,CACXC,SAAUT,GAAQ,KAClBC,MAAOA,GAAS,MACbC,E,CAIXI,KAAKI,UAAYJ,KAAKK,aAAaZ,GAEnC,GAAIM,EAAe,CACfC,KAAKI,UAAYL,EAAcN,EAAOa,KAAMb,EAAOc,M,EAI3D,MAAAC,GACI,OAAOR,KAAKS,E,CAGhB,OAAAC,CAAQjB,GACJO,KAAKI,UAAYJ,KAAKK,aAAaZ,GACnC,OAAO,I,CAMH,YAAAY,CAAaZ,GACjB,MAAMc,MAAEA,GAAUd,EAElB,GAAIc,IAAU,GAAI,CACd,MAAO,G,CAEX,GAAIA,EAAMI,cAAgBC,MAAO,CAC7B,OAAOZ,KAAKa,2BAA2BN,E,CAG3C,OAAOO,OAAOP,E,CAGV,0BAAAM,CAA2BN,GAC/B,MAAMQ,EAAeR,EAAMS,QAAQC,KAAUA,IAC7C,IAAKF,EAAaG,OAAQ,CACtB,MAAO,G,CAEX,MAAMC,EAA2BJ,EAAaK,QAAO,CAACC,EAAKC,KACvDD,EAAMA,EAAM,GAAGA,KAAOC,IAAY,GAAGA,IACrC,OAAOD,CAAG,IAEd,OAAOP,OAAOK,E,CAGlB,MAAAI,G,QACI,OACIC,EAACC,EAAK,CAAAC,IAAA,2CAAAC,MAAM,4BACRH,EAAA,gBAAAE,IAAA,2CACIE,SAAS,QACTC,aAAc7B,KAAKP,OAAOqC,iBAE1BN,EAAA,QAAAE,IAAA,2CACIK,KAAK,kBAAiB,aACV,UAAU/B,KAAKP,OAAOuC,gBAClCC,MAAOjC,KAAKJ,WACZ+B,MAAO,IAAGO,EAAAlC,KAAKF,aAAa,MAAAoC,SAAA,EAAAA,EAAA,cAC5BC,QAAS,KACL,GAAInC,KAAKP,OAAO2C,MACZpC,KAAKP,OAAO2C,MAAMpC,KAAKP,OAAO,GAGrCO,KAAKI,WAETJ,KAAKP,OAAOqC,iBACTN,EACI,QAAAE,IAAA,2CAAAK,KAAK,kBACLJ,MAAO,IAAGU,EAAArC,KAAKP,OAAO6C,gBAAY,MAAAD,SAAA,EAAAA,EAAI,qBAErCrC,KAAKP,OAAOqC,gBAAgB9B,KAAKP,U","ignoreList":[]}