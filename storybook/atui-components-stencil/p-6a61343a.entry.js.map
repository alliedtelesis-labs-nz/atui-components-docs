{"version":3,"names":["AtFormLabelComponent","render","h","key","class","this","label","required","htmlFor","_a","for","undefined","info_text","position","slot","DEFAULT_TOOLTIP_MAX_WIDTH","AtTooltip","constructor","hostRef","align","disabled","width","offset","delay","isOpen","triggerEls","updatePosition","async","triggerEl","tooltipEl","updateFloatingPosition","externalTriggerListeners","disabledChanged","newValue","closeTooltip","openTooltip","showPopover","updateAriaExpanded","hidePopover","trigger_id","setAttribute","componentDidLoad","popoverId","Math","random","toString","substr","Array","from","document","querySelectorAll","length","console","warn","el","querySelector","setupFloatingUI","setTimeout","setupPopoverEventListeners","setupExternalTriggerListeners","disconnectedCallback","cleanupFloatingUI","cleanupExternalTriggerListeners","showTimeout","clearTimeout","hideTimeout","forEach","element","event","handler","removeEventListener","addEventListener","customEvent","newState","requestAnimationFrame","style","opacity","mouseEnterHandler","mouseLeaveHandler","push","hideDelay","min","cleanupAutoUpdate","observer","IntersectionObserver","entries","isIntersecting","threshold","observe","autoUpdate","placement","getFloatingUIPlacement","strategy","computePosition","middleware","flip","fallbackStrategy","padding","shift","mainAxis","crossAxis","size","apply","availableWidth","availableHeight","elements","userMax","parseInt","Object","assign","floating","maxWidth","maxHeight","then","x","y","styles","left","top","margin","transform","ancestorScroll","ancestorResize","elementResize","layoutShift","animationFrame","originalCleanup","disconnect","call","positionMap","bottom","right","alignMap","start","end","center","Host","ref","onMouseEnter","onMouseLeave","name","popover","id"],"sources":["src/components/at-form-label/at-form-label.tsx","src/components/at-tooltip/at-tooltip.tsx"],"sourcesContent":["import { Component, h, Prop } from '@stencil/core';\n\n/**\n * @category Form Controls\n * @description A form label component that provides accessible labeling with optional required indicators and info tooltips. Designed for use with form inputs.\n */\n@Component({\n    tag: 'at-form-label',\n    shadow: false,\n})\nexport class AtFormLabelComponent {\n    /**\n     * Label that appears before the info icon.\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * When true, there will be a red star on the label.\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * The text to be contained in the tooltip.\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Placed in the 'for' attribute on the label element\n     */\n    @Prop()\n    for: string;\n\n    render() {\n        return (\n            <div class=\"flex items-center gap-8\">\n                {[\n                    (this.label || this.required) && (\n                        <label\n                            htmlFor={this.for ?? undefined}\n                            class=\"flex gap-4\"\n                        >\n                            {this.label}\n                            {this.required && <span class=\"text-error\">*</span>}\n                        </label>\n                    ),\n                    this.info_text && (\n                        <at-tooltip position=\"right\">\n                            <span\n                                slot=\"tooltip-trigger\"\n                                class=\"material-icons !text-icon-sm text-light cursor-pointer\"\n                            >\n                                info_outline\n                            </span>\n                            <span>{this.info_text}</span>\n                        </at-tooltip>\n                    ),\n                ]}\n            </div>\n        );\n    }\n}\n","import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Element,\n    State,\n    Method,\n    Watch,\n} from '@stencil/core';\nimport {\n    computePosition,\n    flip,\n    shift,\n    offset,\n    autoUpdate,\n    type Placement,\n    size,\n} from '@floating-ui/dom';\n\nexport type TooltipPosition = 'top' | 'bottom' | 'left' | 'right';\nexport type TooltipAlign = 'start' | 'end' | 'center';\nconst DEFAULT_TOOLTIP_MAX_WIDTH = 200;\n\n/**\n * @category **Overlays**\n * @description **A tooltip popover component that displays contextual information when hovering over or focusing on an element.**\n *\n * @slot tooltip-trigger - Shows the tooltip when hovered (only used when trigger_id is not provided)\n * @slot default - Content to go inside the tooltip\n */\n@Component({\n    tag: 'at-tooltip',\n    shadow: false,\n})\nexport class AtTooltip {\n    /**\n     * Position of opened tooltip element relative to the trigger element.\n     */\n    @Prop() position: TooltipPosition = 'top';\n\n    /**\n     * Alignment of opened tooltip element relative to trigger element.\n     */\n    @Prop() align: TooltipAlign = 'center';\n\n    /**\n     * Prevent opening tooltip\n     */\n    @Prop() disabled: boolean = false;\n\n    /**\n     * Maximum width constraint for the tooltip in pixels. Defaults to 300px for readability.\n     */\n    @Prop() width?: string = '200px';\n\n    /**\n     * Offset in pixels from the edge of the trigger element\n     */\n    @Prop() offset?: number = 8;\n\n    /**\n     * Delay before showing and hiding the tooltip when interacting with the trigger element.\n     */\n    @Prop() delay?: number = 150;\n\n    /**\n     * Data-id of an external element to use as the trigger. When provided, the trigger slot is not needed.\n     */\n    @Prop() trigger_id?: string;\n\n    @Watch('disabled')\n    async disabledChanged(newValue: boolean) {\n        if (newValue && this.isOpen) {\n            await this.closeTooltip();\n        }\n    }\n\n    @State() isOpen = false;\n\n    @Element() el: HTMLElement;\n    triggerEl: HTMLElement;\n    tooltipEl: HTMLElement;\n    private triggerEls: HTMLElement[] = [];\n\n    private cleanupAutoUpdate?: () => void;\n    private popoverId: string;\n    private showTimeout?: NodeJS.Timeout;\n    private hideTimeout?: NodeJS.Timeout;\n\n    private updatePosition = async () => {\n        if (this.triggerEl && this.tooltipEl && this.isOpen) {\n            await this.updateFloatingPosition();\n        }\n    };\n\n    /**\n     * Opens the tooltip.\n     */\n    @Method()\n    async openTooltip(): Promise<void> {\n        if (this.disabled) return;\n\n        if (this.tooltipEl) {\n            this.tooltipEl.showPopover();\n            this.isOpen = true;\n        }\n        await this.updatePosition();\n        this.updateAriaExpanded();\n    }\n\n    /**\n     * Closes the tooltip.\n     */\n    @Method()\n    async closeTooltip(): Promise<void> {\n        if (this.tooltipEl) {\n            this.tooltipEl.hidePopover();\n            this.isOpen = false;\n        }\n        this.updateAriaExpanded();\n    }\n\n    private updateAriaExpanded(): void {\n        if (this.trigger_id && this.triggerEl) {\n            this.triggerEl.setAttribute(\n                'aria-expanded',\n                this.isOpen ? 'true' : 'false',\n            );\n        }\n    }\n\n    async componentDidLoad() {\n        this.popoverId = `atui-tooltip-${Math.random().toString(36).substr(2, 9)}`;\n\n        if (this.trigger_id) {\n            this.triggerEls = Array.from(\n                document.querySelectorAll(`[data-id=\"${this.trigger_id}\"]`),\n            ) as HTMLElement[];\n            if (this.triggerEls.length === 0) {\n                console.warn(\n                    `atui-tooltip: No elements found with data-id=\"${this.trigger_id}\"`,\n                );\n                return;\n            }\n        } else {\n            this.triggerEl = this.el.querySelector(\n                '[data-name=\"tooltip-trigger\"]',\n            );\n        }\n\n        await this.setupFloatingUI();\n        setTimeout(() => this.setupPopoverEventListeners(), 0);\n\n        if (this.trigger_id && this.triggerEls.length) {\n            this.setupExternalTriggerListeners();\n        }\n    }\n\n    disconnectedCallback() {\n        this.cleanupFloatingUI();\n        this.cleanupExternalTriggerListeners();\n\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = undefined;\n        }\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = undefined;\n        }\n    }\n\n    private externalTriggerListeners: Array<{\n        element: HTMLElement;\n        event: string;\n        handler: EventListener;\n    }> = [];\n\n    private cleanupExternalTriggerListeners() {\n        this.externalTriggerListeners.forEach(({ element, event, handler }) => {\n            element.removeEventListener(event, handler);\n        });\n        this.externalTriggerListeners = [];\n    }\n\n    private async setupPopoverEventListeners() {\n        if (this.tooltipEl) {\n            this.tooltipEl.addEventListener('toggle', (event: Event) => {\n                const customEvent = event as any;\n                this.isOpen = customEvent.newState === 'open';\n\n                if (this.isOpen) {\n                    requestAnimationFrame(() => {\n                        this.tooltipEl.style.opacity = '1';\n                        this.updatePosition();\n                    });\n                } else {\n                    this.tooltipEl.style.opacity = '0';\n                }\n            });\n        }\n    }\n\n    private setupExternalTriggerListeners() {\n        if (!this.triggerEls || this.triggerEls.length === 0) return;\n\n        this.triggerEls.forEach((el) => {\n            const mouseEnterHandler = () => {\n                if (!this.disabled) {\n                    this.triggerEl = el;\n                    this.mouseEnterHandler();\n                }\n            };\n\n            const mouseLeaveHandler = () => {\n                if (!this.disabled) {\n                    this.triggerEl = el;\n                    this.mouseLeaveHandler();\n                }\n            };\n\n            el.addEventListener('mouseenter', mouseEnterHandler);\n            el.addEventListener('mouseleave', mouseLeaveHandler);\n\n            this.externalTriggerListeners.push(\n                {\n                    element: el,\n                    event: 'mouseenter',\n                    handler: mouseEnterHandler,\n                },\n                {\n                    element: el,\n                    event: 'mouseleave',\n                    handler: mouseLeaveHandler,\n                },\n            );\n\n            el.setAttribute('aria-haspopup', 'true');\n            el.setAttribute('aria-expanded', 'false');\n        });\n    }\n\n    private async mouseEnterHandler(): Promise<void> {\n        if (this.hideTimeout) {\n            clearTimeout(this.hideTimeout);\n            this.hideTimeout = undefined;\n        }\n\n        if (this.isOpen) return;\n\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n        }\n\n        this.showTimeout = setTimeout(async () => {\n            if (!this.disabled && !this.isOpen) {\n                await this.openTooltip();\n            }\n            this.showTimeout = undefined;\n        }, this.delay || 0);\n    }\n\n    private async mouseLeaveHandler(): Promise<void> {\n        if (this.showTimeout) {\n            clearTimeout(this.showTimeout);\n            this.showTimeout = undefined;\n        }\n\n        if (!this.isOpen) return;\n\n        const hideDelay = Math.min(this.delay || 0, 150);\n        this.hideTimeout = setTimeout(async () => {\n            if (this.isOpen) {\n                await this.closeTooltip();\n            }\n            this.hideTimeout = undefined;\n        }, hideDelay);\n    }\n\n    private async setupFloatingUI(): Promise<void> {\n        if (this.cleanupAutoUpdate) {\n            this.cleanupAutoUpdate();\n        }\n\n        if (this.triggerEl && this.tooltipEl) {\n            const observer = new IntersectionObserver(\n                (entries) => {\n                    if (!entries[0].isIntersecting && this.isOpen) {\n                        this.closeTooltip();\n                    }\n                },\n                { threshold: 0 },\n            );\n            observer.observe(this.triggerEl);\n\n            this.cleanupAutoUpdate = autoUpdate(\n                this.triggerEl,\n                this.tooltipEl,\n\n                () => {\n                    if (this.isOpen) {\n                        const placement = this.getFloatingUIPlacement();\n                        const strategy = 'fixed';\n\n                        computePosition(this.triggerEl, this.tooltipEl, {\n                            placement,\n                            strategy,\n                            middleware: [\n                                offset(this.offset ?? 8),\n                                flip({\n                                    fallbackStrategy: 'bestFit',\n                                    padding: 8,\n                                }),\n                                shift({\n                                    padding: 8,\n                                    mainAxis: true,\n                                    crossAxis: true,\n                                }),\n                                size({\n                                    apply: ({\n                                        availableWidth,\n                                        availableHeight,\n                                        elements,\n                                    }) => {\n                                        const userMax =\n                                            parseInt(\n                                                (\n                                                    this.width || '200px'\n                                                ).toString(),\n                                                10,\n                                            ) || DEFAULT_TOOLTIP_MAX_WIDTH;\n                                        Object.assign(elements.floating.style, {\n                                            maxWidth: `${Math.min(availableWidth, userMax)}px`,\n                                            maxHeight: `${availableHeight}px`,\n                                        });\n                                    },\n                                }),\n                            ],\n                        }).then(({ x, y }) => {\n                            const styles: any = {\n                                position: strategy,\n                                left: `${x}px`,\n                                top: `${y}px`,\n                                margin: '0',\n                                transform: 'none',\n                                maxWidth: this.width || '200px',\n                            };\n\n                            Object.assign(this.tooltipEl.style, styles);\n                        });\n                    }\n                },\n                {\n                    ancestorScroll: true,\n                    ancestorResize: true,\n                    elementResize: true,\n                    layoutShift: true,\n                    animationFrame: true,\n                },\n            );\n\n            const originalCleanup = this.cleanupAutoUpdate;\n            this.cleanupAutoUpdate = () => {\n                originalCleanup();\n                observer.disconnect();\n            };\n        }\n    }\n\n    private cleanupFloatingUI() {\n        this.cleanupAutoUpdate?.();\n        this.cleanupAutoUpdate = undefined;\n    }\n\n    private async updateFloatingPosition(): Promise<void> {\n        if (!this.triggerEl || !this.tooltipEl) return;\n        this.setupFloatingUI();\n    }\n\n    private getFloatingUIPlacement(): Placement {\n        const positionMap: Record<TooltipPosition, string> = {\n            top: 'top',\n            bottom: 'bottom',\n            left: 'left',\n            right: 'right',\n        };\n\n        const alignMap: Record<TooltipAlign, string> = {\n            start: 'start',\n            end: 'end',\n            center: 'center',\n        };\n\n        const position = positionMap[this.position] || 'bottom';\n        const align = alignMap[this.align] || 'center';\n\n        return `${position}-${align}` as Placement;\n    }\n\n    render() {\n        return (\n            <Host class=\"relative\">\n                {!this.trigger_id && (\n                    <div\n                        aria-haspopup=\"true\"\n                        data-name=\"tooltip-trigger\"\n                        ref={(el) => (this.triggerEl = el)}\n                        aria-expanded={`${this.isOpen ? 'true' : 'false'}`}\n                        class={this.disabled ? 'contents' : ''}\n                        onMouseEnter={() =>\n                            !this.disabled ? this.mouseEnterHandler() : null\n                        }\n                        onMouseLeave={() =>\n                            !this.disabled ? this.mouseLeaveHandler() : null\n                        }\n                    >\n                        <slot name=\"tooltip-trigger\" />\n                    </div>\n                )}\n\n                <div\n                    ref={(el) => (this.tooltipEl = el)}\n                    data-position={this.position}\n                    data-align={this.align}\n                    popover=\"auto\"\n                    id={this.popoverId}\n                    class=\"pointer-events-none w-fit rounded-md bg-gray-950/80 px-[6px] py-2 text-sm text-white opacity-0 shadow-md transition-opacity duration-200 ease-out\"\n                    data-name=\"tooltip-content-wrapper\"\n                >\n                    <slot />\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}