{"version":3,"names":["atuiInputRangeCss","AtuiInputRangeComponent","constructor","hostRef","this","min","max","step","show_minmax","show_ticks","show_value","show_input","label_position","sliderId","Math","random","toString","substring","value","_value","val","onChange","inputVal","newValue","atuiChange","emit","render","h","Host","key","class","name","label","required","info_text","for","readonly","hint_text","error_text","invalid","warning_text","style","ref","el","sliderContainerRef","list","type","disabled","undefined","id","onInput","event","parseInt","target","setProperty","String","JSON","stringify","show_buttons","onAtuiChange","detail","suffix"],"sources":["src/components/atui-input-range/atui-input-range.scss?tag=atui-input-range","src/components/atui-input-range/atui-input-range.tsx"],"sourcesContent":["// Source: https://codepen.io/vsync/pen/mdEJMLv\n.range-slider {\n    --primary-color: var(--token-state-active-foreground);\n    --value-offset-y: var(--ticks-gap);\n    --value-active-color: var(--token-color-white);\n    --value-background: transparent;\n    --value-background-hover: var(--primary-color);\n    --value-font: 700 var(--token-font-size-xs) var(--token-font-family-base);\n    --fill-color: var(--primary-color);\n    --progress-background: #eee;\n    --progress-radius: 20px;\n    --progress-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1) inset;\n    --track-height: calc(var(--thumb-size) / 2);\n    --min-max-font: var(--token-font-size-xs) var(--token-font-family-base);\n    --min-max-opacity: 0.5;\n    --min-max-x-offset: 10%; // 50% to center\n    --thumb-size: 20px;\n    --thumb-color: white;\n    --thumb-shadow: 0 0 3px rgba(0, 0, 0, 0.4),\n        0 0 1px rgba(0, 0, 0, 0.5) inset, 0 0 0 99px var(--thumb-color) inset;\n    --thumb-shadow-active: 0 0 0 calc(var(--thumb-size) / 4) inset\n            var(--thumb-color),\n        0 0 0 99px var(--primary-color) inset, 0 0 3px rgba(0, 0, 0, 0.4);\n    --thumb-shadow-hover: var(--thumb-shadow);\n    --ticks-thickness: 1px;\n    --ticks-height: 4px;\n    --ticks-gap: 8px;\n    --ticks-color: var(--token-text-disabled);\n    // ⚠️ BELOW VARIABLES SHOULD NOT BE CHANGED\n    --step: 1;\n    --ticks-count: Calc(var(--max) - var(--min)) / var(--step);\n    --maxTicksAllowed: 30;\n    --too-many-ticks: Min(\n        1,\n        Max(var(--ticks-count) - var(--maxTicksAllowed), 0)\n    );\n    --x-step: Max(\n        var(--step),\n        var(--too-many-ticks) * (var(--max) - var(--min))\n    );\n    --tickInterval: 100/ ((var(--max) - var(--min)) / var(--step)) *\n        var(--tickEvery, 1);\n    --tickIntervalPerc: calc(\n        (100% - var(--thumb-size)) /\n            ((var(--max) - var(--min)) / var(--x-step)) * var(--tickEvery, 1)\n    );\n    --value-a: Clamp(var(--min), var(--value, 0), var(--max));\n    --value-b: var(--value, 0);\n    --text-value-a: var(--text-value, '');\n    --completed-a: calc(\n        (var(--value-a) - var(--min)) / (var(--max) - var(--min)) * 100\n    );\n    --completed-b: calc(\n        (var(--value-b) - var(--min)) / (var(--max) - var(--min)) * 100\n    );\n    --ca: Min(var(--completed-a), var(--completed-b));\n    --cb: Max(var(--completed-a), var(--completed-b));\n    @mixin thumb {\n        appearance: none;\n        height: var(--thumb-size);\n        width: var(--thumb-size);\n        transform: var(--thumb-transform);\n        border-radius: var(--thumb-radius, 50%);\n        background: var(--thumb-color);\n        box-shadow: var(--thumb-shadow);\n        border: 1px solid var(--token-border-med);\n        border: none;\n        pointer-events: auto;\n        transition: 0.2s;\n    }\n    width: 100%;\n    display: inline-block;\n    height: 22px;\n    background: linear-gradient(\n            to right,\n            var(--ticks-color) var(--ticks-thickness),\n            transparent 1px\n        )\n        repeat-x;\n    background-size: var(--tickIntervalPerc) var(--ticks-height);\n    background-position-x: calc(\n        var(--thumb-size) / 2 - var(--ticks-thickness) / 2\n    );\n    background-position-y: var(--flip-y, bottom);\n    padding-bottom: var(--flip-y, var(--ticks-gap));\n    padding-top: calc(var(--flip-y) * var(--ticks-gap));\n    position: relative;\n    z-index: 1;\n\n    //min max values\n    &::before,\n    &::after {\n        --offset: calc(var(--thumb-size) / 2);\n        content: counter(x);\n        display: var(--show-min-max, block);\n        font: var(--min-max-font);\n        position: absolute;\n        top: 25px;\n        transform: translateX(\n            calc(var(--min-max-x-offset) * var(--before, -1) * -1)\n        );\n        pointer-events: none;\n        color: var(--ticks-color);\n    }\n    &::before {\n        --before: 1;\n        --at-edge: var(--thumb-close-to-min);\n        counter-reset: x var(--min);\n        left: var(--offset);\n    }\n    &::after {\n        --at-edge: var(--thumb-close-to-max);\n        counter-reset: x var(--max);\n        right: var(--offset);\n    }\n\n    &__progress {\n        --start-end: calc(var(--thumb-size) / 2);\n        --clip-end: calc(100% - (var(--cb)) * 1%);\n        --clip-start: calc(var(--ca) * 1%);\n        --clip: inset(-20px var(--clip-end) -20px var(--clip-start));\n        position: absolute;\n        left: var(--start-end);\n        right: var(--start-end);\n        top: calc(\n            var(--ticks-gap) * var(--flip-y, 0) + var(--thumb-size) /\n                2 - var(--track-height) / 2\n        );\n        height: calc(var(--track-height));\n        background: var(--progress-background, #eee);\n        pointer-events: none;\n        z-index: -1;\n        border-radius: var(--progress-radius);\n        // fill area\n        &::before {\n            content: '';\n            position: absolute;\n            left: 0;\n            right: 0;\n            clip-path: var(--clip);\n            top: 0;\n            bottom: 0;\n            background: var(--fill-color, black);\n            box-shadow: var(--progress-flll-shadow);\n            z-index: 1;\n            border-radius: inherit;\n        }\n        // shadow-effect\n        &::after {\n            content: '';\n            position: absolute;\n            top: 0;\n            right: 0;\n            bottom: 0;\n            left: 0;\n            box-shadow: var(--progress-shadow);\n            pointer-events: none;\n            border-radius: inherit;\n        }\n    }\n    & > input {\n        -webkit-appearance: none;\n        width: 100%;\n        height: var(--track-height);\n        margin: 0;\n        position: absolute;\n        left: 0;\n        top: 5px;\n        cursor: -webkit-grab;\n        cursor: grab;\n        outline: none;\n        background: none;\n\n        &:not(:only-of-type) {\n            pointer-events: none;\n        }\n        &::-webkit-slider-thumb {\n            @include thumb;\n        }\n        &::-moz-range-thumb {\n            @include thumb;\n        }\n        &::-ms-thumb {\n            @include thumb;\n        }\n        &:focus {\n            // --thumb-shadow: var(--thumb-shadow-hover);\n\n            &::-webkit-slider-thumb {\n                outline: 2px solid var(--primary-color);\n                -webkit-box-shadow: 0px 0px 0px 5px\n                    rgba(var(--primary-color), 0.3);\n                -moz-box-shadow: 0px 0px 0px 5px rgba(var(--primary-color), 0.3);\n                box-shadow: 0px 0px 0px 5px rgba(var(--primary-color), 0.3);\n            }\n            &::-moz-range-thumb {\n                outline: 2px solid var(--primary-color);\n            }\n            &::-ms-thumb {\n                outline: 2px solid var(--primary-color);\n            }\n        }\n        &:hover {\n            // --thumb-shadow: var(--thumb-shadow-hover);\n            & + output {\n                --value-background: var(--value-background-hover);\n                --y-offset: -5px;\n                opacity: 1;\n                color: var(--value-active-color);\n                box-shadow: 0 0 0 3px var(--value-background);\n            }\n        }\n        &:active {\n            // --thumb-shadow: var(--thumb-shadow-active);\n            cursor: grabbing;\n            z-index: 2;\n            + output {\n                opacity: 1;\n                transition: 0s;\n            }\n\n            ::-webkit-slider-thumb {\n                border: 1px solid var(--primay-color);\n                box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);\n                -webkit-box-shadow: 0px 0px 0px 4px\n                    rgba(var(--primay-color), 0.3);\n                -moz-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);\n            }\n            ::-moz-range-thumb {\n                border: 1px solid var(--primay-color);\n                box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);\n                -webkit-box-shadow: 0px 0px 0px 4px\n                    rgba(var(--primay-color), 0.3);\n                -moz-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);\n            }\n            ::-ms-thumb {\n                border: 1px solid var(--primay-color);\n                box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);\n                -webkit-box-shadow: 0px 0px 0px 4px\n                    rgba(var(--primay-color), 0.3);\n                -moz-box-shadow: 0px 0px 0px 4px rgba(var(--primay-color), 0.3);\n            }\n        }\n        &:nth-of-type(1) {\n            --is-left-most: Clamp(\n                0,\n                (var(--value-a) - var(--value-b)) * 99999,\n                1\n            );\n            & + output {\n                &:not(:only-of-type) {\n                    --flip: calc(var(--thumbs-too-close) * -1);\n                }\n                --value: var(--value-a);\n                --x-offset: calc(var(--completed-a) * -1%);\n                &::after {\n                    content: var(--prefix, '') var(--text-value-a)\n                        var(--suffix, '');\n                }\n            }\n        }\n        &:nth-of-type(2) {\n            --is-left-most: Clamp(\n                0,\n                (var(--value-b) - var(--value-a)) * 99999,\n                1\n            );\n            & + output {\n                --value: var(--value-b);\n            }\n        }\n        // non-multiple range should not clip start of progress bar\n        &:only-of-type {\n            ~ .range-slider__progress {\n                --clip-start: 0;\n            }\n        }\n        & + output {\n            --flip: -1;\n            --x-offset: calc(var(--completed-b) * -1%);\n            --pos: calc(\n                ((var(--value) - var(--min)) / (var(--max) - var(--min))) * 100%\n            );\n            opacity: 0;\n            pointer-events: none;\n            position: absolute;\n            z-index: 5;\n            background: var(--value-background);\n            border-radius: 10px;\n            padding: 2px 4px;\n            left: var(--pos);\n            transform: translate(\n                var(--x-offset),\n                calc(\n                    150% * var(--flip) -\n                        (var(--y-offset, 0px) + var(--value-offset-y)) *\n                        var(--flip)\n                )\n            );\n            transition:\n                all 0.12s ease-out,\n                left 0s;\n            &::after {\n                content: var(--prefix, '') var(--text-value-b) var(--suffix, '');\n                font: var(--value-font);\n            }\n        }\n    }\n}\n","import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Event,\n    EventEmitter,\n    Element,\n} from '@stencil/core';\n\nexport type InputPosition = 'before' | 'after';\n\n/**\n * @category Form Controls\n * @description A range input component for selecting a value within a specified range.\n */\n\n@Component({\n    tag: 'atui-input-range',\n    styleUrl: 'atui-input-range.scss',\n    shadow: false,\n})\nexport class AtuiInputRangeComponent {\n    /**\n     * Label of the input.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Info icon with detailed tooltip description if required. Content is available via info icon tooltip.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * suffix message for the input.\n     */\n    @Prop()\n    suffix?: string;\n\n    /**\n     * Warning message for the input.\n     */\n    @Prop()\n    warning_text?: string;\n\n    /**\n     *\n     * Error message visible when input is invalid.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Set the input to an invalid state.\n     */\n    @Prop()\n    invalid?: boolean;\n\n    /**\n     * Set the input to a readonly state.\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Disable user interaction. Disabled state should be applied via form control.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Indicated form field is required.\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Numeric value of the slider component.\n     */\n    @Prop({ mutable: true })\n    get value(): number {\n        return this._value;\n    }\n    set value(val: number) {\n        this._value = Math.max(this.min, Math.min(this.max, val));\n    }\n    private _value: number;\n    /**\n     * Min selectable value of the slider.\n     */\n    @Prop()\n    min = 0;\n\n    /**\n     * Max selectable value of the slider.\n     */\n    @Prop()\n    max = 100;\n\n    /**\n     * Interval between selections.\n     */\n    @Prop()\n    step?: number = 1;\n\n    /**\n     * Display min and max text values.\n     */\n    @Prop()\n    show_minmax?: boolean = true;\n\n    /**\n     * Display step indicators.\n     */\n    @Prop()\n    show_ticks?: boolean = true;\n\n    /**\n     * Display order of input and slider.\n     */\n    @Prop()\n    show_value?: boolean = true;\n\n    /**\n     * Display numeric input with slider.\n     */\n    @Prop()\n    show_input?: boolean = true;\n\n    /**\n     * Position of the numeric input, left or right of the slider.\n     */\n    @Prop()\n    label_position: InputPosition = 'after';\n\n    /**\n     * Emits an event containing the current value when the text input or slider input's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<number>;\n\n    @Element() el: HTMLElement;\n    private sliderContainerRef: HTMLDivElement;\n    private sliderId = `slider-${Math.random().toString(36).substring(2, 11)}`;\n\n    onChange(inputVal: number): void {\n        const newValue = Math.max(this.min, Math.min(this.max, inputVal)); // Clamp value\n        this.value = newValue;\n        this.atuiChange.emit(this.value);\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.sliderId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n                    {this.hint_text && (\n                        <span\n                            class=\"text-light inline-block text-xs leading-tight\"\n                            data-name=\"slider-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                    {this.error_text && this.invalid && (\n                        <span\n                            class=\"text-error text-xs font-normal\"\n                            data-name=\"slider-error\"\n                        >\n                            {this.error_text}\n                        </span>\n                    )}\n                    {this.warning_text && !this.invalid && (\n                        <span\n                            class=\"text-warning-foreground text-xs font-normal\"\n                            data-name=\"slider-warning\"\n                        >\n                            {this.warning_text}\n                        </span>\n                    )}\n                </div>\n\n                <div\n                    class={`mt-4 flex items-start gap-8 ${this.label_position == 'before' ? 'flex-row-reverse' : 'flex-row'}`}\n                >\n                    <div class=\"flex flex-grow flex-col\">\n                        <div class=\"flex flex-grow\">\n                            <div\n                                class=\"range-slider\"\n                                style={{\n                                    '--min': `${this.min}`,\n                                    '--max': `${this.max}`,\n                                    '--step': `${this.step}`,\n                                    '--value': `${this.value}`,\n                                    '--text-value': `${this.value}`,\n                                    '--show-min-max': `${this.show_minmax ? 'block' : 'none'}`,\n                                }}\n                                ref={(el) => (this.sliderContainerRef = el)}\n                            >\n                                <input\n                                    list=\"markers\"\n                                    type=\"range\"\n                                    min={this.min}\n                                    max={this.max}\n                                    step={this.step}\n                                    aria-controls={this.sliderId}\n                                    disabled={\n                                        this.disabled || this.readonly\n                                            ? true\n                                            : undefined\n                                    }\n                                    id={this.sliderId}\n                                    value={this.value}\n                                    class=\"custom-slider\"\n                                    data-name=\"slider-range-input\"\n                                    onInput={(event) => {\n                                        const newValue = parseInt(\n                                            (event.target as HTMLInputElement)\n                                                .value,\n                                        );\n                                        this.value = newValue;\n                                        this.onChange(newValue);\n                                        this.sliderContainerRef.style.setProperty(\n                                            '--value',\n                                            String(this.value),\n                                        );\n                                        this.sliderContainerRef.style.setProperty(\n                                            '--text-value',\n                                            JSON.stringify(this.value),\n                                        );\n                                    }}\n                                />\n                                {this.show_value && (\n                                    <output class=\"text-sm\">\n                                        {this.value}\n                                    </output>\n                                )}\n                                <div class=\"range-slider__progress\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    {this.show_input && (\n                        <div class=\"relative flex w-80 flex-row items-center gap-8\">\n                            <atui-input-numeric\n                                readonly={this.readonly}\n                                disabled={this.disabled}\n                                min={this.min}\n                                max={this.max}\n                                step={this.step}\n                                value={this.value}\n                                show_buttons={false}\n                                data-name=\"slider-text-input\"\n                                onAtuiChange={(event) =>\n                                    this.onChange(event.detail as number)\n                                }\n                            />\n                            {this.suffix && (\n                                <span\n                                    data-name=\"slider-suffix\"\n                                    class=\"text-light absolute top-1/2 right-[36px] -translate-y-1/2\"\n                                >\n                                    {this.suffix}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}