{"version":3,"names":["atSidebarMenuitemCss","variantsConfig","variants","active","true","false","focusIndicatorVariantsConfig","AtSidebarMenuitemComponent","constructor","hostRef","this","handleKeyDown","event","key","preventDefault","el","click","render","getClassname","classlist","classname","is_active","getFocusIndicatorClassname","focusIndicatorClassname","h","Host","role","class","tabIndex","onKeyDown","name","badge","type","impact","rounded","label","icon"],"sources":["src/components/at-sidebar/at-sidebar-menuitem/at-sidebar-menuitem.scss?tag=at-sidebar-menuitem","src/components/at-sidebar/at-sidebar-menuitem/at-sidebar-menuitem.tsx"],"sourcesContent":["[data-name='accordion-item-content']\n    at-sidebar-menuitem\n    span[data-name='sidebar-menu-item-label'],\nat-menu at-sidebar-menuitem span[data-name='sidebar-menu-item-label'] {\n    font-weight: 400;\n}\n","import { Component, Prop, h, Host, Element } from '@stencil/core';\nimport { classlist } from '../../../utils/classlist';\n\nconst variantsConfig = {\n    variants: {\n        active: {\n            true: 'bg-sidebar-primary text-sidebar-primary-foreground',\n            false: 'text-sidebar-foreground',\n        },\n    },\n};\n\nconst focusIndicatorVariantsConfig = {\n    variants: {\n        active: {\n            true: 'group-hover:bg-blue-900/30 ',\n            false: 'group-hover:bg-slate-400/10',\n        },\n    },\n};\n\n/**\n * @category Navigation\n * @description A sidebar menu item component for the sidebar.\n */\n\n@Component({\n    tag: 'at-sidebar-menuitem',\n    shadow: false,\n    styleUrl: 'at-sidebar-menuitem.scss',\n})\nexport class AtSidebarMenuitemComponent {\n    /**\n     * Label to be displayed for the menu item\n     */\n    @Prop() label?: string;\n\n    /**\n     * Icon to be displayed with the label\n     */\n    @Prop() icon?: string;\n\n    /**\n     * Alert badge for the menu item\n     */\n    @Prop() badge?: string;\n\n    /**\n     * Will change style to indicate menuitem is active when set\n     */\n    @Prop({ mutable: true }) is_active?: boolean;\n\n    @Element() el: HTMLAtSidebarMenuitemElement;\n\n    private handleKeyDown = (event: KeyboardEvent): void => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            this.el.click();\n        }\n    };\n\n    render() {\n        const getClassname = classlist(\n            'group text-button focus-visible:ring-active-foreground/30 font-medium relative flex w-full cursor-pointer items-center justify-between gap-8 overflow-visible rounded-md p-8 text-left transition-[background-color,color,box-shadow] duration-150 ease-in-out focus-visible:ring-2 focus-visible:outline-none',\n            variantsConfig,\n        );\n\n        const classname = getClassname({\n            active: this.is_active,\n        });\n\n        const getFocusIndicatorClassname = classlist(\n            'pointer-events-none absolute top-0 left-0 z-0 h-full w-full rounded-md transition-colors duration-300 ease-in-out',\n            focusIndicatorVariantsConfig,\n        );\n\n        const focusIndicatorClassname = getFocusIndicatorClassname({\n            active: this.is_active,\n        });\n\n        return (\n            <Host\n                role=\"menuitem\"\n                data-state={this.is_active ? 'active' : 'inactive'}\n                class={classname}\n                tabIndex={0}\n                onKeyDown={this.handleKeyDown}\n            >\n                <div class=\"flex items-center gap-8 truncate\">\n                    <slot name=\"menu-item-label\" />\n                    {this.badge && (\n                        <at-badge\n                            data-name=\"menu-badge\"\n                            role=\"presentation\"\n                            class=\"pointer-events-none absolute top-[-8px] left-[22px] z-20 !rounded-[4px] !px-[3px] !py-4 !text-[11px] !leading-[10px] !font-medium\"\n                            type=\"error\"\n                            impact=\"high\"\n                            rounded={false}\n                            label={this.badge}\n                        ></at-badge>\n                    )}\n                    {this.icon && (\n                        <span class=\"material-icons text-icon-xl z-10 flex items-center justify-center p-2\">\n                            {this.icon}\n                        </span>\n                    )}\n                    {this.label && (\n                        <span\n                            data-name=\"sidebar-menu-item-label\"\n                            class=\"label z-10 truncate whitespace-nowrap\"\n                        >\n                            {this.label}\n                        </span>\n                    )}\n                </div>\n                <slot name=\"menu-item-actions\" />\n                <div\n                    data-name=\"focus-indicator\"\n                    role=\"presentation\"\n                    class={focusIndicatorClassname}\n                ></div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"6FAAA,MAAMA,EAAuB,sLCG7B,MAAMC,EAAiB,CACnBC,SAAU,CACNC,OAAQ,CACJC,KAAM,qDACNC,MAAO,6BAKnB,MAAMC,EAA+B,CACjCJ,SAAU,CACNC,OAAQ,CACJC,KAAM,8BACNC,MAAO,iC,MAeNE,EAA0B,MALvC,WAAAC,CAAAC,G,UA4BYC,KAAAC,cAAiBC,IACrB,GAAIA,EAAMC,MAAQ,SAAWD,EAAMC,MAAQ,IAAK,CAC5CD,EAAME,iBACNJ,KAAKK,GAAGC,O,EAmEnB,CA/DG,MAAAC,GACI,MAAMC,EAAeC,EACjB,iTACAlB,GAGJ,MAAMmB,EAAYF,EAAa,CAC3Bf,OAAQO,KAAKW,YAGjB,MAAMC,EAA6BH,EAC/B,oHACAb,GAGJ,MAAMiB,EAA0BD,EAA2B,CACvDnB,OAAQO,KAAKW,YAGjB,OACIG,EAACC,EAAI,CAAAZ,IAAA,2CACDa,KAAK,WACO,aAAAhB,KAAKW,UAAY,SAAW,WACxCM,MAAOP,EACPQ,SAAU,EACVC,UAAWnB,KAAKC,eAEhBa,EAAK,OAAAX,IAAA,2CAAAc,MAAM,oCACPH,EAAM,QAAAX,IAAA,2CAAAiB,KAAK,oBACVpB,KAAKqB,OACFP,EAAA,YAAAX,IAAA,uDACc,aACVa,KAAK,eACLC,MAAM,oIACNK,KAAK,QACLC,OAAO,OACPC,QAAS,MACTC,MAAOzB,KAAKqB,QAGnBrB,KAAK0B,MACFZ,EAAM,QAAAX,IAAA,2CAAAc,MAAM,yEACPjB,KAAK0B,MAGb1B,KAAKyB,OACFX,EAAA,QAAAX,IAAA,uDACc,0BACVc,MAAM,yCAELjB,KAAKyB,QAIlBX,EAAM,QAAAX,IAAA,2CAAAiB,KAAK,sBACXN,EAAA,OAAAX,IAAA,uDACc,kBACVa,KAAK,eACLC,MAAOJ,I","ignoreList":[]}