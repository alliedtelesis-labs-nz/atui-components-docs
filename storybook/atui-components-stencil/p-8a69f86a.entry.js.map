{"version":3,"names":["layoutVariantsConfig","variants","layout","column","row","grid","getLayoutClass","classlist","AtuiRadioGroup","constructor","hostRef","this","radioEls","radioGroupId","Math","random","toString","substring","handleChange","optionId","value","atuiChange","emit","focusAndClickRelativeRadio","relativePosition","indexOfActiveRadio","indexOf","el","ownerDocument","activeElement","nextRadioEl","length","click","focus","handleKeyDown","event","key","preventDefault","getRadios","options","map","option","h","label","hint_text","option_id","readonly","disabled","onAtuiChange","stopPropagation","group","ref","push","render","classname","Host","role","onKeyDown","class","name","required","info_text","radio","error_text","invalid"],"sources":["src/components/atui-radio-group/atui-radio-group.tsx"],"sourcesContent":["import {\n    Host,\n    Event,\n    Component,\n    h,\n    Prop,\n    EventEmitter,\n    Element,\n} from '@stencil/core';\nimport { classlist } from '../../utils/classlist';\n\nconst layoutVariantsConfig = {\n    variants: {\n        layout: {\n            column: 'flex flex-col',\n            row: 'flex',\n            grid: 'grid grid-cols-3',\n        },\n    },\n};\n\nconst getLayoutClass = classlist('gap-4', layoutVariantsConfig);\n\nexport interface RadioOption {\n    option_id: string;\n    label?: string;\n    hint_text?: string;\n    disabled?: boolean;\n    readonly?: boolean;\n    group?: string;\n}\n\nexport type RadioLayout = 'column' | 'row' | 'grid';\n\n/**\n * @category Form Controls\n * @description A radio button group component for selecting a single option from a predefined list. Provides grouped validation, labeling, and accessibility features for radio button collections.\n *\n * @slot - Used to place atui-radio elements when 'options' is not set\n */\n@Component({\n    tag: 'atui-radio-group',\n    shadow: false,\n})\nexport class AtuiRadioGroup {\n    /**\n     * Label of the radio group.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Optional info icon with detailed tooltip description.\n     * Displayed at right of label.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Direction that the radio elements are placed\n     */\n    @Prop()\n    layout?: RadioLayout = 'column';\n\n    /**\n     * Disables the radio options but keeps the text readable. Use for global readonly form state.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Disables interaction with atui-radio elements when set\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Adds a required * to the label\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Shown when 'invalid' prop is set\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Options displayed in the radio group.\n     */\n    @Prop()\n    options: RadioOption[];\n\n    /**\n     * A string containing the Id of the currently selected radio\n     */\n    @Prop() value: string;\n\n    @Element() el: HTMLAtuiRadioGroupElement;\n\n    private radioEls: HTMLAtuiRadioElement[] = [];\n\n    private radioGroupId = `radiogroup-${Math.random().toString(36).substring(2, 11)}`;\n\n    /**\n     * Emits an event when active radio element changes. `event.detail` is the ID of the active radio\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    handleChange(optionId: string): void {\n        if (this.value !== optionId) {\n            this.value = optionId;\n            this.atuiChange.emit(optionId);\n        }\n    }\n\n    focusAndClickRelativeRadio(relativePosition: number) {\n        const indexOfActiveRadio = this.radioEls.indexOf(\n            this.el.ownerDocument.activeElement as HTMLAtuiRadioElement,\n        );\n        const nextRadioEl =\n            this.radioEls[\n                (indexOfActiveRadio + relativePosition + this.radioEls.length) %\n                    this.radioEls.length\n            ];\n        nextRadioEl.click();\n        nextRadioEl.focus();\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        switch (event.key) {\n            case 'ArrowRight':\n            case 'ArrowDown':\n                event.preventDefault();\n                this.focusAndClickRelativeRadio(1);\n                break;\n            case 'ArrowUp':\n            case 'ArrowLeft':\n                event.preventDefault();\n                this.focusAndClickRelativeRadio(-1);\n                break;\n        }\n    }\n\n    get getRadios(): any {\n        if (this.options && this.options.length > 0) {\n            return this.options.map((option) => (\n                <atui-radio\n                    label={option.label}\n                    hint_text={option.hint_text}\n                    option_id={option.option_id}\n                    readonly={this.readonly || option.readonly}\n                    disabled={this.disabled || option.disabled}\n                    value={this.value === option.option_id}\n                    onAtuiChange={(event) => {\n                        event.stopPropagation();\n                        if (!this.disabled && !this.readonly) {\n                            this.handleChange(option.option_id);\n                        }\n                    }}\n                    group={this.label || this.radioGroupId}\n                    ref={(el) => this.radioEls.push(el)}\n                />\n            ));\n        }\n    }\n\n    render() {\n        const classname = getLayoutClass({\n            layout: this.layout,\n        });\n        return (\n            <Host\n                role=\"radiogroup\"\n                onKeyDown={(event) => this.handleKeyDown(event)}\n                class=\"block w-full\"\n            >\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            required={this.required}\n                            info_text={this.info_text}\n                        />\n                    )}\n                    {this.hint_text && (\n                        <span\n                            class=\"text-light mb-8 inline-block text-xs leading-tight\"\n                            data-name=\"radio-group-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <ul\n                    class={classname}\n                    data-name=\"radio-group-options\"\n                >\n                    <slot />\n                    {this.getRadios &&\n                        this.getRadios.map((radio) => (\n                            <li class=\"flex\">{radio}</li>\n                        ))}\n                </ul>\n\n                {this.error_text && this.invalid && (\n                    <span\n                        class=\"text-error text-sm\"\n                        data-name=\"radio-group-error-text\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"],"mappings":"oGAWA,MAAMA,EAAuB,CACzBC,SAAU,CACNC,OAAQ,CACJC,OAAQ,gBACRC,IAAK,OACLC,KAAM,sBAKlB,MAAMC,EAAiBC,EAAU,QAASP,G,MAuB7BQ,EAAc,MAJ3B,WAAAC,CAAAC,G,iDAsBIC,KAAMT,OAAiB,SAmDfS,KAAQC,SAA2B,GAEnCD,KAAAE,aAAe,cAAcC,KAAKC,SAASC,SAAS,IAAIC,UAAU,EAAG,KAqHhF,CA7GG,YAAAC,CAAaC,GACT,GAAIR,KAAKS,QAAUD,EAAU,CACzBR,KAAKS,MAAQD,EACbR,KAAKU,WAAWC,KAAKH,E,EAI7B,0BAAAI,CAA2BC,GACvB,MAAMC,EAAqBd,KAAKC,SAASc,QACrCf,KAAKgB,GAAGC,cAAcC,eAE1B,MAAMC,EACFnB,KAAKC,UACAa,EAAqBD,EAAmBb,KAAKC,SAASmB,QACnDpB,KAAKC,SAASmB,QAE1BD,EAAYE,QACZF,EAAYG,O,CAGhB,aAAAC,CAAcC,GACV,OAAQA,EAAMC,KACV,IAAK,aACL,IAAK,YACDD,EAAME,iBACN1B,KAAKY,2BAA2B,GAChC,MACJ,IAAK,UACL,IAAK,YACDY,EAAME,iBACN1B,KAAKY,4BAA2B,GAChC,M,CAIZ,aAAIe,GACA,GAAI3B,KAAK4B,SAAW5B,KAAK4B,QAAQR,OAAS,EAAG,CACzC,OAAOpB,KAAK4B,QAAQC,KAAKC,GACrBC,EAAA,cACIC,MAAOF,EAAOE,MACdC,UAAWH,EAAOG,UAClBC,UAAWJ,EAAOI,UAClBC,SAAUnC,KAAKmC,UAAYL,EAAOK,SAClCC,SAAUpC,KAAKoC,UAAYN,EAAOM,SAClC3B,MAAOT,KAAKS,QAAUqB,EAAOI,UAC7BG,aAAeb,IACXA,EAAMc,kBACN,IAAKtC,KAAKoC,WAAapC,KAAKmC,SAAU,CAClCnC,KAAKO,aAAauB,EAAOI,U,GAGjCK,MAAOvC,KAAKgC,OAAShC,KAAKE,aAC1BsC,IAAMxB,GAAOhB,KAAKC,SAASwC,KAAKzB,M,EAMhD,MAAA0B,GACI,MAAMC,EAAYhD,EAAe,CAC7BJ,OAAQS,KAAKT,SAEjB,OACIwC,EAACa,EACG,CAAAnB,IAAA,2CAAAoB,KAAK,aACLC,UAAYtB,GAAUxB,KAAKuB,cAAcC,GACzCuB,MAAM,gBAENhB,EAAK,OAAAN,IAAA,2CAAAsB,MAAM,iBACPhB,EAAM,QAAAN,IAAA,2CAAAuB,KAAK,WACThD,KAAKgC,OAAShC,KAAKiD,UAAYjD,KAAKkD,YAClCnB,EACI,mBAAAN,IAAA,2CAAAO,MAAOhC,KAAKgC,MACZiB,SAAUjD,KAAKiD,SACfC,UAAWlD,KAAKkD,YAGvBlD,KAAKiC,WACFF,EAAA,QAAAN,IAAA,2CACIsB,MAAM,qDACI,gCAET/C,KAAKiC,YAKlBF,EAAA,MAAAN,IAAA,2CACIsB,MAAOJ,EAAS,YACN,uBAEVZ,EAAQ,QAAAN,IAAA,6CACPzB,KAAK2B,WACF3B,KAAK2B,UAAUE,KAAKsB,GAChBpB,EAAI,MAAAgB,MAAM,QAAQI,MAI7BnD,KAAKoD,YAAcpD,KAAKqD,SACrBtB,EAAA,QAAAN,IAAA,2CACIsB,MAAM,qBACI,sCAET/C,KAAKoD,Y","ignoreList":[]}