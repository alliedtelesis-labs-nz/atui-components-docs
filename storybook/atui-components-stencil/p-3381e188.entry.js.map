{"version":3,"names":["AtuiTextIconCell","constructor","hostRef","this","text","update","params","data","_a","value","toString","init","getGui","el","refresh","renderIcons","h","Fragment","icons","map","icon","position","disabled","tooltip","slot","class","iconClass","iconName","render","iconPosition","Host","key"],"sources":["src/components/table-components/cell-components/atui-text-icon-cell/atui-text-icon-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host, Fragment } from '@stencil/core';\nimport { ICellRendererComp } from 'ag-grid-community';\nimport { IconTextCellParams, ITooltipCell } from '../../../../types';\n\nexport interface IconConfig {\n    iconName: string;\n    iconClass?: string;\n    tooltip?: string;\n}\n\nexport interface TextIconCellData {\n    text?: string;\n    icons: IconConfig[];\n}\n\nexport interface ITextIconCellParams extends IconTextCellParams, ITooltipCell {\n    text?: (data: any) => string;\n    iconPosition?: 'before' | 'after';\n    icons: () => IconConfig[];\n}\n\ntype InitParams = ITextIconCellParams;\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a text with icons, Text is optional and multiple icons are supported.\n */\n\n@Component({\n    tag: 'atui-text-icon-cell',\n    shadow: false,\n})\nexport class AtuiTextIconCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() text: string = '';\n\n    private params: InitParams;\n\n    private update(params: InitParams) {\n        this.params = params;\n        if (params.text) {\n            this.text = params.text(params.data);\n        } else {\n            this.text = params.value?.toString() || '';\n        }\n    }\n\n    init(params: InitParams): void {\n        this.update(params);\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: InitParams): boolean {\n        this.update(params);\n        return true;\n    }\n\n    private renderIcons() {\n        return (\n            <Fragment>\n                {this.params.icons().map((icon) => (\n                    <atui-tooltip\n                        position=\"right\"\n                        disabled={!icon.tooltip}\n                    >\n                        <div slot=\"tooltip-trigger\">\n                            <i\n                                class={`material-icons text-icon-md mt-4 cursor-pointer ${icon.iconClass || ''}`}\n                            >\n                                {icon.iconName}\n                            </i>\n                        </div>\n                        {icon.tooltip && (\n                            <span class=\"leading-normal\">{icon.tooltip}</span>\n                        )}\n                    </atui-tooltip>\n                ))}\n            </Fragment>\n        );\n    }\n\n    render() {\n        const iconPosition = this.params?.iconPosition || 'before';\n\n        return (\n            <Host class=\"flex h-full items-center gap-4 overflow-hidden leading-normal\">\n                {iconPosition === 'before' && this.renderIcons()}\n                <span class=\"truncate\">{this.text}</span>\n                {iconPosition === 'after' && this.renderIcons()}\n            </Host>\n        );\n    }\n}\n"],"mappings":"sEAgCaA,EAAgB,MAJ7B,WAAAC,CAAAC,G,UAMaC,KAAIC,KAAW,EA6D3B,CAzDW,MAAAC,CAAOC,G,MACXH,KAAKG,OAASA,EACd,GAAIA,EAAOF,KAAM,CACbD,KAAKC,KAAOE,EAAOF,KAAKE,EAAOC,K,KAC5B,CACHJ,KAAKC,OAAOI,EAAAF,EAAOG,SAAO,MAAAD,SAAA,SAAAA,EAAAE,aAAc,E,EAIhD,IAAAC,CAAKL,GACDH,KAAKE,OAAOC,E,CAGhB,MAAAM,GACI,OAAOT,KAAKU,E,CAGhB,OAAAC,CAAQR,GACJH,KAAKE,OAAOC,GACZ,OAAO,I,CAGH,WAAAS,GACJ,OACIC,EAACC,EAAQ,KACJd,KAAKG,OAAOY,QAAQC,KAAKC,GACtBJ,EAAA,gBACIK,SAAS,QACTC,UAAWF,EAAKG,SAEhBP,EAAK,OAAAQ,KAAK,mBACNR,EAAA,KACIS,MAAO,mDAAmDL,EAAKM,WAAa,MAE3EN,EAAKO,WAGbP,EAAKG,SACFP,EAAM,QAAAS,MAAM,kBAAkBL,EAAKG,Y,CAQ3D,MAAAK,G,MACI,MAAMC,IAAerB,EAAAL,KAAKG,UAAQ,MAAAE,SAAA,SAAAA,EAAAqB,eAAgB,SAElD,OACIb,EAACc,EAAK,CAAAC,IAAA,2CAAAN,MAAM,iEACPI,IAAiB,UAAY1B,KAAKY,cACnCC,EAAA,QAAAe,IAAA,2CAAMN,MAAM,YAAYtB,KAAKC,MAC5ByB,IAAiB,SAAW1B,KAAKY,c","ignoreList":[]}