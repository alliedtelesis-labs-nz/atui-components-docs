{"version":3,"file":"p-3wjBk_6c.js","sources":["src/types/table-cells/index.ts","src/types/table-styles.ts"],"sourcesContent":["import { ICellRendererParams } from 'ag-grid-community';\nimport { TableColor } from '../table-styles';\nimport { CSSProperties } from '../styles';\n\n/**\n * NEW AvailableCells also need to be added to getFrameworkComponents()\n * so that ag-grid can import and render the cell components\n */\nexport enum AvailableCells {\n    CHECKBOX_CELL = 'AtuiCheckboxCell',\n    TEXT_CELL = 'AtuiTextCell',\n    TEXT_STATUS_CELL = 'AtuiTextStatusCell',\n    TEXT_WITH_BADGE_CELL = 'AtuiTextBadgeCell',\n    TEXT_WITH_ICON_CELL = 'AtuiTextIconCell',\n    TITLE_SUBTITLE_CELL = 'AtuiTitleSubtitleCell',\n    TITLE_SUBTITLE_DATE_CELL = 'AtuiTitleSubtitleDateCell',\n    EDIT_TEXT_CELL = 'AtuiEditTextCell',\n    CHIP_LIST_CELL = 'AtuiChipListCell',\n    TOGGLE_CELL = 'AtuiToggleCell',\n    MULTI_BTN_CELL = 'AtuiMultiBtnCell',\n    COLOR_STATUS_CELL = 'AtuiColorStatusCell',\n    TEXT_WITH_IMAGE_CELL = 'AtuiTextImageCell',\n    MENU_CELL = 'AtuiMenuCell',\n}\n\nexport enum AvailableHeaders {\n    CHECKBOX_HEADER = 'checkboxHeader',\n    ICON_HEADER = 'iconHeader',\n}\n\nexport interface DefaultInitCellParams extends ICellRendererParams {\n    writePermission?: boolean;\n}\n\n/** Icon cell parameters */\nexport interface IIconCellParams extends DefaultInitCellParams {\n    value: IIconCell[];\n}\n\nexport interface IIconCell extends ITooltipCell, IClickCell {\n    // Can pass the icon name and styles in directly or use a function to retrieve these\n    iconName: string;\n    iconStyles?: CSSProperties;\n    iconClass?: string;\n    disabled?: boolean;\n    tooltipText?: string;\n}\n\n/** Icon cell with text parameters */\nexport interface IconTextCellParams extends DefaultInitCellParams {\n    value: ITextWithIconCell;\n    containerStyles?: CSSProperties;\n}\n\nexport interface ITextWithIconCell extends IClickCell {\n    icons: IIconCell[];\n    text: ITextCell;\n    reverseLayout?: boolean;\n}\n\nexport interface ITextCell {\n    textValue: string;\n    textStyles?: CSSProperties;\n    shouldNotTranslate?: boolean;\n}\n\n/**\n * Cells that provide extra abilities.\n * Useful to extend to provide standard cells with extra functionality,\n * e.g. the ability to be clicked or show a tooltip\n */\nexport interface ITooltipCell {\n    tooltipClass?: string;\n    generateTooltip?: (params: ICellRendererParams) => HTMLElement | string;\n}\n\nexport interface IClickCell {\n    click?: (params: ICellRendererParams) => any;\n    iconClick?: (params: ICellRendererParams) => any;\n}\n\nexport interface ColorCell {\n    mapValueToColor: (value: any) => {\n        backgroundColor: TableColor;\n        fontColor: TableColor;\n    };\n}\n\nexport interface ITitleSubtitle {\n    title: string;\n    subtitle: string;\n}\n\nexport interface ITextCellParams extends IClickCell {\n    size?: string;\n    color?: string;\n    textStyles?:\n        | CSSProperties\n        | ((params: ICellRendererParams) => CSSProperties);\n    containerStyles?: CSSProperties;\n    click?: (params: ICellRendererParams) => void;\n    textClass?: string;\n    rowIndex: any;\n\n    // Transform value into something\n    // e.g. value: 50, my value is a number and i need\n    // this value to match something to do something\n    // but i want it to display as \"50ms\", so use this function\n    textTransform?: (data: any, value: any) => string;\n\n    useIconHeaderTooltip?: boolean;\n    shouldNotTranslate?: boolean;\n}\n\nexport interface StateInfo {\n    text: string;\n    status: string;\n}\n\nexport interface UIStates {\n    uiState: StateInfo;\n    engineUiState: StateInfo;\n    role: string;\n}\nexport interface AppFullWidthCellData {\n    type: string;\n    counters: number;\n    fullWidth: boolean;\n    description: string;\n    provider?: string;\n    warning?: string;\n    uiStates?: UIStates;\n}\n\nexport interface InitTextCellParams\n    extends ITooltipCell,\n        ITextCellParams,\n        ICellRendererParams {}\n\nexport type GetImageSourceFunction = (data: any) => string;\nexport type PopoverClickedFunction = (allData: any, itemClicked: any) => any;\n","// TODO: VCOMPLIB-1153 Support dark theme table colors.\n\nexport type GetTableColor = (value: any) => TableColor;\n\n// Type for colours that map to TableColorTokens (tokens have hex colour value)\nexport enum TableColor {\n    GREEN = 'GREEN',\n    ORANGE = 'ORANGE',\n    RED = 'RED',\n    BLUE = 'BLUE',\n    BASE_BLUE_100 = 'BASE_BLUE_100',\n    GREY = 'GREY',\n    YELLOW = 'YELLOW',\n    PRIMARY_BLUE = 'PRIMARY_BLUE',\n    WHITE = 'WHITE',\n    LIGHTER_GREY = 'LIGHT_GREYER',\n    FONT_COLOUR = 'FONT_COLOUR',\n}\n\nexport const TableColorTokens = {\n    GREEN: '#4CAF50', // TOKEN_STATE_SUCCESS_BASE\n    ORANGE: '#FF8F00', // TOKEN_STATE_WARNING_DARK\n    RED: '#F44336', // TOKEN_STATE_ERROR_BASE\n    BLUE: '#2196F3', // TOKEN_STATE_INFO_BASE\n    BASE_BLUE_100: '#BBDEFB', // TOKEN_COLOR_BASE_BLUE_100\n    GREY: '#6c757d', // TOKEN_TEXT_MED\n    YELLOW: '#FFC107', // TOKEN_STATE_WARNING_BASE\n    PRIMARY_BLUE: '#066AFF', // TOKEN_COLOR_PRIMARY_BLUE\n    WHITE: '#ffffff', // TOKEN_COLOR_BASE_WHITE\n    FONT_COLOUR: '#6c757d', // TOKEN_TEXT_MED\n    LIGHT_GREYER: '#f8f9fa', // TOKEN_COLOR_GRAY_LIGHTER\n};\n\nexport class TableStyles {\n    static linkStyles = {\n        'font-weight': '500',\n        'color': TableColorTokens.PRIMARY_BLUE,\n    };\n\n    static iconLinkStyles = {\n        ...TableStyles.linkStyles,\n        cursor: 'pointer',\n    };\n\n    static warningStyles = {\n        'font-weight': '500',\n        'color': TableColorTokens.RED,\n    };\n\n    static infoIconStyle = {\n        'cursor': 'pointer',\n        'color': TableColorTokens.PRIMARY_BLUE,\n        'font-size': '16px',\n        'height': 'auto',\n        'width': 'auto',\n        'padding-left': '5px',\n        'align-self': 'center',\n    };\n\n    static actionBtnStyle = {\n        color: TableColorTokens.PRIMARY_BLUE,\n        background: '#FAFBFC',\n        borderRadius: '2px',\n        padding: '10px',\n        cursor: 'pointer',\n    };\n}\n"],"names":[],"mappings":"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"}