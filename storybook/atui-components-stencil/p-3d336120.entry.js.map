{"version":3,"names":["AtuiMultiBtnCell","init","params","this","containerStyles","buttons","getGui","el","refresh","updateCell","value","newValue","handleClick","btn","click","buttonsToRender","map","button","h","position","disabled","tooltip","type","label","dataNameValue","onAtuiClick","slot","class","render","Host","key"],"sources":["src/components/table-components/cell-components/atui-multi-btn-cell/atui-multi-btn-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport { IClickCell } from '../../../../types';\nimport { CSSProperties } from '../../../../types/styles';\n\nexport interface MultiBtnCellData {\n    buttons: IBtnParams[];\n}\n\nexport interface IMultiBtnCellParams extends ICellRendererParams, IClickCell {\n    containerStyles?: CSSProperties;\n    buttons?: IBtnParams[] | ((params: ICellRendererParams) => IBtnParams[]);\n}\n\nexport interface IBtnParams {\n    value: string;\n    containerStyles?: CSSProperties;\n    click?: (params: ICellRendererParams) => any;\n    disabled: boolean;\n    tooltip?: string;\n    hidden?: boolean;\n    dataNameValue?: string;\n}\n\ntype InitParams = IMultiBtnCellParams;\n\n/**\n * @category Table Cell\n * @description A cell component for displaying multiple buttons.\n */\n\n@Component({\n    tag: 'atui-multi-btn-cell',\n    shadow: false,\n})\nexport class AtuiMultiBtnCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() params: InitParams;\n    @State() buttons: IBtnParams[];\n    @State() containerStyles: CSSProperties;\n\n    init(params: ICellRendererParams): void {\n        this.params = params as InitParams;\n\n        const { containerStyles, buttons } = this.params;\n\n        this.containerStyles = containerStyles;\n        this.buttons =\n            typeof buttons === 'function' ? buttons(params) : buttons;\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICellRendererParams): boolean {\n        this.updateCell(params.value);\n        return true;\n    }\n\n    private updateCell(newValue: any) {\n        this.params.value = newValue;\n    }\n\n    handleClick(btn: IBtnParams): any {\n        return btn.click && btn.click(this.params);\n    }\n\n    get buttonsToRender(): any {\n        return this.buttons.map((button) => {\n            return (\n                <atui-tooltip\n                    position=\"right\"\n                    disabled={!button.tooltip}\n                >\n                    {button && (\n                        <atui-button\n                            type=\"secondaryText\"\n                            label={button.value}\n                            disabled={button.disabled}\n                            data-name={button.dataNameValue}\n                            onAtuiClick={() => this.handleClick(button)}\n                        ></atui-button>\n                    )}\n\n                    {button && button.tooltip && (\n                        <span\n                            slot=\"tooltip-content\"\n                            class={`leading-normal`}\n                        >\n                            {button.tooltip}\n                        </span>\n                    )}\n                </atui-tooltip>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center\">{this.buttonsToRender}</Host>\n        );\n    }\n}\n"],"mappings":"+DAmCaA,EAAgB,M,yBAMzB,IAAAC,CAAKC,GACDC,KAAKD,OAASA,EAEd,MAAME,gBAAEA,EAAeC,QAAEA,GAAYF,KAAKD,OAE1CC,KAAKC,gBAAkBA,EACvBD,KAAKE,eACMA,IAAY,WAAaA,EAAQH,GAAUG,C,CAG1D,MAAAC,GACI,OAAOH,KAAKI,E,CAGhB,OAAAC,CAAQN,GACJC,KAAKM,WAAWP,EAAOQ,OACvB,OAAO,I,CAGH,UAAAD,CAAWE,GACfR,KAAKD,OAAOQ,MAAQC,C,CAGxB,WAAAC,CAAYC,GACR,OAAOA,EAAIC,OAASD,EAAIC,MAAMX,KAAKD,O,CAGvC,mBAAIa,GACA,OAAOZ,KAAKE,QAAQW,KAAKC,GAEjBC,EACI,gBAAAC,SAAS,QACTC,UAAWH,EAAOI,SAEjBJ,GACGC,EACI,eAAAI,KAAK,gBACLC,MAAON,EAAOP,MACdU,SAAUH,EAAOG,SAAQ,YACdH,EAAOO,cAClBC,YAAa,IAAMtB,KAAKS,YAAYK,KAI3CA,GAAUA,EAAOI,SACdH,EAAA,QACIQ,KAAK,kBACLC,MAAO,kBAENV,EAAOI,W,CAQhC,MAAAO,GACI,OACIV,EAACW,EAAI,CAAAC,IAAA,2CAACH,MAAM,4BAA4BxB,KAAKY,gB","ignoreList":[]}