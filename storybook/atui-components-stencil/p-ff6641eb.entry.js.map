{"version":3,"names":["AtCheckboxCellComponent","init","params","this","api","refreshHeader","getGui","el","refresh","setValue","checked","undefined","_a","render","isChecked","data","isDisabled","getDisabled","h","Host","key","class","disabled","value","onAtuiChange","event","detail"],"sources":["src/components/table-components/cell-components/at-checkbox-cell/at-checkbox-cell.tsx"],"sourcesContent":["import { Component, h, Element, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport type { ITooltipCell } from '../../../../types';\n\nexport interface CheckboxCellData {\n    checked: boolean;\n    disabled?: boolean;\n}\n\nexport interface ICheckboxCellParams extends ICellRendererParams, ITooltipCell {\n    checked?: (data: any) => boolean;\n    setValue: (value: any) => void;\n    getDisabled?: (data: any) => boolean;\n}\n\n/**\n * @category Table Cell\n * @description A checkbox cell component for table row selection and boolean data display. Provides accessible selection controls within data tables.\n */\n@Component({\n    tag: 'at-checkbox-cell',\n    shadow: false,\n})\nexport class AtCheckboxCellComponent implements ICellRendererComp {\n    @Element() el: HTMLElement;\n\n    private params!: ICheckboxCellParams;\n\n    init(params: ICheckboxCellParams): void {\n        this.params = params;\n        this.params.api.refreshHeader();\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICheckboxCellParams): boolean {\n        this.params = params;\n        return true;\n    }\n\n    private setValue(checked: boolean): void {\n        if (checked !== undefined && this.params?.setValue) {\n            this.params.setValue(checked);\n            this.params.api.refreshHeader();\n        }\n    }\n\n    render() {\n        const isChecked = this.params.checked\n            ? this.params.checked(this.params.data)\n            : false;\n        const isDisabled = this.params.getDisabled\n            ? this.params.getDisabled(this.params.data)\n            : false;\n\n        return (\n            <Host class=\"flex h-full items-center\">\n                <at-checkbox\n                    class=\"w-auto self-center\"\n                    disabled={isDisabled}\n                    value={isChecked}\n                    onAtuiChange={(event: CustomEvent) =>\n                        this.setValue(event.detail)\n                    }\n                />\n            </Host>\n        );\n    }\n}\n"],"mappings":"+DAuBaA,EAAuB,M,yBAKhC,IAAAC,CAAKC,GACDC,KAAKD,OAASA,EACdC,KAAKD,OAAOE,IAAIC,e,CAGpB,MAAAC,GACI,OAAOH,KAAKI,E,CAGhB,OAAAC,CAAQN,GACJC,KAAKD,OAASA,EACd,OAAO,I,CAGH,QAAAO,CAASC,G,MACb,GAAIA,IAAYC,aAAaC,EAAAT,KAAKD,UAAQ,MAAAU,SAAA,SAAAA,EAAAH,UAAU,CAChDN,KAAKD,OAAOO,SAASC,GACrBP,KAAKD,OAAOE,IAAIC,e,EAIxB,MAAAQ,GACI,MAAMC,EAAYX,KAAKD,OAAOQ,QACxBP,KAAKD,OAAOQ,QAAQP,KAAKD,OAAOa,MAChC,MACN,MAAMC,EAAab,KAAKD,OAAOe,YACzBd,KAAKD,OAAOe,YAAYd,KAAKD,OAAOa,MACpC,MAEN,OACIG,EAACC,EAAK,CAAAC,IAAA,2CAAAC,MAAM,4BACRH,EAAA,eAAAE,IAAA,2CACIC,MAAM,qBACNC,SAAUN,EACVO,MAAOT,EACPU,aAAeC,GACXtB,KAAKM,SAASgB,EAAMC,U","ignoreList":[]}