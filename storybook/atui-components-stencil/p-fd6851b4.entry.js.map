{"version":3,"names":["atPromptMessageCss","messageVariantsConfig","variants","role","user","assistant","system","loading","true","false","defaultVariants","getMessageClasses","classlist","AtPromptMessage","constructor","hostRef","this","content","error","score","PromptResponseScore","NONE","enable_vote","enable_copy","enable_edit","response_animation","copyFeedbackVisible","animatedContent","isAnimating","handleCopy","async","navigator","clipboard","writeText","atCopy","emit","setTimeout","err","console","handleRetry","atRetry","handleEdit","atEdit","handleVote","newScore","atVote","messageId","message_id","componentWillLoad","translations","fetchTranslations","el","initializeContent","watchContentChange","newContent","startWordAnimation","words","split","currentWordIndex","animateNextWord","length","delay","Math","random","renderActions","h","class","position","slot","size","type","icon","onClick","_c","_b","_a","ATUI","PROMPT","EDIT","Fragment","UP","xmlns","height","viewBox","width","fill","d","_f","_e","_d","HELPFUL","DOWN","_j","_h","_g","NOT_HELPFUL","_m","_l","_k","COPIED","_q","_p","_o","COPY","_t","_s","_r","RETRY","renderContent","variant","ref","errorEl","error_message","ERROR_GENERATING_RESPONSE","contentToDisplay","animationClass","render","messageClasses","Host","key","name"],"sources":["src/components/prompt-components/at-prompt-message/at-prompt-message.scss?tag=at-prompt-message","src/components/prompt-components/at-prompt-message/at-prompt-message.tsx"],"sourcesContent":["@keyframes atPromptFadeIn {\n    from {\n        opacity: 0;\n    }\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes atPromptTypingCursorBlink {\n    0%,\n    50% {\n        opacity: 1;\n    }\n    51%,\n    100% {\n        opacity: 0;\n    }\n}\n\n.at-prompt-fade-in {\n    animation: atPromptFadeIn 0.6s ease-out;\n}\n","import {\n    Component,\n    Element,\n    Event,\n    EventEmitter,\n    Fragment,\n    h,\n    Host,\n    Prop,\n    State,\n    Watch,\n} from '@stencil/core';\nimport { classlist } from '../../../utils/classlist';\nimport { fetchTranslations } from '../../../utils/translation';\nimport {\n    PromptResponseAnimation,\n    PromptResponseScore,\n    PromptUserRole,\n} from '../../../types';\n\nconst messageVariantsConfig = {\n    variants: {\n        role: {\n            user: 'bg-surface-2 text-dark ml-auto inline-block p-8',\n            assistant: 'text-dark mr-auto',\n            system: 'text-dark mr-auto',\n        },\n        loading: {\n            true: 'animate-pulse',\n            false: '',\n        },\n    },\n    defaultVariants: {\n        role: 'user',\n        loading: false,\n    },\n};\n\nconst getMessageClasses = classlist(\n    'rounded-lg py-4 text-base',\n    messageVariantsConfig,\n);\n\n/**\n * @category Prompt\n * @description A message component for displaying individual chat messages with different roles (user, assistant). Supports optional avatars, loading states, error states, and interactive actions like copy, edit, and retry.\n * @slot - Custom message content (alternative to using the content prop)\n */\n@Component({\n    tag: 'at-prompt-message',\n    shadow: false,\n    styleUrl: 'at-prompt-message.scss',\n})\nexport class AtPromptMessage {\n    /**\n     * The role/type of the message sender (only 'user' and 'assistant' are supported)\n     */\n    @Prop() role: PromptUserRole = 'user';\n\n    /**\n     * The message content text\n     */\n    @Prop() content: string = '';\n\n    /**\n     * Display name for the message sender\n     */\n    @Prop() name: string;\n\n    /**\n     * Shows loading state with animated placeholder content\n     */\n    @Prop() loading: boolean = false;\n\n    /**\n     * Shows error state styling and enables retry action\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Custom error message text (defaults to generic error message)\n     */\n    @Prop() error_message: string;\n\n    /**\n     * The current vote score of the message\n     */\n    @Prop() score: PromptResponseScore = PromptResponseScore.NONE;\n\n    /**\n     * Display voting actions for assistant messages\n     */\n    @Prop() enable_vote: boolean = false;\n\n    /**\n     * Display copy action for assistant messages - copies message content to clipboard\n     */\n    @Prop() enable_copy: boolean = false;\n\n    /**\n     * Display edit action for user messages\n     */\n    @Prop() enable_edit: boolean = false;\n\n    /**\n     * Unique identifier for the message\n     */\n    @Prop() message_id: string;\n\n    /**\n     * Animation type for text streaming effect\n     * - 'none': No animation (default)\n     * - 'fade': Fade in the entire message\n     * - 'words': Animate words appearing sequentially\n     */\n    @Prop() response_animation: PromptResponseAnimation = 'words';\n\n    /**\n     * Emitted when the copy action is triggered\n     */\n    @Event() atCopy: EventEmitter<string>;\n\n    /**\n     * Emitted when a vote action is triggered\n     */\n    @Event() atVote: EventEmitter<{ messageId: string; score: number }>;\n\n    /**\n     * Emitted when the retry action is triggered (for assistant messages with errors)\n     */\n    @Event() atRetry: EventEmitter<void>;\n\n    /**\n     * Emitted when the edit action is triggered (for user messages)\n     */\n    @Event() atEdit: EventEmitter<string>;\n\n    @State() translations: any;\n    @State() copyFeedbackVisible: boolean = false;\n    @State() animatedContent: string = '';\n    @State() isAnimating: boolean = false;\n    errorEl: HTMLDivElement;\n    @Element() el: HTMLAtInputElement;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n        this.initializeContent();\n    }\n\n    @Watch('content')\n    watchContentChange(newContent: string) {\n        if (\n            newContent &&\n            this.response_animation === 'words' &&\n            this.role === 'assistant'\n        ) {\n            this.startWordAnimation(newContent);\n        } else {\n            this.animatedContent = newContent;\n        }\n    }\n\n    private initializeContent() {\n        if (\n            this.content &&\n            this.response_animation === 'words' &&\n            this.role === 'assistant'\n        ) {\n            this.startWordAnimation(this.content);\n        } else {\n            this.animatedContent = this.content;\n        }\n    }\n\n    private startWordAnimation(content: string) {\n        if (this.isAnimating) return;\n\n        this.isAnimating = true;\n        this.animatedContent = '';\n\n        const words = content.split(' ');\n        let currentWordIndex = 0;\n\n        const animateNextWord = () => {\n            if (currentWordIndex < words.length) {\n                if (currentWordIndex === 0) {\n                    this.animatedContent = words[currentWordIndex];\n                } else {\n                    this.animatedContent += ' ' + words[currentWordIndex];\n                }\n                currentWordIndex++;\n\n                const delay = Math.random() * 30 + 30;\n                setTimeout(animateNextWord, delay);\n            } else {\n                this.isAnimating = false;\n            }\n        };\n\n        setTimeout(animateNextWord, 30);\n    }\n\n    private handleCopy = async () => {\n        try {\n            await navigator.clipboard.writeText(this.content);\n            this.copyFeedbackVisible = true;\n            this.atCopy.emit(this.content);\n\n            setTimeout(() => {\n                this.copyFeedbackVisible = false;\n            }, 2000);\n        } catch (err) {\n            console.error('Failed to copy text:', err);\n        }\n    };\n\n    private handleRetry = () => {\n        this.atRetry.emit();\n    };\n\n    private handleEdit = () => {\n        this.atEdit.emit(this.content);\n    };\n\n    private handleVote = (score: number) => {\n        const newScore =\n            this.score === score ? PromptResponseScore.NONE : score;\n        this.atVote.emit({ messageId: this.message_id, score: newScore });\n    };\n\n    private renderActions() {\n        if (this.loading) return null;\n\n        return (\n            <div\n                class=\"mt-2 flex items-center justify-end gap-2\"\n                data-name=\"message-actions\"\n            >\n                {this.role === 'user' && this.enable_edit && (\n                    <at-tooltip position=\"top\">\n                        <at-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"edit\"\n                            class=\"text-xs\"\n                            onClick={this.handleEdit}\n                            data-name=\"edit-button\"\n                        />\n                        <span>\n                            {this.translations?.ATUI?.PROMPT?.EDIT || 'Edit'}\n                        </span>\n                    </at-tooltip>\n                )}\n\n                {this.role === 'assistant' && this.enable_vote && (\n                    <Fragment>\n                        <at-tooltip position=\"top\">\n                            <at-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                onClick={() =>\n                                    this.handleVote(PromptResponseScore.UP)\n                                }\n                                data-name=\"vote-up-button\"\n                            >\n                                {this.score === PromptResponseScore.UP ? (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        height=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        width=\"15px\"\n                                        fill=\"#000000\"\n                                    >\n                                        <path d=\"M720-144H264v-480l288-288 32 22q18 13 26.5 33t3.5 41l-38 192h264q30 0 51 21t21 51v57q0 8-1.5 14.5T906-467L787-188q-9 20-27 32t-40 12Z\" />\n                                    </svg>\n                                ) : (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        height=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        width=\"15px\"\n                                        fill=\"#adb5bd\"\n                                    >\n                                        <path d=\"M720-144H264v-480l288-288 32 22q17 12 26 30.5t5 38.5l-1 5-38 192h264q30 0 51 21t21 51v57q0 8-1.5 14.5T906-467L786.93-187.8Q778-168 760-156t-40 12Zm-384-72h384l120-279v-57H488l49-243-201 201v378Zm0-378v378-378Z\" />\n                                    </svg>\n                                )}\n                            </at-button>\n                            <span>\n                                {this.translations?.ATUI?.PROMPT?.HELPFUL ||\n                                    'Helpful'}\n                            </span>\n                        </at-tooltip>\n\n                        <at-tooltip position=\"top\">\n                            <at-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                onClick={() =>\n                                    this.handleVote(PromptResponseScore.DOWN)\n                                }\n                                data-name=\"vote-down-button\"\n                            >\n                                {this.score === PromptResponseScore.DOWN ? (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        height=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        width=\"15px\"\n                                        fill=\"#000000\"\n                                    >\n                                        <path d=\"M240-816h456v480L408-48l-32-22q-18-13-26.5-33t-3.5-41l38-192H120q-30 0-51-21t-21-51v-57q0-8 1.5-14.5T54-493l119-279q8-20 26.5-32t40.5-12Z\" />\n                                    </svg>\n                                ) : (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        height=\"15px\"\n                                        fill=\"#adb5bd\" // token-border-dark\n                                    >\n                                        <path d=\"M240-816h456v480L408-48l-32-22q-17-12-26-30.5t-5-38.5l1-5 38-192H120q-30 0-51-21t-21-51v-57q0-8 1.5-14.5T54-493l119-279q8-20 26.5-32t40.5-12Zm384 72H240L120-465v57h352l-49 243 201-201v-378Zm0 378v-378 378Z\" />\n                                    </svg>\n                                )}\n                            </at-button>\n                            <span>\n                                {this.translations?.ATUI?.PROMPT?.NOT_HELPFUL ||\n                                    'Not Helpful'}\n                            </span>\n                        </at-tooltip>\n                    </Fragment>\n                )}\n\n                {this.role === 'assistant' && this.enable_copy && (\n                    <at-tooltip position=\"top\">\n                        <at-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            icon={\n                                this.copyFeedbackVisible\n                                    ? 'check'\n                                    : 'content_copy'\n                            }\n                            type=\"secondaryText\"\n                            onClick={this.handleCopy}\n                            data-name=\"copy-button\"\n                        />\n                        <span>\n                            {this.copyFeedbackVisible\n                                ? this.translations?.ATUI?.PROMPT?.COPIED ||\n                                  'Copied'\n                                : this.translations?.ATUI?.PROMPT?.COPY ||\n                                  'Copy'}\n                        </span>\n                    </at-tooltip>\n                )}\n\n                {this.role === 'assistant' && this.error && (\n                    <at-tooltip position=\"top\">\n                        <at-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"refresh\"\n                            onClick={this.handleRetry}\n                            data-name=\"retry-button\"\n                        />\n                        <span>\n                            {this.translations?.ATUI?.PROMPT?.RETRY || 'Retry'}\n                        </span>\n                    </at-tooltip>\n                )}\n            </div>\n        );\n    }\n\n    private renderContent() {\n        if (this.loading) {\n            return (\n                <div\n                    class=\"py-8\"\n                    data-name=\"loading-wrapper\"\n                >\n                    <at-loading\n                        class=\"flex items-center gap-4 py-8\"\n                        data-name=\"loading-content\"\n                        variant=\"typing\"\n                        size=\"sm\"\n                    />\n                </div>\n            );\n        }\n\n        if (this.error) {\n            return (\n                <div\n                    class=\"space-y-2\"\n                    ref={(el) => (this.errorEl = el)}\n                    data-name=\"error-content\"\n                >\n                    <p class=\"text-destructive-foreground\">\n                        {this.error_message ||\n                            this.translations?.ATUI?.PROMPT\n                                ?.ERROR_GENERATING_RESPONSE ||\n                            'Error generating response'}\n                    </p>\n                </div>\n            );\n        }\n\n        const contentToDisplay =\n            this.response_animation === 'words' && this.role === 'assistant'\n                ? this.animatedContent\n                : this.content;\n\n        const animationClass =\n            this.response_animation === 'fade' ||\n            this.response_animation === 'words'\n                ? 'at-prompt-fade-in'\n                : '';\n\n        return (\n            <div\n                class={`prose prose-sm preserve-newlines max-w-none ${animationClass}`}\n                data-name=\"message-content\"\n            >\n                <slot></slot>\n                {contentToDisplay}\n            </div>\n        );\n    }\n\n    render() {\n        const messageClasses = getMessageClasses({\n            role: this.role,\n            loading: this.loading,\n        });\n\n        return (\n            <Host\n                class=\"flex w-full gap-8\"\n                data-name=\"message-container\"\n                data-role={this.role}\n            >\n                <div class=\"flex flex-1 flex-col\">\n                    {this.name && (\n                        <span\n                            class=\"text-light self-start text-sm\"\n                            data-name=\"message-name\"\n                        >\n                            {this.name}\n                        </span>\n                    )}\n\n                    <div class={messageClasses}>{this.renderContent()}</div>\n\n                    {this.renderActions()}\n                </div>\n            </Host>\n        );\n    }\n}\n"],"mappings":"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","ignoreList":[]}