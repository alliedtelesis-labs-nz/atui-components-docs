{"version":3,"file":"time.js","sourceRoot":"","sources":["../../src/types/time.ts"],"names":[],"mappings":"AAAA,OAAO,EAA+B,gBAAgB,EAAE,MAAM,QAAQ,CAAC;AAOvE,MAAM,CAAN,IAAY,QAQX;AARD,WAAY,QAAQ;IAChB,+BAAmB,CAAA;IACnB,+BAAmB,CAAA;IACnB,2BAAe,CAAA;IACf,yBAAa,CAAA;IACb,2BAAe,CAAA;IACf,6BAAiB,CAAA;IACjB,2BAAe,CAAA;AACnB,CAAC,EARW,QAAQ,KAAR,QAAQ,QAQnB;AACD,MAAM,CAAN,IAAY,gBAEX;AAFD,WAAY,gBAAgB;IACxB,+BAAW,CAAA;AACf,CAAC,EAFW,gBAAgB,KAAhB,gBAAgB,QAE3B;AAED,MAAM,CAAN,IAAY,QAQX;AARD,WAAY,QAAQ;IAChB,+BAAmB,CAAA;IACnB,+BAAmB,CAAA;IACnB,2BAAe,CAAA;IACf,yBAAa,CAAA;IACb,2BAAe,CAAA;IACf,6BAAiB,CAAA;IACjB,2BAAe,CAAA;AACnB,CAAC,EARW,QAAQ,KAAR,QAAQ,QAQnB;AAgBD,MAAM,OAAO,iBAAiB;IAC1B,MAAM,CAAM;IACZ,QAAQ,CAAe;IACvB;;;;OAIG;IACH,MAAM,CAAC,WAAW,CAAC,KAAyB;QACxC,IAAI,KAAK,CAAC,QAAQ,KAAK,gBAAgB,CAAC,MAAM,EAAE,CAAC;YAC7C,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC;QACrD,CAAC;QACD,OAAO,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;CACJ","sourcesContent":["import { DateRange, DateRangeStrings, TimeRangeDisplay } from './date';\n\nexport interface TimeWithUnit {\n    unit: TimeUnit;\n    value: number;\n}\n\nexport enum TimeUnit {\n    SECONDS = 'SECONDS',\n    MINUTES = 'MINUTES',\n    HOURS = 'HOURS',\n    DAYS = 'DAYS',\n    WEEKS = 'WEEKS',\n    MONTHS = 'MONTHS',\n    YEARS = 'YEARS',\n}\nexport enum TimeExtraOptions {\n    ALL = 'ALL',\n}\n\nexport enum Duration {\n    SECONDS = 'seconds',\n    MINUTES = 'minutes',\n    HOURS = 'hours',\n    DAYS = 'days',\n    WEEKS = 'weeks',\n    MONTHS = 'months',\n    YEARS = 'years',\n}\n\nexport interface ITimeRange {\n    timeRange: ISelectedTimeRange;\n}\n\nexport interface ISelectedTimeRange {\n    selected: TimeRangeDisplay;\n    custom?: DateRangeStrings;\n}\n\nexport interface ITimeDateFilter {\n    dateFilter: DateRange;\n    relativeTimeFilter?: TimeWithUnit;\n}\n\nexport class SelectedTimeRange {\n    custom: any;\n    selected: TimeWithUnit;\n    /**\n     * Generate a unique key when you need ISelectedTimeRange as an argument key of a function call caching.\n     * Please see https://lodash.com/docs/4.17.15#memoize\n     * @param value\n     */\n    static getCacheKey(value: ISelectedTimeRange): string {\n        if (value.selected === TimeRangeDisplay.CUSTOM) {\n            return `${value.custom.from}-${value.custom.to}`;\n        }\n        return `${value.selected}`;\n    }\n}\n"]}