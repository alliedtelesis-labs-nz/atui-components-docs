{"version":3,"file":"generateMdx.js","sourceRoot":"","sources":["../../src/storybook-generate/generateMdx.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\n\nconst searchForFiles = (dir: string, fileName: string, filePaths: string[]) => {\n    const files = fs.readdirSync(dir);\n    for (const file of files) {\n        const filePath = path.join(dir, file);\n        const fileStat = fs.statSync(filePath);\n        if (fileStat.isDirectory()) {\n            searchForFiles(filePath, fileName, filePaths);\n        } else if (file.endsWith(fileName)) {\n            filePaths.push(filePath);\n        }\n    }\n};\n\nconst formatFilename = (filename: string) => {\n    return filename\n        .split('-')\n        .map((word) => `${word[0].toUpperCase()}${word.substring(1)}`)\n        .join(' ');\n};\n\nconst componentDirectory: string = path.resolve(\n    path.join(import.meta.dirname, '..', 'components'),\n);\n\nconst filePaths: string[] = [];\nsearchForFiles(componentDirectory, '.tsx', filePaths);\n\nfilePaths.forEach((filePath) => {\n    fs.access(`${path.dirname(filePath)}/readme.md`, (err) => {\n        if (!err) {\n            const componentName = formatFilename(\n                path.basename(filePath).slice(5, -4),\n            );\n            const displayPath = path\n                .relative('../components', path.dirname(filePath))\n                .split('/')\n                .slice(0, -1)\n                .map((name) => `${formatFilename(name.replace('atui-', ''))}/`)\n                .join('');\n\n            const filename = filePath.replace('.tsx', '.mdx');\n            fs.writeFile(\n                filename,\n                `import { Meta } from '@storybook/blocks';\nimport { MermaidMarkdown } from '${path.relative(path.dirname(filePath), '../../.storybook')}/blocks/MermaidMarkdown';\nimport readme from './readme.md?raw';\n\n<Meta title=\"Components/${displayPath.length ? `${displayPath}${componentName}/` : ''}${componentName}\" />\n\n<MermaidMarkdown md={readme}></MermaidMarkdown>\n`,\n                (error) => {\n                    if (error) console.error(error);\n                    else console.log(`${componentName} success`);\n                },\n            );\n        }\n    });\n});\n"]}