{"version":3,"file":"at-chart-bar-line.js","sourceRoot":"","sources":["../../../src/components/at-chart-bar-line/at-chart-bar-line.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Host, Method, Prop } from '@stencil/core';\nimport {\n    BarController,\n    BarElement,\n    CategoryScale,\n    Chart,\n    LinearScale,\n    LineController,\n    LineElement,\n    TimeScale,\n    Legend,\n    Tooltip,\n    PointElement,\n    Filler,\n    ChartConfiguration,\n    PointStyle,\n    Colors,\n    ChartDataset,\n    Point,\n    BubbleDataPoint,\n    Color,\n} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport type { TimeWithUnit } from '../../types';\nimport { TimeDateUtil } from '../../utils/time-date.util';\nimport { SelectedTimeRangeExtended } from '../../components';\nimport { Height } from '../at-chart-donut/at-chart-donut';\nimport { ChartColorPalette } from '../../types/chart-color';\nimport { getChartColors } from '../../utils/chart-color';\n\n/*\n * NOTES:\n *\n * The exported class contains a function from chart.js called useOffsetPos.\n * This isn't allowed by react (because it starts with the word 'use'), so the\n * build script runs\n *\n *  sed -i 's/useOffsetPos/offsetPos/g' dist/components/at-chart-bar-line.js\n *\n * to replace all occurences of useOffsetPos with offsetPos.\n */\nexport interface PointStyles {\n    pointBackgroundColor: Color;\n    pointBorderColor: Color;\n    pointBorderWidth: number;\n    pointHitRadius: number;\n    pointHoverBackgroundColor: Color;\n    pointHoverBorderColor: Color;\n    pointHoverBorderWidth: number;\n    pointHoverRadius: number;\n    pointRadius: number;\n    pointRotaion: number;\n    pointStyle: PointStyle;\n}\n\nexport interface Threshold {\n    label: string;\n    data: (number | Point | [number, number] | BubbleDataPoint)[];\n    color?: string;\n    dashLine?: boolean;\n    stepped?: boolean;\n}\n\nconst heightVariants = {\n    xs: 'h-[70px]',\n    sm: 'h-[160px]',\n    md: 'h-[235px]',\n    lg: 'h-[330px]',\n    xl: 'h-[440px]',\n    auto: 'h-full',\n};\n\n/**\n * @category Data Visualization\n * @description A flexible chart component for displaying bar and line charts with extensive customization options. Supports multiple data series, thresholds, time-based data, and various color palettes.\n */\n/**\n * ### ```interface PointStyles```\n * ```\n *  pointBackgroundColor: Color;\n *  pointBorderColor: Color;\n *  pointBorderWidth: number;\n *  pointHitRadius: number;\n *  pointHoverBackgroundColor: Color;\n *  pointHoverBorderColor: Color;\n *  pointHoverBorderWidth: number;\n *  pointHoverRadius: number;\n *  pointRadius: number;\n *  pointRotaion: number;\n *  pointStyle: PointStyle;\n * ```\n * ### ```interface Threshold```\n * ```\n *  label: string;\n *  data: (number | Point | [number, number] | BubbleDataPoint)[];\n *  color?: string;\n *  dashLine?: boolean;\n *  stepped?: boolean;\n * ```\n */\n@Component({\n    tag: 'at-chart-bar-line',\n    shadow: false,\n})\nexport class AtChartBarLine {\n    /**\n     * Type of the chart\n     */\n    @Prop()\n    type: 'bar' | 'line';\n\n    /**\n     * Data to go in the chart. ChartDataset properties found\n     * [here for line](https://www.chartjs.org/docs/latest/charts/line.html),\n     * and [here for bar](https://www.chartjs.org/docs/latest/charts/bar.html)\n     */\n    @Prop({ mutable: true })\n    data: {\n        labels: string[];\n        datasets: ChartDataset[];\n    };\n\n    /**\n     * X axis formatting to be applied to the chart.\n     * If you would like the default formatting provided by chart.js, set this to an empty object.\n     */\n    @Prop()\n    x_axis_format: object;\n\n    /**\n     * Y axis formatting to be applied to the chart.\n     */\n    @Prop()\n    y_axis_format?: object;\n\n    /**\n     * Additional options to go into the 'options' seciont of the chart configuration\n     */\n    @Prop()\n    options?: object;\n\n    /**\n     * Options for the tooltips on the chart\n     */\n    @Prop()\n    tooltip_options?: object;\n\n    /**\n     * Options for the legend\n     */\n    @Prop()\n    legend_format?: object;\n\n    /**\n     * Thresholds to be displayed in the chart\n     */\n    @Prop()\n    thresholds?: Threshold[];\n\n    /**\n     * Styles for the points in the chart\n     */\n    @Prop()\n    point_styles?: PointStyles;\n\n    /**\n     * The time range that the chart is displayed in.\n     */\n    @Prop()\n    time_range?: SelectedTimeRangeExtended;\n\n    /**\n     * Height of the chart.\n     */\n    @Prop()\n    height?: Height = 'md';\n    canvasEl: HTMLCanvasElement;\n    config: ChartConfiguration;\n\n    /**\n     * Colour palette to use for the chart. Preset options are provided ChartColourPalette:\n     * 'categorical' : For charts with data that have distinct labels and no natural order\n     * 'sequential' : For charts with data that is numeric or is naturally ordered.\n     * 'alert' : For charts that relate to health state. Note that data requires a specific order.\n     * 'custom' : Use colors defined in data. If none are provided, the ChartJS default will be used.\n     */\n    @Prop()\n    color_palette: ChartColorPalette = ChartColorPalette.CATEGORICAL;\n\n    /**\n     * Getter method for the chart's configuration object\n     * @returns Configuration of the chart\n     */\n    @Method()\n    async getConfig(): Promise<object> {\n        return this.config;\n    }\n\n    initChart() {\n        Chart.register(\n            LinearScale,\n            BarController,\n            CategoryScale,\n            BarElement,\n            TimeScale,\n            LineController,\n            LineElement,\n            PointElement,\n            Colors,\n            Legend,\n            Tooltip,\n            Filler,\n        );\n\n        const colors = getChartColors(this.color_palette);\n\n        if (colors) {\n            this.applyPresetPalette(colors);\n        }\n\n        if (this.point_styles) {\n            this.pointStylesSetup();\n        }\n\n        this.config = {\n            type: this.type,\n            data: {\n                labels: this.data.labels,\n                datasets: [...this.data.datasets, ...this.formatThresholds()],\n            },\n            options: {\n                devicePixelRatio: 2,\n                maintainAspectRatio: false,\n                scales: {\n                    y: this.y_axis_format || {\n                        beginAtZero: true,\n                        type: 'linear',\n                        min: 0,\n                    },\n                    x: this.x_axis_format || {\n                        type: 'time',\n                        time: {\n                            displayFormats: {\n                                day: 'ddd',\n                                minute: 'MMM D H:mm',\n                                hour: 'MMM D H:mm',\n                            },\n                        },\n                        ticks: {\n                            font: {\n                                size: 11,\n                            },\n                            autoSkip: true,\n                            align: 'center',\n                            maxRotation: 0,\n                            minRotation: 0,\n                        },\n                    },\n                },\n                ...this.options,\n                plugins: {\n                    tooltip: this.tooltip_options || {\n                        mode: 'index',\n                        intersect: false,\n                        position: 'nearest',\n                        animation: {\n                            duration: 150,\n                        },\n                    },\n                    legend: this.legend_format || {\n                        labels: {\n                            boxWidth: 8,\n                            boxHeight: 8,\n                            fontSize: 10,\n                            borderRadius: 2,\n                        },\n                        onHover: (event): void => {\n                            if (event.native) {\n                                (\n                                    event.native.target as HTMLElement\n                                ).style.cursor = 'pointer';\n                            }\n                        },\n                        display: true,\n                    },\n                },\n                clip: false,\n                elements: {\n                    line: {\n                        tension: 0,\n                        borderWidth: 2,\n                    },\n                },\n            },\n        };\n\n        if (this.time_range) {\n            const dates = this.getMinMaxDateStrings(this.time_range);\n            this.config.options.scales.x['min'] = dates.min;\n            this.config.options.scales.x['max'] = dates.max;\n        }\n\n        new Chart(this.canvasEl, this.config);\n        this.canvasEl.style.width = '';\n        this.canvasEl.style.height = '';\n    }\n\n    componentDidUpdate() {\n        if (this.data && this.data.datasets.length) {\n            this.initChart();\n        }\n    }\n\n    /**\n     * componentDidLoad will be run, but if the props haven't been passed to it yet,\n     * it will throw an error. So we catch this, and wait for the props to be passed\n     * to the component where it will run componentDidUpdtae.\n     */\n    componentDidLoad() {\n        if (this.data && this.data.datasets.length) {\n            this.initChart();\n        }\n    }\n\n    pointStylesSetup(): void {\n        this.data.datasets = this.data.datasets.map((dataset) => {\n            return {\n                ...dataset,\n                ...(this.point_styles as object),\n            };\n        });\n    }\n\n    applyPresetPalette(colors: string[]): void {\n        if (this.color_palette === ChartColorPalette.CUSTOM) {\n            return;\n        }\n\n        this.data.datasets = this.data.datasets.map((dataset, index) => {\n            const color = colors[index % colors.length];\n            return {\n                ...dataset,\n                backgroundColor: color,\n                borderColor: color,\n            };\n        });\n    }\n\n    getMinMaxDateStrings(timeRange: SelectedTimeRangeExtended): {\n        min: string;\n        max: string;\n    } {\n        const timeWithUnit = timeRange.selected as TimeWithUnit;\n        const custom = timeRange.custom\n            ? TimeDateUtil.getAbsoluteDateRange(timeRange.custom)\n            : null;\n        const { startDate, endDate } = TimeDateUtil.getDateRange(\n            custom,\n            timeWithUnit,\n            null,\n        );\n        return { min: startDate.toString(), max: endDate.toString() };\n    }\n\n    formatThresholds = () => {\n        if (!this.thresholds) {\n            return [];\n        }\n        const datasets: ChartDataset[] = [];\n        this.thresholds.forEach((threshold) => {\n            datasets.push({\n                type: 'line',\n                label: threshold.label,\n                borderColor: threshold.color,\n                borderCapStyle: 'butt',\n                backgroundColor: 'white',\n                fill: false,\n                data: threshold.data,\n                pointRadius: 0,\n                borderDash: threshold.dashLine ? [6, 3] : undefined,\n                tension: 0,\n                stepped: threshold.stepped,\n                order: 1,\n            });\n        });\n        return datasets;\n    };\n\n    render() {\n        return (\n            <Host style={{ height: '100%', width: '100%' }}>\n                <section class={`min-w-100 ${heightVariants[this.height]}`}>\n                    <canvas ref={(el) => (this.canvasEl = el)} />\n                </section>\n            </Host>\n        );\n    }\n}\n"]}