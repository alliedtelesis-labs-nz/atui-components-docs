{"version":3,"file":"atui-layout.js","sourceRoot":"","sources":["../../../src/components/atui-layout/atui-layout.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAIzD;;;;;;;;;GASG;AAKH,MAAM,OAAO,UAAU;IAJvB;QAKI;;WAEG;QAEH,aAAQ,GAAa,eAAe,CAAC;QAErC;;WAEG;QAEH,aAAQ,GAAG,IAAI,CAAC;KAiDnB;IA/CG,IAAI,aAAa;QACb,QAAQ,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,KAAK,eAAe;gBAChB,OAAO,CACH,WACI,KAAK,EAAC,uCAAuC,eACnC,uBAAuB;oBAEjC,WAAK,KAAK,EAAC,yCAAyC;wBAChD,YAAM,IAAI,EAAC,QAAQ,GAAG,CACpB;oBACN,WACI,KAAK,EAAE,2BAA2B,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,iBAAiB,EAAE;wBAEvF,YAAM,IAAI,EAAC,QAAQ,GAAG,CACpB,CACJ,CACT,CAAC;YACN,KAAK,QAAQ;gBACT,OAAO,CACH,WACI,KAAK,EAAC,sBAAsB,eAClB,gBAAgB;oBAE1B,YAAM,IAAI,EAAC,mBAAmB,GAAG;oBACjC,WAAK,KAAK,EAAC,oCAAoC;wBAC3C,YAAM,IAAI,EAAC,gBAAgB,GAAG,CAC5B,CACJ,CACT,CAAC;YACN,KAAK,mBAAmB;gBACpB,OAAO,CACH,WACI,KAAK,EAAC,qCAAqC,eACjC,2BAA2B;oBAErC,WAAK,KAAK,EAAC,mCAAmC;wBAC1C,eAAQ,CACN,CACJ,CACT,CAAC;QACV,CAAC;IACL,CAAC;IAED,MAAM;QACF,OAAO,EAAC,IAAI,uDAAE,IAAI,CAAC,aAAa,CAAQ,CAAC;IAC7C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Host, Prop } from '@stencil/core';\n\nexport type Template = 'content-container' | 'master-detail' | 'tabset';\n\n/**\n * @category Layout\n * @description A base layout component for structuring page content with flexible sections and responsive behavior. Provides foundation for consistent page layouts.\n *\n * @slot master - Used as the master element when template is master-detail\n * @slot detail - Used as the detail element when template is master-detail\n * @slot tabset-navigation - Used as the navigation element when template is tabset\n * @slot tabset-content - Used as the content element when template is tabset\n * @slot - Content when template is content-container\n */\n@Component({\n    tag: 'atui-layout',\n    shadow: false,\n})\nexport class AtuiLayout {\n    /**\n     * Template used to display content\n     */\n    @Prop()\n    template: Template = 'master-detail';\n\n    /**\n     * If overflow is allowed on the detail in master-detail\n     */\n    @Prop()\n    overflow = true;\n\n    get layoutElement(): any {\n        switch (this.template) {\n            case 'master-detail':\n                return (\n                    <div\n                        class=\"flex h-full flex-grow overflow-hidden\"\n                        data-name=\"wrapper-master-detail\"\n                    >\n                        <div class=\"w-sidebar flex flex-col overflow-hidden\">\n                            <slot name=\"master\" />\n                        </div>\n                        <div\n                            class={`flex flex-grow flex-col ${this.overflow ? 'overflow-auto' : 'overflow-hidden'}`}\n                        >\n                            <slot name=\"detail\" />\n                        </div>\n                    </div>\n                );\n            case 'tabset':\n                return (\n                    <div\n                        class=\"flex w-full flex-col\"\n                        data-name=\"wrapper-tabset\"\n                    >\n                        <slot name=\"tabset-navigation\" />\n                        <div class=\"flex w-full flex-col overflow-auto\">\n                            <slot name=\"tabset-content\" />\n                        </div>\n                    </div>\n                );\n            case 'content-container':\n                return (\n                    <div\n                        class=\"flex flex-grow justify-center py-64\"\n                        data-name=\"wrapper-content-container\"\n                    >\n                        <div class=\"flex max-w-3xl flex-grow flex-col\">\n                            <slot />\n                        </div>\n                    </div>\n                );\n        }\n    }\n\n    render() {\n        return <Host>{this.layoutElement}</Host>;\n    }\n}\n"]}