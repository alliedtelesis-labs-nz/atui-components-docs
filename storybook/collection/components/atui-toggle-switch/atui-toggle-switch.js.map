{"version":3,"file":"atui-toggle-switch.js","sourceRoot":"","sources":["../../../src/components/atui-toggle-switch/atui-toggle-switch.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Event, Component, EventEmitter, h, Prop, Host } from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nexport type LabelPosition = 'before' | 'after';\n\nconst variants = cva(\n    'group/switch flex w-fit cursor-pointer items-center gap-8 rounded-full rounded-md p-8 outline-none outline-0 outline-active hover:bg-surface-1 focus:bg-surface-1',\n    {\n        variants: {\n            disabled: {\n                false: null,\n                true: 'pointer-events-none opacity-50 grayscale-[1]',\n            },\n            labelPosition: {\n                before: 'flex-row',\n                after: 'flex-row-reverse',\n            },\n        },\n    },\n);\n\nconst trackVariants = cva(\n    'absolute bottom-0 left-0 right-0 top-0 flex h-[20px] w-[40px] items-center justify-center rounded-full align-middle [transition:0.2s]',\n    {\n        variants: {\n            disabled: {\n                false: 'shadow-inset-xs cursor-pointer',\n                true: 'shadow-inset-xs cursor-default',\n            },\n            active: {\n                false: 'border border-solid border-med bg-surface-2',\n                true: 'bg-active-foreground/30 group-focus-within/switch:ring-1 group-focus-within/switch:ring-active-foreground',\n            },\n        },\n    },\n);\n\nconst thumbVariants = cva(\n    'scale-1 material-icons absolute relative m-2 flex h-[16px] w-[16px] select-none items-center justify-center rounded-full text-center text-icon-md text-white ' +\n        'transition-all duration-300 ease-in-out',\n    {\n        variants: {\n            active: {\n                false: 'translate-x-[-10px] bg-disabled-dark',\n                true: 'translate-x-[10px] bg-active-foreground group-focus-within/switch:ring-[6px] group-focus-within/switch:ring-active-foreground/30',\n            },\n            disabled: {\n                false: 'cursor-pointer',\n                true: null,\n            },\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A toggle switch component for binary on/off selections. Provides accessible alternative to checkboxes with visual toggle behavior.\n */\n\n@Component({\n    tag: 'atui-toggle-switch',\n    shadow: false,\n})\nexport class AtuiToggleSwitchComponent {\n    /**\n     * Label displayed alongside the toggle.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Position of the label, left or right of the toggle.\n     */\n    @Prop()\n    label_position: LabelPosition = 'before';\n\n    /**\n     * Show the toggle label.\n     */\n    @Prop()\n    show_label?: boolean = true;\n\n    /**\n     * Disable interaction with the toggle.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Set the toggles state.\n     */\n    @Prop({ mutable: true })\n    value: boolean = false;\n\n    inputEl: HTMLInputElement;\n\n    private toggleId = `toggle-${Math.random().toString(36).substring(2, 11)}`;\n\n    /**\n     * Emits an event when toggled with `event.detail` being true if the switch is enabled\n     */\n    @Event()\n    atuiChange: EventEmitter<boolean>;\n\n    onToggle(change: boolean): void {\n        this.value = change;\n        this.atuiChange.emit(change);\n    }\n\n    render() {\n        const classname = variants({\n            disabled: this.disabled,\n            labelPosition: this.label_position,\n        });\n\n        const thumbClassname = thumbVariants({\n            active: this.value,\n            disabled: this.disabled,\n        });\n\n        const trackClassname = trackVariants({\n            active: this.value,\n            disabled: this.disabled,\n        });\n\n        return (\n            <Host\n                id={`${this.toggleId}-host`}\n                role=\"switch\"\n                aria-labelledby={`${this.toggleId}-label`}\n                class={classname}\n                tabIndex={0}\n                onClick={() => this.inputEl.click()}\n                onKeyDown={(event) => {\n                    if (event.key === ' ' || event.key === 'Enter') {\n                        event.preventDefault();\n                        this.inputEl.click();\n                    }\n                }}\n            >\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {!!this.label && this.show_label && (\n                        <atui-form-label\n                            label={this.label}\n                            class=\"pointer-events-none select-none\"\n                            for={this.toggleId}\n                            id={`${this.toggleId}-label`}\n                            data-name=\"switch-label\"\n                        ></atui-form-label>\n                    )}\n                    {this.hint_text && (\n                        <span\n                            class=\"inline-block text-xs leading-tight text-light\"\n                            data-name=\"select-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class=\"relative flex h-20 w-40\">\n                    <input\n                        id={this.toggleId}\n                        class=\"h-0 w-0 opacity-0\"\n                        disabled={this.disabled}\n                        type=\"checkbox\"\n                        checked={this.value}\n                        tabIndex={-1}\n                        onChange={(e) =>\n                            this.onToggle(\n                                (e.target as HTMLInputElement).checked,\n                            )\n                        }\n                        ref={(el) => (this.inputEl = el)}\n                        data-name=\"switch-input\"\n                    />\n                    <span class={trackClassname}>\n                        <span class={thumbClassname}>\n                            {this.value ? 'check' : 'remove'}\n                        </span>\n                    </span>\n                </div>\n            </Host>\n        );\n    }\n}\n"]}