{"version":3,"file":"at-input.js","sourceRoot":"","sources":["../../../src/components/at-input/at-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { classlist } from '../../utils/classlist';\n\nexport type InputType = 'text' | 'url' | 'email' | 'password';\n\nconst inputVariantsConfig = {\n    variants: {\n        disabled: {\n            false: 'focus-within:ring-active-foreground/30 bg-white',\n            true: 'bg-surface-1 !text-disabled pointer-events-none border-none',\n        },\n        readonly: {\n            false: 'focus-within:ring-active-foreground/30',\n            true: '!bg-surface-1 !text-dark cursor-text border-none',\n        },\n        invalid: {\n            false: 'border-med focus-within:border-active-dark focus-within:ring-active-foreground/30',\n            true: 'border-error-base focus-within:border-error-base focus-within:ring-destructive-foreground/30',\n        },\n    },\n    defaultVariants: {\n        disabled: false,\n        readonly: false,\n        invalid: false,\n    },\n};\n\n/**\n * @category Form Controls\n * @description A comprehensive text input component with label, validation, hints, and accessibility features. Supports multiple input types, clearable functionality, and integrates with form validation.\n */\n@Component({\n    tag: 'at-input',\n    shadow: false,\n})\nexport class AtInputComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Type of the input\n     */\n    @Prop()\n    type: InputType = 'text';\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string | number = '';\n\n    /**\n     * Adds a required * to the element\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Sets the 'autocomplete' attribute on the input element\n     */\n    @Prop()\n    autocomplete: string = 'on';\n\n    /**\n     * Makes the input read only\n     */\n    @Prop()\n    readonly: boolean;\n\n    /**\n     * Disables interaction with the input\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    /**\n     * Allows the input to be cleared with a 'x' at the end of the input element\n     */\n    @Prop()\n    clearable: boolean;\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    inputEl: HTMLInputElement;\n    @Element() el: HTMLAtInputElement;\n\n    /**\n     * Emits an event containing the text string or number when the input's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<string | number>;\n\n    private inputId = `input-${Math.random().toString(36).substring(2, 11)}`;\n\n    handleChange(event: Event): void {\n        event.stopPropagation();\n        this.value = (event.target as HTMLInputElement).value;\n        this.atuiChange.emit(this.value);\n    }\n\n    handleClear(): void {\n        this.inputEl.value = '';\n        this.value = '';\n        this.atuiChange.emit('');\n    }\n\n    render() {\n        const getClassname = classlist(\n            'placeholder-text-light pr -24 relative flex min-h-36 min-h-[36px] w-full flex-shrink flex-grow basis-0 gap-4 overflow-hidden rounded-md border border-solid overflow-ellipsis transition-colors duration-300 ease-in-out outline-none focus-within:ring-2 focus-within:outline-0',\n            inputVariantsConfig,\n        );\n\n        const classname = getClassname({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n        });\n\n        return (\n            <Host>\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <at-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"text-light mb-8 inline-block text-xs leading-tight\"\n                            data-name=\"input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class={classname}>\n                    <input\n                        class=\"flex w-full py-8 pl-8 outline-0\"\n                        id={this.inputId}\n                        readonly={this.readonly ? true : undefined}\n                        disabled={this.disabled ? true : undefined}\n                        required={this.required}\n                        type={this.type}\n                        placeholder={`${this.placeholder}`}\n                        autocomplete={this.autocomplete}\n                        autocapitalize=\"none\"\n                        onInput={(event) => this.handleChange(event)}\n                        onChange={(event) => this.handleChange(event)}\n                        value={this.value}\n                        ref={(el) => (this.inputEl = el)}\n                        data-name=\"input\"\n                    />\n\n                    <div class=\"flex items-center py-4 pr-4\">\n                        <slot name=\"input-actions\" />\n\n                        {this.clearable &&\n                            !this.readonly &&\n                            !this.disabled &&\n                            this.value && (\n                                <at-button\n                                    class={`transition-all duration-300 ease-in-out ${\n                                        this.clearable &&\n                                        !this.readonly &&\n                                        !this.disabled &&\n                                        this.value\n                                            ? 'pointer-events-auto scale-100 opacity-100'\n                                            : 'pointer-events-none scale-90 opacity-0'\n                                    }`}\n                                    size=\"sm\"\n                                    icon=\"cancel\"\n                                    type=\"secondaryText\"\n                                    onClick={(event) => {\n                                        event.stopPropagation();\n                                        this.handleClear();\n                                    }}\n                                    data-name=\"input-clear\"\n                                />\n                            )}\n                    </div>\n                </div>\n\n                {this.error_text && this.invalid && (\n                    <span\n                        class=\"text-error text-sm\"\n                        data-name=\"input-error\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"]}