{"version":3,"file":"atui-prompt-message.js","sourceRoot":"","sources":["../../../../src/components/prompt-components/atui-prompt-message/atui-prompt-message.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Host,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Fragment,\n    State,\n    Element,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\nimport { MessageRole } from '../../../types';\nimport { fetchTranslations } from '../../../utils/translation';\n\n// Add vote status enum to match Angular implementation\nexport enum VoteStatus {\n    None = 0,\n    Up = 1,\n    Down = -1,\n}\n\nconst messageVariants = cva('rounded-lg py-4 text-base', {\n    variants: {\n        role: {\n            user: 'bg-surface-2 text-dark ml-auto inline-block p-8',\n            assistant: 'text-dark mr-auto',\n        },\n        loading: {\n            true: 'animate-pulse',\n            false: '',\n        },\n    },\n    defaultVariants: {\n        role: 'user',\n        loading: false,\n    },\n});\n\n/**\n * @category Prompt\n * @description A message component for displaying individual chat messages with different roles (user, assistant). Supports optional avatars, loading states, error states, and interactive actions like copy, edit, and retry.\n * @slot - Custom message content (alternative to using the content prop)\n */\n@Component({\n    tag: 'atui-prompt-message',\n    shadow: false,\n})\nexport class AtuiPromptMessage {\n    /**\n     * The role/type of the message sender (only 'user' and 'assistant' are supported)\n     */\n    @Prop() role: Exclude<MessageRole, 'system'> = 'user';\n\n    /**\n     * The message content text\n     */\n    @Prop() content: string = '';\n\n    /**\n     * Display name for the message sender\n     */\n    @Prop() name: string;\n\n    /**\n     * Shows loading state with animated placeholder content\n     */\n    @Prop() loading: boolean = false;\n\n    /**\n     * Shows error state styling and enables retry action\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Custom error message text (defaults to generic error message)\n     */\n    @Prop() error_message: string;\n\n    /**\n     * The current vote status of the message\n     */\n    @Prop() vote_status: VoteStatus = VoteStatus.None;\n\n    /**\n     * Display voting actions for assistant messages\n     */\n    @Prop() enable_vote: boolean = false;\n\n    /**\n     * Display copy action for assistant messages - copies message content to clipboard\n     */\n    @Prop() enable_copy: boolean = false;\n\n    /**\n     * Display edit action for user messages\n     */\n    @Prop() enable_edit: boolean = false;\n\n    /**\n     * Unique identifier for the message\n     */\n    @Prop() message_id: string;\n\n    /**\n     * Emitted when the copy action is triggered\n     */\n    @Event() atuiCopy: EventEmitter<string>;\n\n    /**\n     * Emitted when a vote action is triggered\n     */\n    @Event() atuiVote: EventEmitter<{ messageId: string; score: number }>;\n\n    /**\n     * Emitted when the retry action is triggered (for assistant messages with errors)\n     */\n    @Event() atuiRetry: EventEmitter<void>;\n\n    /**\n     * Emitted when the edit action is triggered (for user messages)\n     */\n    @Event() atuiEdit: EventEmitter<string>;\n\n    @State() translations: any;\n    @State() copyFeedbackVisible: boolean = false;\n    errorEl: HTMLDivElement;\n    @Element() el: HTMLAtuiInputElement;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    private handleCopy = async () => {\n        try {\n            await navigator.clipboard.writeText(this.content);\n            this.copyFeedbackVisible = true;\n            this.atuiCopy.emit(this.content);\n\n            setTimeout(() => {\n                this.copyFeedbackVisible = false;\n            }, 2000);\n        } catch (err) {\n            console.error('Failed to copy text:', err);\n        }\n    };\n\n    private handleRetry = () => {\n        this.atuiRetry.emit();\n    };\n\n    private handleEdit = () => {\n        this.atuiEdit.emit(this.content);\n    };\n\n    private handleVote = (score: number) => {\n        const newScore = this.vote_status === score ? VoteStatus.None : score;\n        this.atuiVote.emit({ messageId: this.message_id, score: newScore });\n    };\n\n    private renderActions() {\n        if (this.loading) return null;\n\n        return (\n            <div\n                class=\"mt-2 flex items-center justify-end gap-2\"\n                data-name=\"message-actions\"\n            >\n                {this.role === 'user' && this.enable_edit && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"edit\"\n                            class=\"text-xs\"\n                            onClick={this.handleEdit}\n                            data-name=\"edit-button\"\n                        />\n                        <span>\n                            {this.translations?.ATUI?.PROMPT?.EDIT || 'Edit'}\n                        </span>\n                    </atui-tooltip>\n                )}\n\n                {this.role === 'assistant' && this.enable_vote && (\n                    <Fragment>\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                onClick={() => this.handleVote(VoteStatus.Up)}\n                                data-name=\"vote-up-button\"\n                            >\n                                {this.vote_status === VoteStatus.Up ? (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        height=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        width=\"15px\"\n                                        fill=\"#000000\"\n                                    >\n                                        <path d=\"M720-144H264v-480l288-288 32 22q18 13 26.5 33t3.5 41l-38 192h264q30 0 51 21t21 51v57q0 8-1.5 14.5T906-467L787-188q-9 20-27 32t-40 12Z\" />\n                                    </svg>\n                                ) : (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        height=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        width=\"15px\"\n                                        fill=\"#adb5bd\" // token-border-dark\n                                    >\n                                        <path d=\"M720-144H264v-480l288-288 32 22q17 12 26 30.5t5 38.5l-1 5-38 192h264q30 0 51 21t21 51v57q0 8-1.5 14.5T906-467L786.93-187.8Q778-168 760-156t-40 12Zm-384-72h384l120-279v-57H488l49-243-201 201v378Zm0-378v378-378Z\" />\n                                    </svg>\n                                )}\n                            </atui-button>\n                            <span>\n                                {this.translations?.ATUI?.PROMPT?.HELPFUL ||\n                                    'Helpful'}\n                            </span>\n                        </atui-tooltip>\n\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                onClick={() => this.handleVote(VoteStatus.Down)}\n                                data-name=\"vote-down-button\"\n                            >\n                                {this.vote_status === VoteStatus.Down ? (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        height=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        width=\"15px\"\n                                        fill=\"#000000\"\n                                    >\n                                        <path d=\"M240-816h456v480L408-48l-32-22q-18-13-26.5-33t-3.5-41l38-192H120q-30 0-51-21t-21-51v-57q0-8 1.5-14.5T54-493l119-279q8-20 26.5-32t40.5-12Z\" />\n                                    </svg>\n                                ) : (\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width=\"15px\"\n                                        viewBox=\"0 -960 960 960\"\n                                        height=\"15px\"\n                                        fill=\"#adb5bd\" // token-border-dark\n                                    >\n                                        <path d=\"M240-816h456v480L408-48l-32-22q-17-12-26-30.5t-5-38.5l1-5 38-192H120q-30 0-51-21t-21-51v-57q0-8 1.5-14.5T54-493l119-279q8-20 26.5-32t40.5-12Zm384 72H240L120-465v57h352l-49 243 201-201v-378Zm0 378v-378 378Z\" />\n                                    </svg>\n                                )}\n                            </atui-button>\n                            <span>\n                                {this.translations?.ATUI?.PROMPT?.NOT_HELPFUL ||\n                                    'Not Helpful'}\n                            </span>\n                        </atui-tooltip>\n                    </Fragment>\n                )}\n\n                {this.role === 'assistant' && this.enable_copy && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            icon={\n                                this.copyFeedbackVisible\n                                    ? 'check'\n                                    : 'content_copy'\n                            }\n                            type=\"secondaryText\"\n                            onClick={this.handleCopy}\n                            data-name=\"copy-button\"\n                        />\n                        <span>\n                            {this.copyFeedbackVisible\n                                ? this.translations?.ATUI?.PROMPT?.COPIED ||\n                                  'Copied'\n                                : this.translations?.ATUI?.PROMPT?.COPY ||\n                                  'Copy'}\n                        </span>\n                    </atui-tooltip>\n                )}\n\n                {this.role === 'assistant' && this.error && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"refresh\"\n                            onClick={this.handleRetry}\n                            data-name=\"retry-button\"\n                        />\n                        <span>\n                            {this.translations?.ATUI?.PROMPT?.RETRY || 'Retry'}\n                        </span>\n                    </atui-tooltip>\n                )}\n            </div>\n        );\n    }\n\n    private renderContent() {\n        if (this.loading) {\n            return (\n                <div\n                    class=\"py-8\"\n                    data-name=\"loading-wrapper\"\n                >\n                    <atui-loading\n                        class=\"flex items-center gap-4 py-8\"\n                        data-name=\"loading-content\"\n                        variant=\"typing\"\n                        size=\"sm\"\n                    />\n                </div>\n            );\n        }\n\n        if (this.error) {\n            return (\n                <div\n                    class=\"space-y-2\"\n                    ref={(el) => (this.errorEl = el)}\n                    data-name=\"error-content\"\n                >\n                    <p class=\"text-destructive-foreground\">\n                        {this.error_message ||\n                            this.translations?.ATUI?.PROMPT\n                                ?.ERROR_GENERATING_RESPONSE ||\n                            'Error generating response'}\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                class=\"prose prose-sm preserve-newlines max-w-none\"\n                data-name=\"message-content\"\n            >\n                <slot></slot>\n                {this.content}\n            </div>\n        );\n    }\n\n    render() {\n        const messageClasses = messageVariants({\n            role: this.role,\n            loading: this.loading,\n        });\n\n        return (\n            <Host\n                class=\"flex w-full gap-8\"\n                data-name=\"message-container\"\n                data-role={this.role}\n            >\n                <div class=\"flex flex-1 flex-col\">\n                    {this.name && (\n                        <span\n                            class=\"text-light self-start text-sm\"\n                            data-name=\"message-name\"\n                        >\n                            {this.name}\n                        </span>\n                    )}\n\n                    <div class={messageClasses}>{this.renderContent()}</div>\n\n                    {this.renderActions()}\n                </div>\n            </Host>\n        );\n    }\n}\n"]}