{"version":3,"file":"at-prompt-message.stories.js","sourceRoot":"","sources":["../../../../src/components/prompt-components/at-prompt-message/at-prompt-message.stories.ts"],"names":[],"mappings":"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","sourcesContent":["const Template = (args) => `\n<at-prompt-message\n    role=\"${args.role ?? ''}\"\n    content=\"${args.content ?? ''}\"\n    name=\"${args.name ?? ''}\"\n    avatar=\"${args.avatar ?? ''}\"\n    timestamp=\"${args.timestamp ?? ''}\"\n    error_message=\"${args.error_message ?? ''}\"\n    animate=\"${args.animate ?? ''}\"\n    ${args.loading ? 'loading' : ''}\n    ${args.error ? 'error' : ''}\n></at-prompt-message>\n`;\n\nexport default {\n    title: 'Components/Prompt/Message',\n    argTypes: {\n        role: {\n            control: 'select',\n            options: ['user', 'assistant', 'system'],\n            description: 'Message role/sender',\n        },\n        content: {\n            control: 'text',\n            description: 'Message content',\n        },\n        name: {\n            control: 'text',\n            description: 'Sender name',\n        },\n        avatar: {\n            control: 'text',\n            description: 'Avatar image URL',\n        },\n        timestamp: {\n            control: 'text',\n            description: 'Message timestamp',\n        },\n        loading: {\n            control: 'boolean',\n            description: 'Loading state',\n        },\n        error: {\n            control: 'boolean',\n            description: 'Error state',\n        },\n        error_message: {\n            control: 'text',\n            description: 'Error message text',\n        },\n        animate: {\n            control: 'select',\n            options: ['none', 'fade', 'words'],\n            description: 'Animation type for text streaming',\n        },\n    },\n};\n\nexport const UserMessage = Template.bind({});\nUserMessage.args = {\n    role: 'user',\n    content: 'Hello! Can you help me understand how this component works?',\n    name: 'John Doe',\n    timestamp: '2:30 PM',\n};\n\nexport const AssistantMessage = Template.bind({});\nAssistantMessage.args = {\n    role: 'assistant',\n    content:\n        'Of course! This component is designed to display chat messages in different styles based on the sender role. It supports user messages, assistant responses, and system notifications.',\n    name: 'AI Assistant',\n    timestamp: '2:31 PM',\n};\n\nexport const LoadingMessage = Template.bind({});\nLoadingMessage.args = {\n    role: 'assistant',\n    name: 'AI Assistant',\n    loading: true,\n};\n\nexport const ErrorMessage = Template.bind({});\nErrorMessage.args = {\n    role: 'assistant',\n    name: 'AI Assistant',\n    error: true,\n    error_message: 'Failed to generate response. Please try again.',\n    timestamp: '2:35 PM',\n};\n\nexport const AnimatedWords = Template.bind({});\nAnimatedWords.args = {\n    role: 'assistant',\n    content:\n        'This message will animate word by word like ChatGPT responses, creating a streaming effect that makes the conversation feel more dynamic and engaging.',\n    name: 'AI Assistant',\n    timestamp: '2:35 PM',\n    animate: 'words',\n};\n\nconst WithSlotContentTemplate = (args) => `\n<at-prompt-message\n    role=\"${args.role ?? ''}\"\n    name=\"${args.name ?? ''}\"\n    avatar=\"${args.avatar ?? ''}\"\n    timestamp=\"${args.timestamp ?? ''}\"\n    ${args.loading ? 'loading' : ''}\n    ${args.error ? 'error' : ''}\n    error_message=\"${args.error_message ?? ''}\"\n>\n    <div>\n        <p><strong>Here's a complex response with custom HTML:</strong></p>\n        <ul>\n            <li>List item 1</li>\n            <li>List item 2</li>\n            <li>List item 3</li>\n        </ul>\n        <p>You can include any custom content in the slot.</p>\n    </div>\n</at-prompt-message>\n`;\n\nexport const WithSlotContent = WithSlotContentTemplate.bind({});\nWithSlotContent.args = {\n    role: 'assistant',\n    name: 'AI Assistant',\n    timestamp: '2:33 PM',\n};\n\nconst ConversationTemplate = () => `\n<div class=\"max-w-4xl space-y-4\">\n    <at-prompt-message\n        role=\"user\"\n        content=\"Hello! How are you today?\"\n        name=\"User\"\n        timestamp=\"2:30 PM\"\n    ></at-prompt-message>\n    <at-prompt-message\n        role=\"assistant\"\n        content=\"Hello! I'm doing well, thank you for asking. How can I help you today?\"\n        name=\"AI Assistant\"\n        timestamp=\"2:30 PM\"\n    ></at-prompt-message>\n    <at-prompt-message\n        role=\"user\"\n        content=\"Can you explain how machine learning works?\"\n        name=\"User\"\n        timestamp=\"2:31 PM\"\n    ></at-prompt-message>\n    <at-prompt-message\n        role=\"assistant\"\n        loading\n        name=\"AI Assistant\"\n    ></at-prompt-message>\n</div>\n`;\n\nexport const Conversation = ConversationTemplate.bind({});\n"]}