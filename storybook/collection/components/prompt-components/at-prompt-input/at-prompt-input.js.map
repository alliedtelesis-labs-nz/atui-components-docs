{"version":3,"file":"at-prompt-input.js","sourceRoot":"","sources":["../../../../src/components/prompt-components/at-prompt-input/at-prompt-input.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    State,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../../utils/translation';\nimport { classlist } from '../../../utils/classlist';\n\nconst promptInputContainerVariants = classlist(\n    'relative flex flex-col items-end gap-2 rounded-lg border border-solid p-8 transition-[background-color,color,box-shadow] duration-300 ease-in-out',\n    {\n        variants: {\n            invalid: {\n                true: 'border-destructive focus-within:border-destructive focus-within:ring-destructive/30 focus-within:ring-2',\n                false: 'border-med focus-within:border-active-foreground focus-within:ring-active-foreground/30 focus-within:ring-2',\n            },\n            disabled: {\n                true: 'bg-surface-1 pointer-events-none',\n                false: 'bg-white',\n            },\n        },\n        compoundVariants: [\n            {\n                disabled: true,\n                class: 'focus-within:ring-0',\n            },\n        ],\n        defaultVariants: {\n            invalid: false,\n            disabled: false,\n        },\n    },\n);\n\nconst promptInputVariants = classlist(\n    'text-body text-dark w-full resize-none border-none bg-transparent break-words whitespace-pre-wrap shadow-none outline-none focus-visible:ring-0 focus-visible:ring-offset-0',\n    {\n        variants: {\n            invalid: {\n                true: 'border-destructive-foreground',\n                false: 'border-med',\n            },\n            disabled: {\n                true: 'bg-surface-1 pointer-events-none',\n                false: 'bg-disableD-LIGHT',\n            },\n        },\n        defaultVariants: {\n            invalid: false,\n            disabled: false,\n        },\n    },\n);\n\n/**\n * @category Prompt\n * @description A specialized input component optimized for AI prompt-components interfaces. Supports both single-line and multi-line variants with auto-resize, character counting, send/stop functionality, and enhanced UX for conversational interfaces.\n * @slot label -  Custom label content (alternative to using the label prop)\n * @slot actions-left - Custom content displayed at bottom left of input\n * @slot actions-right - Custom content displayed at bottom right of input\n * @slot footer - Custom content displayed below input\n */\n@Component({\n    tag: 'at-prompt-input',\n    shadow: false,\n})\nexport class AtPromptInputComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set via max length\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string = 'Enter your message...';\n\n    /**\n     * Maximum height in pixels for auto-resize\n     */\n    @Prop()\n    max_height: number = 240;\n\n    /**\n     * Maximum character length with counter display\n     */\n    @Prop()\n    max_length: number = 2000;\n\n    /**\n     * Controls whether the component is in progress (shows stop button) or ready to send (shows send button)\n     */\n    @Prop()\n    in_progress: boolean = false;\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: string = '';\n\n    /**\n     * Disable input interactions and apply visual indication\n     */\n    @Prop()\n    disabled?: boolean = false;\n\n    @State() textareaEl: HTMLTextAreaElement;\n    @State() translations: any;\n    @State() invalid: boolean = false;\n    @Element() el: HTMLElement;\n\n    /**\n     * Emits when the value changes\n     */\n    @Event()\n    atChange: EventEmitter<string>;\n\n    /**\n     * Emits when a message should be sent\n     */\n    @Event()\n    atSubmit: EventEmitter<string>;\n\n    /**\n     * Emits when the stop button is clicked\n     */\n    @Event()\n    atStop: EventEmitter<void>;\n\n    /**\n     * Emits when the input receives focus\n     */\n    @Event()\n    atFocus: EventEmitter<void>;\n\n    /**\n     * @slot label - Custom label content (alternative to using the label prop)\n     */\n\n    private inputId = `prompt-input-${Math.random().toString(36).substring(2, 11)}`;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    private focusInput(): void {\n        if (this.textareaEl) {\n            this.textareaEl.focus();\n            this.atFocus.emit();\n        }\n    }\n\n    handleInput(event: Event): void {\n        event.stopPropagation();\n        this.value = (event.target as HTMLTextAreaElement).value;\n\n        if (this.max_length && this.value.length > this.max_length) {\n            this.invalid = true;\n        } else {\n            this.invalid = false;\n        }\n\n        this.atChange.emit(this.value);\n        this.autoResize();\n    }\n\n    private autoResize(): void {\n        if (this.textareaEl) {\n            this.textareaEl.style.height = 'auto';\n            const scrollHeight = this.textareaEl.scrollHeight;\n            const newHeight = Math.max(\n                44,\n                Math.min(scrollHeight, this.max_height),\n            );\n            this.textareaEl.style.height = `${newHeight}px`;\n        }\n    }\n\n    componentDidLoad(): void {\n        setTimeout(() => {\n            this.autoResize();\n        }, 0);\n    }\n\n    handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === 'Enter' && !event.shiftKey) {\n            event.preventDefault();\n            this.sendMessage();\n        }\n    }\n\n    sendMessage(): void {\n        if (this.in_progress) {\n            this.atStop.emit();\n        } else if (this.value && this.value.trim() !== '' && !this.invalid) {\n            this.atSubmit.emit(this.value.trim());\n            this.value = '';\n            this.invalid = false;\n            setTimeout(() => {\n                this.autoResize();\n                this.focusInput();\n            }, 0);\n        }\n    }\n\n    render() {\n        const canSend =\n            !this.disabled &&\n            !this.invalid &&\n            (this.in_progress || (this.value && this.value.trim() !== ''));\n\n        const containerClass = promptInputContainerVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n        });\n\n        const inputClass = promptInputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n        });\n        return (\n            <Host\n                id={this.inputId + '-container'}\n                class=\"w-full px-16\"\n            >\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.info_text) && (\n                        <at-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            info_text={this.info_text}\n                            data-name=\"prompt-input-label\"\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"text-light mb-8 inline-block text-xs leading-tight\"\n                            data-name=\"prompt-input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class={containerClass}>\n                    <textarea\n                        class={inputClass}\n                        disabled={this.disabled}\n                        id={this.inputId}\n                        placeholder={this.placeholder}\n                        onInput={(event) => this.handleInput(event)}\n                        onKeyDown={(event) => this.handleKeyDown(event)}\n                        value={this.value}\n                        ref={(el) => (this.textareaEl = el)}\n                        style={{\n                            minHeight: '44px',\n                            maxHeight: this.max_height + 'px',\n                            overflow: 'auto',\n                        }}\n                        data-name=\"prompt-input\"\n                    />\n\n                    <div class=\"flex w-full items-center justify-between gap-1\">\n                        <div class=\"flex items-center gap-4\">\n                            <slot name=\"actions-left\" />\n                        </div>\n\n                        <div class=\"flex items-center gap-4 self-end\">\n                            <slot name=\"actions-right\" />\n                            <at-button\n                                class=\"rounded-lg\"\n                                size=\"sm\"\n                                type=\"secondary\"\n                                icon={\n                                    this.in_progress ? 'stop' : 'arrow_upward'\n                                }\n                                disabled={!canSend}\n                                onClick={() => this.sendMessage()}\n                                onKeyDown={(event) => {\n                                    if (\n                                        event.key === 'Enter' ||\n                                        event.key === ' '\n                                    ) {\n                                        this.sendMessage();\n                                    }\n                                }}\n                                data-name=\"prompt-send-button\"\n                            />\n                        </div>\n                    </div>\n                </div>\n                <slot name=\"footer\" />\n                {this.invalid && (\n                    <span\n                        class=\"text-error-dark text-xs\"\n                        data-name=\"error-text\"\n                    >\n                        {this.error_text\n                            ? this.error_text\n                            : this.translations.ATUI.PROMPT.ERROR_MESSAGE}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"]}