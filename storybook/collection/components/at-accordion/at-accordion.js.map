{"version":3,"file":"at-accordion.js","sourceRoot":"","sources":["../../../src/components/at-accordion/at-accordion.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AAQ1E;;;;;GAKG;AAEH;;;;;;;;;;;GAWG;AAKH,MAAM,OAAO,oBAAoB;IAJjC;QAOI;;WAEG;QACK,UAAK,GAAoB,EAAE,CAAC;QAEpC;;WAEG;QACK,iBAAY,GAAY,KAAK,CAAC;QAEtC,mBAAc,GAAiC,EAAE,CAAC;QA0E1C,gBAAW,GAAG,aAAa,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;KAmBpF;IA3FG,KAAK,CAAC,gBAAgB;QAClB,wCAAwC;QACxC,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAC5B,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAChD,CAAC;QACF,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,MAAM,IAAI,CAAC,OAAO,EAAE,CAAC;QACzB,CAAC;IACL,CAAC;IAED;;;OAGG;IAEH,KAAK,CAAC,UAAU,CAAC,KAAa;QAC1B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE,CAAC;gBACzB,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;gBAC1B,CAAC;qBAAM,CAAC;oBACJ,IAAI,CAAC,aAAa,EAAE,CAAC;gBACzB,CAAC;YACL,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IAEH,KAAK,CAAC,OAAO;QACT,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACjC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IAEH,KAAK,CAAC,QAAQ;QACV,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACjC,IAAI,CAAC,cAAc,EAAE,CAAC;QAC1B,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IAEH,KAAK,CAAC,SAAS;QACX,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACjC,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,IAAI,CAAC,cAAc,EAAE,CAAC;YAC1B,CAAC;iBAAM,CAAC;gBACJ,IAAI,CAAC,aAAa,EAAE,CAAC;YACzB,CAAC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAEO,qBAAqB;QACzB,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,IAAI,CAC5B,IAAI,CAAC,EAAE,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,CAChD,CAAC;IACN,CAAC;IAID,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,qBAAqB;YAC7B,8DAAa;YACZ,IAAI,CAAC,KAAK;gBACP,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE;oBACpB,OAAO,CACH,yBACI,OAAO,EAAE,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,EAAE,EAC9C,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,IAAI,CAAC,OAAO,GACvB,CACL,CAAC;gBACN,CAAC,CAAC,CACH,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Prop, Element, Method, h, Host, Component } from '@stencil/core';\n\nexport interface AccordionItem {\n    item_id: string;\n    label?: string;\n    content?: string;\n}\n\n/**\n * @category Layout\n * @description A collapsible content container component that allows users to show/hide sections of content. Supports multiple panels, animations, and programmatic control of expanded states.\n *\n * @slot - Content is placed within the accordion wrapper. Used for placing atui-accordion-items if not using items prop.\n */\n\n/**\n * ### ```interface AccordionItem```\n * ```\n * item_id: string;\n * label: string;\n * content: string;\n * ```\n * @category Layout\n * @description A collapsible content container component that allows users to show/hide sections of content. Supports multiple panels, animations, and programmatic control of expanded states.\n *\n * @slot - Content is placed within the accordion wrapper. Used for placing atui-accordion-items if not using items prop.\n */\n@Component({\n    tag: 'at-accordion',\n    shadow: false,\n})\nexport class AtAccordionComponent {\n    @Element() el: HTMLElement;\n\n    /**\n     * Used to create accordion items.\n     */\n    @Prop() items: AccordionItem[] = [];\n\n    /**\n     * If set, all child accordions will be open by default.\n     */\n    @Prop() default_open: boolean = false;\n\n    accordionItems: HTMLAtAccordionItemElement[] = [];\n\n    async componentDidLoad() {\n        // Wait for child components to be ready\n        await new Promise((resolve) => setTimeout(resolve, 0));\n        this.accordionItems = Array.from(\n            this.el.querySelectorAll('at-accordion-item'),\n        );\n        if (this.default_open) {\n            await this.openAll();\n        }\n    }\n\n    /**\n     * Toggles the open state of a specific accordion item\n     * @param value Id of element to be toggled\n     */\n    @Method()\n    async toggleById(value: string): Promise<void> {\n        this.refreshAccordionItems();\n        this.accordionItems.forEach((item) => {\n            if (item.item_id === value) {\n                if (item.open) {\n                    item.closeAccordion();\n                } else {\n                    item.openAccordion();\n                }\n            }\n        });\n    }\n\n    /**\n     * Opens all accordion items\n     */\n    @Method()\n    async openAll(): Promise<void> {\n        this.refreshAccordionItems();\n        this.accordionItems.forEach((item) => {\n            item.openAccordion();\n        });\n    }\n\n    /**\n     * Closes all accordion items.\n     */\n    @Method()\n    async closeAll(): Promise<void> {\n        this.refreshAccordionItems();\n        this.accordionItems.forEach((item) => {\n            item.closeAccordion();\n        });\n    }\n\n    /**\n     * Toggles all accordion item's open state.\n     */\n    @Method()\n    async toggleAll(): Promise<void> {\n        this.refreshAccordionItems();\n        this.accordionItems.forEach((item) => {\n            if (item.open) {\n                item.closeAccordion();\n            } else {\n                item.openAccordion();\n            }\n        });\n    }\n\n    private refreshAccordionItems(): void {\n        this.accordionItems = Array.from(\n            this.el.querySelectorAll('at-accordion-item'),\n        );\n    }\n\n    private accordionId = `accordion-${Math.random().toString(36).substring(2, 11)}`;\n\n    render() {\n        return (\n            <Host class=\"flex flex-col gap-2\">\n                <slot></slot>\n                {this.items &&\n                    this.items.map((item) => {\n                        return (\n                            <at-accordion-item\n                                item_id={`${this.accordionId}-${item.item_id}`}\n                                label={item.label}\n                                content={item.content}\n                            />\n                        );\n                    })}\n            </Host>\n        );\n    }\n}\n"]}