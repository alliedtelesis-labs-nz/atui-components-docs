{"version":3,"file":"atui-menu-item.js","sourceRoot":"","sources":["../../../../src/components/atui-menu/atui-menu-item/atui-menu-item.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AAErD,MAAM,cAAc,GAAG;IACnB,QAAQ,EAAE;QACN,QAAQ,EAAE;YACN,IAAI,EAAE,8CAA8C;YACpD,KAAK,EAAE,IAAI;SACd;QACD,MAAM,EAAE;YACJ,IAAI,EAAE,qCAAqC;YAC3C,KAAK,EAAE,oBAAoB;SAC9B;KACJ;CACJ,CAAC;AAKF,MAAM,OAAO,qBAAqB;IAHlC;QAcI;;WAEG;QACK,cAAS,GAAa,KAAK,CAAC;QAEpC;;WAEG;QAEH,aAAQ,GAAY,KAAK,CAAC;KA6C7B;IA3CG,MAAM;QACF,MAAM,YAAY,GAAG,SAAS,CAC1B,8SAA8S,EAC9S,cAAc,CACjB,CAAC;QAEF,MAAM,SAAS,GAAG,YAAY,CAAC;YAC3B,MAAM,EAAE,IAAI,CAAC,SAAS;YACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SAC1B,CAAC,CAAC;QAEH,OAAO,CACH,EAAC,IAAI,qDACD,IAAI,EAAC,UAAU,EACf,QAAQ,EAAC,GAAG,EACZ,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE,CAAC,CAAQ,EAAE,EAAE;gBAClB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,CAAC,CAAC,cAAc,EAAE,CAAC;oBACnB,CAAC,CAAC,eAAe,EAAE,CAAC;gBACxB,CAAC;YACL,CAAC;YAEA,IAAI,CAAC,IAAI,IAAI,CACV,0EACc,gBAAgB,EAC1B,KAAK,EAAC,8DAA8D,IAEnE,IAAI,CAAC,IAAI,CACP,CACV;YACA,IAAI,CAAC,KAAK,IAAI,CACX,0EACc,iBAAiB,EAC3B,KAAK,EAAC,gFAAgF,IAErF,IAAI,CAAC,KAAK,CACR,CACV;YACD,8DAAQ,CACL,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, Prop, h, Host } from '@stencil/core';\nimport { classlist } from '../../../utils/classlist';\n\nconst variantsConfig = {\n    variants: {\n        disabled: {\n            true: 'pointer-events-none opacity-30 grayscale-[1]',\n            false: null,\n        },\n        active: {\n            true: 'bg-active-foreground/15 text-active',\n            false: 'hover:bg-surface-1',\n        },\n    },\n};\n\n@Component({\n    tag: 'atui-menu-item',\n})\nexport class AtuiMenuitemComponent {\n    /**\n     * Label to be displayed for the menu item\n     */\n    @Prop() label?: string;\n\n    /**\n     * Icon to be displayed with the label\n     */\n    @Prop() icon?: string;\n\n    /**\n     * Will change the styling of the menuitem when set\n     */\n    @Prop() is_active?: boolean = false;\n\n    /**\n     * Disables user interaction with the menu-item and updates visual style to appear inactive\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    render() {\n        const getClassname = classlist(\n            'text-body focus-visible:ring-active-foreground/40 relative flex w-full cursor-pointer items-center gap-8 truncate overflow-hidden rounded-md p-8 text-left font-normal transition-[background-color,color,box-shadow] duration-150 ease-in-out focus:outline-0 focus-visible:ring-2 focus-visible:ring-inset',\n            variantsConfig,\n        );\n\n        const classname = getClassname({\n            active: this.is_active,\n            disabled: this.disabled,\n        });\n\n        return (\n            <Host\n                role=\"menuitem\"\n                tabindex=\"0\"\n                class={classname}\n                onClick={(e: Event) => {\n                    if (this.disabled) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }}\n            >\n                {this.icon && (\n                    <span\n                        data-name=\"menu-item-icon\"\n                        class=\"material-icons text-icon-lg flex items-center justify-center\"\n                    >\n                        {this.icon}\n                    </span>\n                )}\n                {this.label && (\n                    <span\n                        data-name=\"menu-item-label\"\n                        class=\"truncate whitespace-nowrap group-data-[state=collapsed]/sidebar-wrapper:hidden\"\n                    >\n                        {this.label}\n                    </span>\n                )}\n                <slot />\n            </Host>\n        );\n    }\n}\n"]}