{"version":3,"file":"at-tab-selector.js","sourceRoot":"","sources":["../../../src/components/at-tab-selector/at-tab-selector.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n    Event,\n    Method,\n    Element,\n    Watch,\n} from '@stencil/core';\n\nexport interface Tab {\n    id: string;\n    title: string;\n}\n\nexport type Layout = 'vertical' | 'horizontal';\n\n/**\n * ### interface Tab\n * ```\n * {\n *   id: string;\n *   title: string;\n * }\n * ```\n * @category Navigation\n * @description A tab selector component for switching between different content sections. Provides keyboard navigation and accessible tab panel management.\n *\n * @slot nav-content - Content to be placed after the tabs\n */\n@Component({\n    tag: 'at-tab-selector',\n    shadow: false,\n})\nexport class AtTabSelector {\n    @Element() el: HTMLElement;\n\n    /**\n     * List of tabs the selector will have\n     */\n    @Prop()\n    tabs: Tab[] = [];\n\n    /**\n     * Layout of the tabs\n     */\n    @Prop()\n    layout: Layout = 'horizontal';\n\n    /**\n     * hide navigation when you want to provide custom controls\n     */\n    @Prop()\n    hide_nav: boolean = false;\n\n    /**\n     * Sets the current active tab\n     */\n    @Prop({ mutable: true })\n    active_tab?: string;\n\n    /**\n     * Emits the id of the tab when a new active_tab is set\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    componentDidLoad() {\n        this.updateIndicatorPosition();\n    }\n\n    componentDidUpdate() {\n        this.updateIndicatorPosition();\n    }\n\n    @Watch('active_tab')\n    handleActiveTabChange(newValue: string) {\n        const activeTab = this.tabs.find((tab) => tab.id === newValue);\n        if (activeTab) {\n            this.atuiChange.emit(activeTab.id);\n            requestAnimationFrame(() => {\n                this.updateIndicatorPosition();\n            });\n        }\n    }\n\n    private tabsetId = `tabset-${Math.random().toString(36).substring(2, 11)}`;\n\n    private get indicatorRef(): HTMLElement {\n        return this.el.querySelector(`#indicator-${this.tabsetId}`);\n    }\n\n    private get containerRef(): HTMLElement {\n        return this.el.querySelector(`#container-${this.tabsetId}`);\n    }\n\n    handleTabChange(id: string): void {\n        this.active_tab = id;\n    }\n\n    /**\n     * Gets the current active tab\n     * @returns The current active_tab value\n     */\n    @Method()\n    async getActiveTab(): Promise<string> {\n        return this.active_tab;\n    }\n\n    /**\n     * Sets the current active tab\n     * @param value - The tab id to set as active\n     */\n    @Method()\n    async setActiveTab(value: string): Promise<void> {\n        this.active_tab = value;\n    }\n\n    get tabOptions(): any {\n        if (this.tabs) {\n            return this.tabs.map((tab) => (\n                <at-tab\n                    tab_id={tab.id}\n                    tab_title={tab.title}\n                    layout={this.layout}\n                    is_active={this.active_tab === tab.id}\n                    onClick={() => this.handleTabChange(tab.id)}\n                ></at-tab>\n            ));\n        }\n    }\n\n    private updateIndicatorPosition() {\n        if (!this.indicatorRef || !this.containerRef) return;\n\n        const activeTab = this.el.querySelector('at-tab[data-active=\"true\"]');\n\n        if (activeTab) {\n            const containerRect = this.containerRef.getBoundingClientRect();\n            const buttonRect = activeTab.getBoundingClientRect();\n\n            this.indicatorRef.style.width = `${buttonRect.width - 16}px`;\n            this.indicatorRef.style.left = `${buttonRect.left - containerRect.left}px`;\n            this.indicatorRef.style.opacity = '1';\n        }\n    }\n\n    checkLayoutAndRender(): any {\n        if (this.layout === 'horizontal') {\n            return (\n                <at-layout\n                    class=\"flex flex-grow\"\n                    template=\"tabset\"\n                    data-name=\"navigation-top\"\n                >\n                    {!this.hide_nav && (\n                        <div slot=\"tabset-navigation\">\n                            <nav\n                                role=\"tablist\"\n                                class=\"relative flex flex-wrap border-b border-gray-200 text-center text-sm font-medium\"\n                                id={`container-${this.tabsetId}`}\n                            >\n                                {this.tabOptions}\n                                <slot name=\"tab-nav\" />\n\n                                <div\n                                    id={`indicator-${this.tabsetId}`}\n                                    class=\"bg-active-foreground pointer-events-none absolute bottom-0 z-10 mx-8 h-2 rounded-sm transition-[left] duration-150 ease-in-out\"\n                                    style={{\n                                        left: '0',\n                                        opacity: '0',\n                                    }}\n                                    aria-hidden=\"true\"\n                                    role=\"presentation\"\n                                />\n                            </nav>\n                        </div>\n                    )}\n\n                    <div\n                        role=\"tabpanel\"\n                        slot=\"tabset-content\"\n                    >\n                        <slot />\n                    </div>\n                </at-layout>\n            );\n        }\n\n        if (this.layout === 'vertical') {\n            return (\n                <at-layout\n                    class=\"flex flex-grow\"\n                    template=\"master-detail\"\n                    data-name=\"navigation-left\"\n                >\n                    <div slot=\"master\">\n                        <nav\n                            role=\"tablist\"\n                            class=\"flex flex-grow flex-col pr-16\"\n                        >\n                            {this.tabOptions}\n                            <slot name=\"tab-nav\" />\n                        </nav>\n                    </div>\n                    <div\n                        role=\"tabpanel\"\n                        slot=\"detail\"\n                        class=\"flex flex-grow flex-col\"\n                    >\n                        <slot />\n                    </div>\n                </at-layout>\n            );\n        }\n    }\n\n    render() {\n        return <Host>{this.checkLayoutAndRender()}</Host>;\n    }\n}\n\n/**\n * @category Form Controls\n * @description A tab selector component for switching between different content sections. Provides keyboard navigation and accessible tab panel management.\n */\n"]}