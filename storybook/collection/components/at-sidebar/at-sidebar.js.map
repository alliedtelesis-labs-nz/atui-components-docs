{"version":3,"file":"at-sidebar.js","sourceRoot":"","sources":["../../../src/components/at-sidebar/at-sidebar.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,IAAI,EACJ,KAAK,EACL,KAAK,EAEL,CAAC,EACD,MAAM,EACN,IAAI,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,SAAS,EAAE,MAAM,uBAAuB,CAAC;AAElD,MAAM,cAAc,GAAG;IACnB,QAAQ,EAAE;QACN,WAAW,EAAE;YACT,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,kEAAkE;YACxE,SAAS,EAAE,kDAAkD;SAChE;QACD,IAAI,EAAE;YACF,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,SAAS;SACnB;KACJ;CACJ,CAAC;AAaF;;;;;;;GAOG;AAMH,MAAM,OAAO,kBAAkB;IAL/B;QAMI;;WAEG;QACK,SAAI,GAAS,MAAM,CAAC;QAE5B;;WAEG;QACK,UAAK,GAAU,MAAM,CAAC;QAE9B;;WAEG;QACK,gBAAW,GAAgB,MAAM,CAAC;QAE1C;;WAEG;QACK,iBAAY,GAAa,IAAI,CAAC;QAE7B,WAAM,GAAY,KAAK,CAAC;KA0EpC;IAlEG,iBAAiB;QACb,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC;QACpC,CAAC;QACD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG;IAEH,KAAK,CAAC,aAAa;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAED;;;OAGG;IAEH,KAAK,CAAC,SAAS;QACX,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,MAAM;QACF,MAAM,YAAY,GAAG,SAAS,CAC1B;;;8DAGkD,EAClD,cAAc,CACjB,CAAC;QAEF,MAAM,SAAS,GAAG,YAAY,CAAC;YAC3B,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,IAAI,EAAE,IAAI,CAAC,IAAI;SAClB,CAAC,CAAC;QAEH,OAAO,CACH,EAAC,IAAI,mEACW,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,WAAW,qBACjC,IAAI,CAAC,WAAW,eACtB,IAAI,CAAC,IAAI,EACpB,KAAK,EAAC,0EAA0E;YAEhF,yEACc,aAAa,EACvB,KAAK,EAAE,KAAK,IAAI,CAAC,KAAK,GAAG,GAAG,SAAS;gBAErC,6DAAM,IAAI,EAAC,gBAAgB,GAAG;gBAE9B,4DAAK,KAAK,EAAC,qDAAqD;oBAC5D,6DAAM,IAAI,EAAC,iBAAiB,GAAG,CAC7B;gBAEN,4DAAK,KAAK,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE;oBACxC,6DAAM,IAAI,EAAC,gBAAgB,GAAQ,CACjC,CACJ;YACN,4DAAK,KAAK,EAAC,2BAA2B;gBAClC,6DAAM,IAAI,EAAC,cAAc,GAAG,CAC1B,CACH,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    Prop,\n    State,\n    Event,\n    EventEmitter,\n    h,\n    Method,\n    Host,\n} from '@stencil/core';\nimport { classlist } from '../../utils/classlist';\n\nconst variantsConfig = {\n    variants: {\n        collapsible: {\n            none: null,\n            icon: 'group-data-[state=collapsed]/sidebar-wrapper:w-sidebar-collapsed',\n            offcanvas: 'group-data-[state=collapsed]/sidebar-wrapper:w-0',\n        },\n        side: {\n            left: null,\n            right: 'order-1',\n        },\n    },\n};\n\nexport type Side = 'left' | 'right';\nexport type Collapsible = 'offcanvas' | 'icon' | 'none';\nexport type Width =\n    | 'menu'\n    | 'panel-xs'\n    | 'panel-sm'\n    | 'panel-md'\n    | 'panel-lg'\n    | 'panel-xl'\n    | 'auto';\n\n/**\n * @category Navigation\n * @description A collapsible sidebar navigation component with menu support and responsive behavior. Features animation, auto-collapse, and keyboard navigation.\n * @slot sidebar-header - Header of the sidebar (likely to be atui-sidebar-trigger)\n * @slot sidebar-content - Content displayed in the sidebar (likely to be atui-sidebar-menu elements)\n * @slot sidebar-footer - Footer displayed in the sidebar\n * @slot page-content - Content of the page\n */\n@Component({\n    tag: 'at-sidebar',\n    shadow: false,\n    styleUrl: 'at-sidebar.scss',\n})\nexport class AtSidebarComponent {\n    /**\n     * Position of the sidebar on the page\n     */\n    @Prop() side: Side = 'left';\n\n    /**\n     * Width of the sidebar\n     */\n    @Prop() width: Width = 'menu';\n\n    /**\n     * Size of the sidebar when collapsed.\n     */\n    @Prop() collapsible: Collapsible = 'icon';\n\n    /**\n     * Opens the sidebar by default when set\n     */\n    @Prop() default_open?: boolean = true;\n\n    @State() isOpen: boolean = false;\n\n    /**\n     * Emits an even when the sidebar is toggled, with `event.detail` being true if the sidebar is now open\n     */\n    @Event()\n    atuiSidebarChange: EventEmitter;\n\n    componentWillLoad() {\n        if (this.default_open !== undefined) {\n            this.isOpen = this.default_open;\n        }\n        this.atuiSidebarChange.emit(this.isOpen);\n    }\n\n    /**\n     * Toggles the sidebar's open state.\n     */\n    @Method()\n    async toggleSidebar(): Promise<void> {\n        this.isOpen = !this.isOpen;\n        this.atuiSidebarChange.emit(this.isOpen);\n    }\n\n    /**\n     * Getter method for the open state of the sidebar\n     * @returns The current open state of the sidebar\n     */\n    @Method()\n    async getIsOpen(): Promise<boolean> {\n        return this.isOpen;\n    }\n\n    render() {\n        const getClassname = classlist(\n            `atui-sidebar group/sidebar bg-sidebar-background \n                  text-sidebar-foreground relative z-20 flex h-screen w-full\n                  flex-col overflow-y-auto border-r border-solid border-r-med \n                  transition-[width] duration-300 ease-in-out`,\n            variantsConfig,\n        );\n\n        const classname = getClassname({\n            collapsible: this.collapsible,\n            side: this.side,\n        });\n\n        return (\n            <Host\n                data-state={this.isOpen ? 'expanded' : 'collapsed'}\n                data-collasable={this.collapsible}\n                data-side={this.side}\n                class=\"group/sidebar-wrapper flex h-screen w-full items-stretch overflow-hidden\"\n            >\n                <nav\n                    data-name=\"sidebar-nav\"\n                    class={`w-${this.width} ` + classname}\n                >\n                    <slot name=\"sidebar-header\" />\n\n                    <div class=\"align-items oveflow-y-auto flex flex-1 flex-col p-8\">\n                        <slot name=\"sidebar-content\" />\n                    </div>\n\n                    <div class={`${this.isOpen ? '' : 'hidden'}`}>\n                        <slot name=\"sidebar-footer\"></slot>\n                    </div>\n                </nav>\n                <div class=\"flex w-full overflow-auto\">\n                    <slot name=\"page-content\" />\n                </div>\n            </Host>\n        );\n    }\n}\n"]}