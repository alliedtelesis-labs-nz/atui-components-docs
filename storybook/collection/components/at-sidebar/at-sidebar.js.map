{"version":3,"file":"at-sidebar.js","sourceRoot":"","sources":["../../../src/components/at-sidebar/at-sidebar.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Prop,\n    State,\n    Event,\n    EventEmitter,\n    h,\n    Method,\n    Host,\n} from '@stencil/core';\n\nexport type Width =\n    | 'menu'\n    | 'panel-xs'\n    | 'panel-sm'\n    | 'panel-md'\n    | 'panel-lg'\n    | 'panel-xl'\n    | 'auto';\n\n/**\n * @category Navigation\n * @description A collapsible sidebar navigation component with menu support and responsive behavior. Features animation, auto-collapse, and keyboard navigation.\n * @slot sidebar-header - Header of the sidebar (likely to be atui-sidebar-trigger)\n * @slot sidebar-content - Content displayed in the sidebar (likely to be atui-sidebar-menu elements)\n * @slot sidebar-footer - Footer displayed in the sidebar\n * @slot page-content - Content of the page\n */\n@Component({\n    tag: 'at-sidebar',\n    shadow: true,\n    styleUrl: 'at-sidebar.scss',\n})\nexport class AtSidebarComponent {\n    /**\n     * Position of the sidebar on the page\n     */\n    @Prop() side: 'left' | 'right';\n\n    /**\n     * Width of the sidebar\n     */\n    @Prop() width: Width = 'menu';\n\n    /**\n     * Size of the sidebar when collapsed.\n     */\n    @Prop() collapsible: 'offcanvas' | 'icon' | 'none';\n\n    /**\n     * How the sidenav interacts with main content when open\n     */\n    @Prop() mode: 'over' | 'push';\n\n    /**\n     * Display a clickable backdrop when mode = over\n     */\n    @Prop() backdrop: boolean = false;\n\n    /**\n     * Opens the sidebar by default when set\n     */\n    @Prop() default_open?: boolean = false;\n\n    @State() isOpen: boolean = false;\n\n    /**\n     * Emits an even when the sidebar is toggled, with `event.detail` being true if the sidebar is now open\n     */\n    @Event()\n    atuiSidebarChange: EventEmitter;\n\n    componentWillLoad() {\n        if (this.default_open !== undefined) {\n            this.isOpen = this.default_open;\n        }\n        this.atuiSidebarChange.emit(this.isOpen);\n    }\n\n    /**\n     * Toggles the sidebar's open state.\n     */\n    @Method()\n    async toggleSidebar(): Promise<void> {\n        this.isOpen = !this.isOpen;\n        this.atuiSidebarChange.emit(this.isOpen);\n    }\n\n    /**\n     * Getter method for the open state of the sidebar\n     * @returns The current open state of the sidebar\n     */\n    @Method()\n    async getIsOpen(): Promise<boolean> {\n        return this.isOpen;\n    }\n\n    private handleBackdropClick = () => {\n        if (this.mode === 'over' && this.isOpen) {\n            this.toggleSidebar();\n        }\n    };\n\n    render() {\n        const isModalOverlay =\n            this.mode === 'over' && this.backdrop && this.isOpen;\n\n        return (\n            <Host\n                data-state={this.isOpen ? 'expanded' : 'collapsed'}\n                class={`mode-${this.mode} side-${this.side} collapse-${this.collapsible}`}\n            >\n                {isModalOverlay && (\n                    <div\n                        class=\"backdrop\"\n                        onClick={this.handleBackdropClick}\n                        aria-hidden=\"true\"\n                    ></div>\n                )}\n                <nav\n                    data-name=\"sidebar-nav\"\n                    aria-expanded={this.isOpen ? 'true' : 'false'}\n                    aria-hidden={\n                        !this.isOpen && this.collapsible === 'offcanvas'\n                            ? 'true'\n                            : 'false'\n                    }\n                    part=\"nav\"\n                    class={`nav collapse-${this.collapsible}`}\n                >\n                    <slot name=\"sidebar-header\" />\n\n                    <div class=\"nav-content\">\n                        <slot name=\"sidebar-content\" />\n                    </div>\n\n                    <div class={`${this.isOpen ? '' : 'hidden'}`}>\n                        <slot name=\"sidebar-footer\"></slot>\n                    </div>\n                </nav>\n                <div\n                    class=\"content\"\n                    aria-hidden={isModalOverlay ? 'true' : 'false'}\n                    inert={isModalOverlay}\n                >\n                    <slot name=\"page-content\" />\n                </div>\n            </Host>\n        );\n    }\n}\n"]}