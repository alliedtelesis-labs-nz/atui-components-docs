{"version":3,"file":"at-sidebar-trigger.js","sourceRoot":"","sources":["../../../../src/components/at-sidebar/at-sidebar-trigger/at-sidebar-trigger.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAEnE;;;GAGG;AAMH,MAAM,OAAO,yBAAyB;IAJtC;QAMa,WAAM,GAAY,KAAK,CAAC;QAoBzB,kBAAa,GAAG,CAAC,KAAoB,EAAQ,EAAE;YACnD,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;gBAC7C,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,IAAI,CAAC,EAAE,CAAC,KAAK,EAAE,CAAC;YACpB,CAAC;QACL,CAAC,CAAC;QAuBM,wBAAmB,GAAG,CAAC,KAA2B,EAAE,EAAE;YAC1D,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAC/B,CAAC,CAAC;KA2BL;IAzEW,KAAK,CAAC,YAAY;QACtB,IAAI,IAAI,CAAC,QAAQ,IAAI,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,KAAK,UAAU,EAAE,CAAC;YACjE,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;QAClD,CAAC;IACL,CAAC;IAEO,KAAK,CAAC,aAAa;QACvB,IACI,IAAI,CAAC,QAAQ;YACb,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,KAAK,UAAU,EACnD,CAAC;YACC,MAAM,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;YACpC,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAC9B,CAAC;IACL,CAAC;IASD,KAAK,CAAC,gBAAgB;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,YAAY,CAAyB,CAAC;QACtE,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC;QAE1B,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAC1B,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAC3B,CAAC;QACN,CAAC;IACL,CAAC;IAED,oBAAoB;QAChB,IAAI,IAAI,CAAC,QAAQ,EAAE,CAAC;YAChB,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAC7B,mBAAmB,EACnB,IAAI,CAAC,mBAAmB,CAC3B,CAAC;QACN,CAAC;IACL,CAAC;IAMD,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDACD,IAAI,EAAC,QAAQ,EACb,KAAK,EAAC,iUAAiU,EACvU,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,IAAI,CAAC,aAAa,EAC7B,OAAO,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE;YAEnC,4DAAK,KAAK,EAAC,wCAAwC;gBAC9C,IAAI,CAAC,MAAM,KAAK,SAAS,IAAI,CAC1B,6DAAM,KAAK,EAAC,wEAAwE,IAC/E,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAChC,CACV;gBACD,8DAAQ,CACN;YACN,yEACc,iBAAiB,EAC3B,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,+IAA+I,GAClJ,CACJ,CACV,CAAC;IACN,CAAC;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\n\n/**\n * @category Navigation\n * @description A sidebar trigger component for the sidebar.\n */\n\n@Component({\n    tag: 'at-sidebar-trigger',\n    shadow: false,\n})\nexport class AtSidebarTriggerComponent {\n    @Element() el: HTMLElement;\n    @State() isOpen: boolean = false;\n\n    private provider: HTMLAtSidebarElement;\n\n    private async updateIsOpen() {\n        if (this.provider && typeof this.provider.getIsOpen === 'function') {\n            this.isOpen = await this.provider.getIsOpen();\n        }\n    }\n\n    private async toggleSidebar(): Promise<void> {\n        if (\n            this.provider &&\n            typeof this.provider.toggleSidebar === 'function'\n        ) {\n            await this.provider.toggleSidebar();\n            await this.updateIsOpen();\n        }\n    }\n\n    private handleKeyDown = (event: KeyboardEvent): void => {\n        if (event.key === 'Enter' || event.key === ' ') {\n            event.preventDefault();\n            this.el.click();\n        }\n    };\n\n    async componentDidLoad() {\n        this.provider = this.el.closest('at-sidebar') as HTMLAtSidebarElement;\n        await this.updateIsOpen();\n\n        if (this.provider) {\n            this.provider.addEventListener(\n                'atuiSidebarChange',\n                this.handleSidebarChange,\n            );\n        }\n    }\n\n    disconnectedCallback() {\n        if (this.provider) {\n            this.provider.removeEventListener(\n                'atuiSidebarChange',\n                this.handleSidebarChange,\n            );\n        }\n    }\n\n    private handleSidebarChange = (event: CustomEvent<boolean>) => {\n        this.isOpen = event.detail;\n    };\n\n    render() {\n        return (\n            <Host\n                role=\"button\"\n                class=\"group text-button focus-visible:ring-active-foreground/30 text-sidebar-foreground relative flex cursor-pointer items-center justify-between gap-8 overflow-visible rounded-md p-8 text-left font-medium transition-[background-color,color,box-shadow] duration-150 ease-in-out focus-visible:ring-2 focus-visible:outline-none\"\n                tabIndex={0}\n                onKeyDown={this.handleKeyDown}\n                onClick={() => this.toggleSidebar()}\n            >\n                <div class=\"flex w-full justify-end gap-8 truncate\">\n                    {this.isOpen !== undefined && (\n                        <span class=\"material-icons !text-icon-xl z-10 flex items-center justify-center p-2\">\n                            {this.isOpen ? 'menu_open' : 'menu'}\n                        </span>\n                    )}\n                    <slot />\n                </div>\n                <div\n                    data-name=\"focus-indicator\"\n                    role=\"presentation\"\n                    class=\"pointer-events-none absolute top-0 left-0 z-0 h-full w-full rounded-md transition-colors duration-300 ease-in-out group-hover:bg-slate-400/10\"\n                ></div>\n            </Host>\n        );\n    }\n}\n"]}