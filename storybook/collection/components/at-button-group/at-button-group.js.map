{"version":3,"file":"at-button-group.js","sourceRoot":"","sources":["../../../src/components/at-button-group/at-button-group.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    Element,\n} from '@stencil/core';\n\nexport interface ButtonGroupOption {\n    option_id: string;\n    label?: string;\n    icon?: string;\n    is_active?: string;\n    disabled?: boolean;\n    readonly?: boolean;\n}\n\n/**\n * @category Form Controls\n * @description A button group component that allows single or multiple selection from a set of toggle options. Provides a cohesive way to group related action buttons with shared styling and behavior.\n *\n * @slot - used to place your own atui-button-group-options if 'options' prop isn't set. Button changing logic will not apply.\n */\n@Component({\n    tag: 'at-button-group',\n    shadow: false,\n})\nexport class AtButtonGroup {\n    /**\n     * Label for button group.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Optional info icon with detailed tooltip description.\n     *\n     * Displayed at right of label.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Hint for options.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Error text for invalid choices.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * List of options to be displayed on the button group.\n     */\n    @Prop()\n    options: ButtonGroupOption[] = [];\n\n    /**\n     * Sets the current active button\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    /**\n     * Disables the button group and prevents interaction\n     */\n    @Prop()\n    disabled?: boolean;\n\n    @Element() el: HTMLAtButtonGroupElement;\n    private buttonGroupId = `buttonGroup-${Math.random().toString(36).substring(2, 11)}`;\n\n    /**\n     * When the active button is changed, this will emit the 0-based index of the active button\n     */\n    @Event()\n    atuiIndexChange: EventEmitter<number>;\n\n    /**\n     * When the active button is changed, this will emit the text value of the active button\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    private buttonRefs: HTMLElement[] = [];\n\n    componentDidLoad() {\n        this.setInitialActiveButton();\n    }\n\n    handleChange(value: string, index: number): void {\n        this.value = value;\n        this.atuiChange.emit(value);\n        this.atuiIndexChange.emit(index);\n    }\n\n    private setInitialActiveButton() {\n        const activeOption = this.options.find(\n            (option) => option.option_id === this.value,\n        );\n        if (activeOption) {\n            this.value = activeOption.option_id;\n        } else if (this.options.length > 0) {\n            this.value = this.options[0].option_id;\n        }\n    }\n\n    render() {\n        return (\n            <Host\n                role=\"radiogroup\"\n                aria-labelledby={this.buttonGroupId}\n                class={'flex flex-col items-start'}\n            >\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.info_text) && (\n                        <at-form-label\n                            id={this.buttonGroupId}\n                            label={this.label}\n                            info_text={this.info_text}\n                        />\n                    )}\n                    {this.hint_text && (\n                        <span\n                            class=\"text-light mb-8 inline-block text-xs leading-tight\"\n                            data-name=\"button-group-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n                <div class=\"border-med relative rounded-lg border bg-white inset-shadow-xs\">\n                    <ul\n                        class=\"relative z-20 m-[3px] flex flex-row\"\n                        data-name=\"button-group-options\"\n                    >\n                        {this.renderOptions()}\n                        <slot />\n                    </ul>\n                </div>\n\n                {this.error_text && (\n                    <span\n                        class=\"text-error text-xs font-medium\"\n                        data-name=\"button-group-error-text\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n\n    renderOptions() {\n        return this.options.map((option, index) => (\n            <li\n                class={`relative z-10 mr-[-1px] ${this.disabled ? 'pointer-events-none' : ''}`}\n                ref={(el) => (this.buttonRefs[index] = el as HTMLElement)}\n            >\n                <at-button-group-option\n                    option_id={option.option_id}\n                    label={option.label}\n                    is_active={this.value === option.option_id}\n                    disabled={option.disabled}\n                    onAtuiClick={() =>\n                        this.handleChange(option.option_id, index)\n                    }\n                    onKeyDown={(event) => {\n                        if (event.key === 'Enter' || event.key === ' ') {\n                            this.handleChange(option.option_id, index);\n                            event.preventDefault();\n                        }\n                    }}\n                />\n            </li>\n        ));\n    }\n}\n"]}