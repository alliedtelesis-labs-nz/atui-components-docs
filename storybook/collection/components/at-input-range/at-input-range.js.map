{"version":3,"file":"at-input-range.js","sourceRoot":"","sources":["../../../src/components/at-input-range/at-input-range.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Event,\n    EventEmitter,\n    Element,\n} from '@stencil/core';\n\nexport type InputPosition = 'before' | 'after';\n\n/**\n * @category Form Controls\n * @description A range input component for selecting a value within a specified range.\n */\n\n@Component({\n    tag: 'at-input-range',\n    styleUrl: 'at-input-range.scss',\n    shadow: false,\n})\nexport class AtInputRangeComponent {\n    /**\n     * Label of the input.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Info icon with detailed tooltip description if required. Content is available via info icon tooltip.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * suffix message for the input.\n     */\n    @Prop()\n    suffix?: string;\n\n    /**\n     * Warning message for the input.\n     */\n    @Prop()\n    warning_text?: string;\n\n    /**\n     *\n     * Error message visible when input is invalid.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Set the input to an invalid state.\n     */\n    @Prop()\n    invalid?: boolean;\n\n    /**\n     * Set the input to a readonly state.\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Disable user interaction. Disabled state should be applied via form control.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Indicated form field is required.\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Numeric value of the slider component.\n     */\n    @Prop({ mutable: true })\n    get value(): number {\n        return this._value;\n    }\n    set value(val: number) {\n        this._value = Math.max(this.min, Math.min(this.max, val));\n    }\n    private _value: number;\n    /**\n     * Min selectable value of the slider.\n     */\n    @Prop()\n    min = 0;\n\n    /**\n     * Max selectable value of the slider.\n     */\n    @Prop()\n    max = 100;\n\n    /**\n     * Interval between selections.\n     */\n    @Prop()\n    step?: number = 1;\n\n    /**\n     * Display min and max text values.\n     */\n    @Prop()\n    show_minmax?: boolean = true;\n\n    /**\n     * Display step indicators.\n     */\n    @Prop()\n    show_ticks?: boolean = true;\n\n    /**\n     * Display order of input and slider.\n     */\n    @Prop()\n    show_value?: boolean = true;\n\n    /**\n     * Display numeric input with slider.\n     */\n    @Prop()\n    show_input?: boolean = true;\n\n    /**\n     * Position of the numeric input, left or right of the slider.\n     */\n    @Prop()\n    label_position: InputPosition = 'after';\n\n    /**\n     * Emits an event containing the current value when the text input or slider input's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<number>;\n\n    @Element() el: HTMLElement;\n    private sliderContainerRef: HTMLDivElement;\n    private sliderId = `slider-${Math.random().toString(36).substring(2, 11)}`;\n\n    onChange(inputVal: number): void {\n        const newValue = Math.max(this.min, Math.min(this.max, inputVal)); // Clamp value\n        this.value = newValue;\n        this.atuiChange.emit(this.value);\n    }\n\n    render() {\n        return (\n            <Host>\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <at-form-label\n                            label={this.label}\n                            for={this.sliderId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n                    {this.hint_text && (\n                        <span\n                            class=\"text-light inline-block text-xs leading-tight\"\n                            data-name=\"slider-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                    {this.error_text && this.invalid && (\n                        <span\n                            class=\"text-error text-xs font-normal\"\n                            data-name=\"slider-error\"\n                        >\n                            {this.error_text}\n                        </span>\n                    )}\n                    {this.warning_text && !this.invalid && (\n                        <span\n                            class=\"text-warning-foreground text-xs font-normal\"\n                            data-name=\"slider-warning\"\n                        >\n                            {this.warning_text}\n                        </span>\n                    )}\n                </div>\n\n                <div\n                    class={`mt-4 flex items-start gap-8 ${this.label_position == 'before' ? 'flex-row-reverse' : 'flex-row'}`}\n                >\n                    <div class=\"flex flex-grow flex-col\">\n                        <div class=\"flex flex-grow\">\n                            <div\n                                class=\"range-slider\"\n                                style={{\n                                    '--min': `${this.min}`,\n                                    '--max': `${this.max}`,\n                                    '--step': `${this.step}`,\n                                    '--value': `${this.value}`,\n                                    '--text-value': `${this.value}`,\n                                    '--show-min-max': `${this.show_minmax ? 'block' : 'none'}`,\n                                }}\n                                ref={(el) => (this.sliderContainerRef = el)}\n                            >\n                                <input\n                                    list=\"markers\"\n                                    type=\"range\"\n                                    min={this.min}\n                                    max={this.max}\n                                    step={this.step}\n                                    aria-controls={this.sliderId}\n                                    disabled={\n                                        this.disabled || this.readonly\n                                            ? true\n                                            : undefined\n                                    }\n                                    id={this.sliderId}\n                                    value={this.value}\n                                    class=\"custom-slider\"\n                                    data-name=\"slider-range-input\"\n                                    onInput={(event) => {\n                                        const newValue = parseInt(\n                                            (event.target as HTMLInputElement)\n                                                .value,\n                                        );\n                                        this.value = newValue;\n                                        this.onChange(newValue);\n                                        this.sliderContainerRef.style.setProperty(\n                                            '--value',\n                                            String(this.value),\n                                        );\n                                        this.sliderContainerRef.style.setProperty(\n                                            '--text-value',\n                                            JSON.stringify(this.value),\n                                        );\n                                    }}\n                                />\n                                {this.show_value && (\n                                    <output class=\"text-sm\">\n                                        {this.value}\n                                    </output>\n                                )}\n                                <div class=\"range-slider__progress\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    {this.show_input && (\n                        <div class=\"relative flex w-80 flex-row items-center gap-8\">\n                            <at-input-numeric\n                                readonly={this.readonly}\n                                disabled={this.disabled}\n                                min={this.min}\n                                max={this.max}\n                                step={this.step}\n                                value={this.value}\n                                show_buttons={false}\n                                data-name=\"slider-text-input\"\n                                onAtuiChange={(event) =>\n                                    this.onChange(event.detail as number)\n                                }\n                            />\n                            {this.suffix && (\n                                <span\n                                    data-name=\"slider-suffix\"\n                                    class=\"text-light absolute top-1/2 right-[36px] -translate-y-1/2\"\n                                >\n                                    {this.suffix}\n                                </span>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </Host>\n        );\n    }\n}\n"]}