{"version":3,"file":"at-toggle-cell.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/at-toggle-cell/at-toggle-cell.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,OAAO,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAoB3E;;;GAGG;AAMH,MAAM,OAAO,YAAY;IASrB,IAAI,CAAC,MAA2B;;QAC5B,IAAI,CAAC,MAAM,GAAG,MAA2B,CAAC;QAE1C,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACtD,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,KAAK,GAAG,CAAA,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,UAAU,0CAAE,KAAK,KAAI,KAAK,CAAC;QACzD,CAAC;QAED,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;YACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChD,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,KAAK,GAAG,CAAA,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,UAAU,0CAAE,KAAK,KAAI,EAAE,CAAC;QACtD,CAAC;QAED,IAAI,CAAC,aAAa,GAAG,CAAA,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,UAAU,0CAAE,aAAa,KAAI,OAAO,CAAC;QACvE,IAAI,CAAC,QAAQ,GAAG,CAAA,MAAA,MAAA,MAAM,CAAC,IAAI,0CAAE,UAAU,0CAAE,QAAQ,KAAI,KAAK,CAAC;IAC/D,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;IAED,OAAO,CAAC,MAA2B;QAC/B,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;IAGD,aAAa,CAAC,MAAmB;QAC7B,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE,GAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAEO,UAAU,CAAC,QAAa;QAC5B,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzB,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC7B,IAAI,CAAC,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE,GAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,yCAAyC;YACjD,yEACI,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,GAAG,EAAE,eAAC,OAAA,MAAA,MAAA,IAAI,CAAC,MAAM,EAAC,SAAS,mDAAG,IAAI,CAAC,MAAM,CAAC,CAAA,EAAA,EACpD,cAAc,EAAE,IAAI,CAAC,aAAa,EAClC,UAAU,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,EACxB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,QAAQ,EAAE,IAAI,CAAC,QAAQ,GACP,CACjB,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Element, State, Host, Listen } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\nimport { LabelPosition } from '../../../at-toggle-switch/at-toggle-switch';\nimport { ITooltipCell } from '../../../../types/table-cells';\n\nexport interface ToggleCellData {\n    value: boolean;\n    label?: string;\n    labelPosition?: 'before' | 'after';\n    disabled?: boolean;\n}\n\nexport interface IToggleCellParams extends ICellRendererParams, ITooltipCell {\n    toggleValue?: (data: any) => boolean;\n    label?: (data: any) => string;\n    labelPosition?: (data: any) => LabelPosition;\n    onTrigger?: (params: ICellRendererParams) => void;\n    disabled?: (data: any) => boolean;\n}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a toggle.\n */\n\n@Component({\n    tag: 'at-toggle-cell',\n    shadow: false,\n})\nexport class AtToggleCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n    @State() params: IToggleCellParams;\n    @State() label: string;\n    @State() labelPosition: LabelPosition;\n    @State() disabled: boolean;\n    @State() value: boolean;\n    timer: any;\n\n    init(params: ICellRendererParams): void {\n        this.params = params as IToggleCellParams;\n\n        if (this.params.toggleValue) {\n            this.value = this.params.toggleValue(params.data);\n        } else {\n            this.value = params.data?.toggleCell?.value || false;\n        }\n\n        if (this.params.label) {\n            this.label = this.params.label(params.data);\n        } else {\n            this.label = params.data?.toggleCell?.label || '';\n        }\n\n        this.labelPosition = params.data?.toggleCell?.labelPosition || 'after';\n        this.disabled = params.data?.toggleCell?.disabled || false;\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ICellRendererParams): boolean {\n        this.updateCell(params.data);\n        return true;\n    }\n\n    @Listen('toggleFunction')\n    toggleHandler(change: CustomEvent) {\n        clearTimeout(this.timer);\n        this.params.value = change.detail;\n        this.timer = setTimeout(() => {}, 2000);\n    }\n\n    private updateCell(newValue: any) {\n        clearTimeout(this.timer);\n        this.params.value = newValue;\n        this.timer = setTimeout(() => {}, 2000);\n    }\n\n    render() {\n        return (\n            <Host class=\"flex h-full items-center leading-[100%]\">\n                <at-toggle-switch\n                    label={this.label}\n                    onChange={() => this.params.onTrigger?.(this.params)}\n                    label_position={this.labelPosition}\n                    show_label={!!this.label}\n                    value={this.value}\n                    disabled={this.disabled}\n                ></at-toggle-switch>\n            </Host>\n        );\n    }\n}\n"]}