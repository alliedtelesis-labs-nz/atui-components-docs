{"version":3,"file":"at-text-status-cell.stories.js","sourceRoot":"","sources":["../../../../../src/components/table-components/cell-components/at-text-status-cell/at-text-status-cell.stories.ts"],"names":[],"mappings":"AAAA,MAAM,QAAQ,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC;sBACL,IAAI,CAAC,SAAS;;;;;;kDAMc,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;gDAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,EAAE,CAAC;;;CAGvH,CAAC;AAEF,eAAe;IACX,KAAK,EAAE,8DAA8D;CACxE,CAAC;AAEF,MAAM,CAAC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzC,OAAO,CAAC,IAAI,GAAG;IACX,QAAQ,EAAE;QACN;YACI,IAAI,EAAE,CAAC;YACP,KAAK,EAAE,SAAS;YAChB,KAAK,EAAE,SAAS;YAChB,QAAQ,EAAE,KAAK;YACf,UAAU,EAAE,WAAW;YACvB,YAAY,EAAE,wBAAwB;YACtC,kBAAkB,EAAE;gBAChB,eAAe,EAAE,8CAA8C;gBAC/D,eAAe,EAAE,wBAAwB;aAC5C;SACJ;KACJ;IACD,UAAU,EAAE;QACR,KAAK,EAAE;YACH;gBACI,OAAO,EAAE,SAAS;aACrB;YACD;gBACI,OAAO,EAAE,SAAS;aACrB;YACD;gBACI,OAAO,EAAE,OAAO;aACnB;YACD;gBACI,OAAO,EAAE,SAAS;aACrB;SACJ;QACD,KAAK,EAAE,CAAC;KACX;IACD,SAAS,EAAE,EAAE;CAChB,CAAC","sourcesContent":["const Template = (args) => `\n<at-table page_size=${args.page_size}></at-table>\n<script type=\"module\">\nimport { defineCustomElement as defineTable } from './components/at-table.js';\nimport { AtTextStatusCell, defineCustomElement as defineTextStatusCell } from './components/at-text-status-cell.js';\ndefineTable();\ndefineTextStatusCell();\ndocument.querySelector('at-table').table_data = ${JSON.stringify(args.table_data, null, 4)}\ndocument.querySelector('at-table').col_defs = ${JSON.stringify(args.col_defs, null, 4).replace(/(\"?\\*\\*\\*\"?)|(\\\\)/g, '')}\ndocument.querySelector('at-table').createGrid()\n</script>\n`;\n\nexport default {\n    title: 'Components/Table Components/Cell Components/Text Status Cell',\n};\n\nexport const Default = Template.bind({});\nDefault.args = {\n    col_defs: [\n        {\n            flex: 1,\n            field: 'col_one',\n            colId: 'col_one',\n            sortable: false,\n            headerName: 'Text Cell',\n            cellRenderer: '***AtTextStatusCell***',\n            cellRendererParams: {\n                generateTooltip: '***(params) => `tooltip: ${params.value}`***',\n                mapValueToBadge: '***(value) => value***',\n            },\n        },\n    ],\n    table_data: {\n        items: [\n            {\n                col_one: 'default',\n            },\n            {\n                col_one: 'success',\n            },\n            {\n                col_one: 'error',\n            },\n            {\n                col_one: 'warning',\n            },\n        ],\n        total: 1,\n    },\n    page_size: 10,\n};\n"]}