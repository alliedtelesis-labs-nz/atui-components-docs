{"version":3,"file":"at-table-components-configs.js","sourceRoot":"","sources":["../../../src/components/table-components/at-table-components-configs.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,cAAc,EAAE,gBAAgB,EAAE,MAAM,yBAAyB,CAAC;AAC3E,OAAO,EAAE,uBAAuB,EAAE,MAAM,qDAAqD,CAAC;AAC9F,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;AAC1F,OAAO,EAAE,mBAAmB,EAAE,MAAM,6CAA6C,CAAC;AAClF,OAAO,EAAE,yBAAyB,EAAE,MAAM,2DAA2D,CAAC;AACtG,OAAO,EAAE,yBAAyB,EAAE,MAAM,2DAA2D,CAAC;AACtG,OAAO,EAAE,cAAc,EAAE,MAAM,uDAAuD,CAAC;AACvF,OAAO,EAAE,uBAAuB,EAAE,MAAM,2EAA2E,CAAC;AACpH,OAAO,EAAE,mBAAmB,EAAE,MAAM,iEAAiE,CAAC;AACtG,OAAO,EAAE,cAAc,EAAE,MAAM,uDAAuD,CAAC;AACvF,OAAO,EAAE,cAAc,EAAE,MAAM,uDAAuD,CAAC;AACvF,OAAO,EAAE,YAAY,EAAE,MAAM,iDAAiD,CAAC;AAC/E,OAAO,EAAE,cAAc,EAAE,MAAM,uDAAuD,CAAC;AACvF,OAAO,EAAE,iBAAiB,EAAE,MAAM,6DAA6D,CAAC;AAChG,OAAO,EAAE,eAAe,EAAE,MAAM,yDAAyD,CAAC;AAC1F,OAAO,EAAE,UAAU,EAAE,MAAM,6CAA6C,CAAC;AAEzE,MAAM,OAAO,wBAAwB;IAIjC;;;;OAIG;IACK,MAAM,CAAC,0BAA0B;QACrC,IAAI,IAAI,CAAC,oBAAoB;YAAE,OAAO;QAEtC,IAAI,CAAC;YACD,qDAAqD;YACrD,MAAM,cAAc,GAAG;gBACnB,uBAAuB;gBACvB,mBAAmB;gBACnB,yBAAyB;gBACzB,eAAe;gBACf,cAAc;gBACd,mBAAmB;gBACnB,uBAAuB;gBACvB,cAAc;gBACd,cAAc;gBACd,YAAY;gBACZ,cAAc;gBACd,iBAAiB;gBACjB,eAAe;gBACf,UAAU;gBACV,yBAAyB;aAC5B,CAAC;YAEF,0CAA0C;YAC1C,cAAc,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,EAAE;gBACjC,IAAI,OAAO,SAAS,KAAK,UAAU,EAAE,CAAC;oBAClC,MAAM,IAAI,KAAK,CAAC,sBAAsB,SAAS,EAAE,CAAC,CAAC;gBACvD,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;QACrC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,KAAK,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;QACpE,CAAC;IACL,CAAC;IAED;;;OAGG;IACH,MAAM,CAAC,sBAAsB;QACzB,IAAI,CAAC,0BAA0B,EAAE,CAAC;QAElC,OAAO;YACH,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,mBAAmB;YAC/C,CAAC,cAAc,CAAC,gBAAgB,CAAC,EAAE,yBAAyB;YAC5D,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE,eAAe;YACtD,CAAC,cAAc,CAAC,mBAAmB,CAAC,EAAE,cAAc;YACpD,CAAC,cAAc,CAAC,mBAAmB,CAAC,EAAE,mBAAmB;YACzD,CAAC,cAAc,CAAC,wBAAwB,CAAC,EAAE,uBAAuB;YAClE,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,cAAc;YAC/C,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,cAAc;YAC/C,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE,uBAAuB;YACvD,CAAC,gBAAgB,CAAC,eAAe,CAAC,EAAE,yBAAyB;YAC7D,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,YAAY;YAC1C,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE,cAAc;YAC/C,CAAC,cAAc,CAAC,iBAAiB,CAAC,EAAE,iBAAiB;YACrD,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE,eAAe;YACtD,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE,UAAU;SACzC,CAAC;IACN,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,KAAK;QACR,IAAI,CAAC,oBAAoB,GAAG,KAAK,CAAC;IACtC,CAAC;;AA3Ee,wCAAe,GAAG,EAAE,CAAC;AACtB,6CAAoB,GAAG,KAAK,CAAC","sourcesContent":["import { AvailableCells, AvailableHeaders } from '../../types/table-cells';\nimport { AtCheckboxCellComponent } from './cell-components/at-checkbox-cell/at-checkbox-cell';\nimport { AtTextBadgeCell } from './cell-components/at-text-badge-cell/at-text-badge-cell';\nimport { AtTextCellComponent } from './cell-components/at-text-cell/at-text-cell';\nimport { AtTextStatusCellComponent } from './cell-components/at-text-status-cell/at-text-status-cell';\nimport { AtCheckboxHeaderComponent } from './header-components/at-checkbox-header/at-checkbox-header';\nimport { AtTextIconCell } from './cell-components/at-text-icon-cell/at-text-icon-cell';\nimport { AtTitleSubtitleDateCell } from './cell-components/at-title-subtitle-date-cell/at-title-subtitle-date-cell';\nimport { AtTitleSubtitleCell } from './cell-components/at-title-subtitle-cell/at-title-subtitle-cell';\nimport { AtEditTextCell } from './cell-components/at-edit-text-cell/at-edit-text-cell';\nimport { AtChipListCell } from './cell-components/at-chip-list-cell/at-chip-list-cell';\nimport { AtToggleCell } from './cell-components/at-toggle-cell/at-toggle-cell';\nimport { AtMultiBtnCell } from './cell-components/at-multi-btn-cell/at-multi-btn-cell';\nimport { AtColorStatusCell } from './cell-components/at-color-status-cell/at-color-status-cell';\nimport { AtTextImageCell } from './cell-components/at-text-image-cell/at-text-image-cell';\nimport { AtMenuCell } from './cell-components/at-menu-cell/at-menu-cell';\n\nexport class AtTableComponentsConfigs {\n    static readonly defaultPageSize = 10;\n    private static cellComponentsLoaded = false;\n\n    /**\n     * Ensures all table cell components are registered as custom elements.\n     * This is crucial for production builds where tree-shaking might remove\n     * seemingly unused components.\n     */\n    private static ensureCellComponentsLoaded(): void {\n        if (this.cellComponentsLoaded) return;\n\n        try {\n            // Prevent tree-shaking by referencing all components\n            const cellComponents = [\n                AtCheckboxCellComponent,\n                AtTextCellComponent,\n                AtTextStatusCellComponent,\n                AtTextBadgeCell,\n                AtTextIconCell,\n                AtTitleSubtitleCell,\n                AtTitleSubtitleDateCell,\n                AtEditTextCell,\n                AtChipListCell,\n                AtToggleCell,\n                AtMultiBtnCell,\n                AtColorStatusCell,\n                AtTextImageCell,\n                AtMenuCell,\n                AtCheckboxHeaderComponent,\n            ];\n\n            // Force reference to prevent tree-shaking\n            cellComponents.forEach((component) => {\n                if (typeof component !== 'function') {\n                    throw new Error(`Invalid component: ${component}`);\n                }\n            });\n\n            this.cellComponentsLoaded = true;\n        } catch (error) {\n            console.error('Error preserving table cell components:', error);\n        }\n    }\n\n    /**\n     * Returns the framework components for AG Grid.\n     * Automatically ensures all cell components are loaded before returning.\n     */\n    static getFrameworkComponents() {\n        this.ensureCellComponentsLoaded();\n\n        return {\n            [AvailableCells.TEXT_CELL]: AtTextCellComponent,\n            [AvailableCells.TEXT_STATUS_CELL]: AtTextStatusCellComponent,\n            [AvailableCells.TEXT_WITH_BADGE_CELL]: AtTextBadgeCell,\n            [AvailableCells.TEXT_WITH_ICON_CELL]: AtTextIconCell,\n            [AvailableCells.TITLE_SUBTITLE_CELL]: AtTitleSubtitleCell,\n            [AvailableCells.TITLE_SUBTITLE_DATE_CELL]: AtTitleSubtitleDateCell,\n            [AvailableCells.EDIT_TEXT_CELL]: AtEditTextCell,\n            [AvailableCells.CHIP_LIST_CELL]: AtChipListCell,\n            [AvailableCells.CHECKBOX_CELL]: AtCheckboxCellComponent,\n            [AvailableHeaders.CHECKBOX_HEADER]: AtCheckboxHeaderComponent,\n            [AvailableCells.TOGGLE_CELL]: AtToggleCell,\n            [AvailableCells.MULTI_BTN_CELL]: AtMultiBtnCell,\n            [AvailableCells.COLOR_STATUS_CELL]: AtColorStatusCell,\n            [AvailableCells.TEXT_WITH_IMAGE_CELL]: AtTextImageCell,\n            [AvailableCells.MENU_CELL]: AtMenuCell,\n        };\n    }\n\n    /**\n     * Force reset the loading state (useful for testing)\n     */\n    static reset(): void {\n        this.cellComponentsLoaded = false;\n    }\n}\n"]}