{"version":3,"file":"at-table-actions.js","sourceRoot":"","sources":["../../../../src/components/table-components/at-table-actions/at-table-actions.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,CAAC,EACD,IAAI,EACJ,IAAI,EACJ,MAAM,EACN,KAAK,GAER,MAAM,eAAe,CAAC;AAGvB;;;;;;;;;;EAUE;AAKF,MAAM,OAAO,uBAAuB;IAuBhC,aAAa,CAAC,KAAkB;QAC5B,MAAM,MAAM,GAAG,KAAK,CAAC,MAAqB,CAAC;QAC3C,QAAQ,MAAM,CAAC,IAAI,EAAE,CAAC;YAClB,KAAK,gBAAgB;gBACjB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAC1B,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,EACjB,KAAK,CAAC,MAAM,CAAC,OAAO,CACvB,CAAC;gBACF,MAAM;YACV,KAAK,QAAQ;gBACT,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,iBAAiB,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;gBAC5D,MAAM;YACV,KAAK,aAAa;gBACd,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK;oBAAE,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBACpD,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK;oBACtB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;gBACpD,MAAM;YACV,KAAK,kBAAkB;gBACnB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;gBACjC,MAAM;QACd,CAAC;IACL,CAAC;IAED,iBAAiB;QACb,OAAO,IAAI,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE;YACxD,MAAM,kBAAkB,GAAG,MAAM,CAAC,qBAAqB,EAAE,CAAC;YAC1D,OAAO;gBACH,WAAW,EAAE,MAAM,CAAC,cAAc,EAAE;gBACpC,KAAK,EAAE,CAAA,kBAAkB,aAAlB,kBAAkB,uBAAlB,kBAAkB,CAAE,KAAK,KAAI,EAAE;gBACtC,WAAW,EAAE,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAC7C,MAAM,EACN,QAAQ,CACX;aACJ,CAAC;QACN,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI,qDAAC,KAAK,EAAC,wCAAwC;YAChD,4DAAK,KAAK,EAAC,sBAAsB;gBAC7B,4DAAK,KAAK,EAAC,MAAM;oBACb,6DAAM,IAAI,EAAC,QAAQ,GAAG,CACpB;gBACN,4DAAK,KAAK,EAAC,MAAM;oBACb,6DAAM,IAAI,EAAC,aAAa,GAAG;oBAC3B,6DAAM,IAAI,EAAC,gBAAgB,GAAG;oBAC9B,6DAAM,IAAI,EAAC,SAAS,GAAG,CACrB,CACJ;YACN,6DAAM,IAAI,EAAC,SAAS,GAAG,CACpB,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Listen,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { GridApi } from 'ag-grid-community';\n\n/**\n * @category Data Tables\n * @description A container component for table actions, including search, export, and column management. Provides a unified interface for managing table interactions and data export.\n *\n * @slot column-manager - Used to place an at-column-manager\n * @slot search - Used to place an at-search\n * @slot dropdown-filters - Used to place an at-table-filters\n * @slot export-menu - Used to place an at-export-menu\n * @slot actions - Used to place actions related to table content\n\n*/\n@Component({\n    tag: 'at-table-actions',\n    shadow: false,\n})\nexport class AtTableActionsComponent {\n    /**\n     * AG Grid Api (provided by at-table createGrid method)\n     */\n    @Prop()\n    ag_grid: GridApi;\n\n    /**\n     * Emits an event when 'Export CSV' is pressed on provided at-table-export-menu\n     */\n    @Event() atExportCsv: EventEmitter;\n\n    /**\n     * Emits an event when 'Export PDF' is pressed on provided at-table-export-menu\n     */\n    @Event() atExportPdf: EventEmitter;\n\n    /**\n     * Emits an event when filters change\n     */\n    @Event() atChange: EventEmitter<any>;\n\n    @Listen('atuiChange')\n    changeHandler(event: CustomEvent) {\n        const target = event.target as HTMLElement;\n        switch (target.slot) {\n            case 'column-manager':\n                this.ag_grid.setColumnsVisible(\n                    [event.detail.id],\n                    event.detail.checked,\n                );\n                break;\n            case 'search':\n                this.ag_grid.setGridOption('quickFilterText', event.detail);\n                break;\n            case 'export-menu':\n                if (event.detail === 'CSV') this.atExportCsv.emit();\n                if (event.detail === 'PDF')\n                    this.atExportPdf.emit(this.getVisibleColumns());\n                break;\n            case 'dropdown-filters':\n                this.atChange.emit(event.detail);\n                break;\n        }\n    }\n\n    getVisibleColumns(): any[] {\n        return this.ag_grid.getAllDisplayedColumns().map((column) => {\n            const userProvidedColDef = column.getUserProvidedColDef();\n            return {\n                actualWidth: column.getActualWidth(),\n                field: userProvidedColDef?.field || '',\n                displayName: this.ag_grid.getDisplayNameForColumn(\n                    column,\n                    'header',\n                ),\n            };\n        });\n    }\n\n    render() {\n        return (\n            <Host class=\"relative flex flex-col gap-8 pt-8 pb-8\">\n                <div class=\"flex justify-between\">\n                    <div class=\"flex\">\n                        <slot name=\"search\" />\n                    </div>\n                    <div class=\"flex\">\n                        <slot name=\"export-menu\" />\n                        <slot name=\"column-manager\" />\n                        <slot name=\"actions\" />\n                    </div>\n                </div>\n                <slot name=\"filters\" />\n            </Host>\n        );\n    }\n}\n"]}