{"version":3,"file":"at-table-export-menu.js","sourceRoot":"","sources":["../../../../src/components/table-components/at-table-export-menu/at-table-export-menu.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,CAAC,EACD,KAAK,EACL,OAAO,EACP,MAAM,EAEN,KAAK,GACR,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAE/D;;;GAGG;AAMH,MAAM,OAAO,iBAAiB;IACf,EAAE,CAAM;IACV,YAAY,CAAM;IAE3B,KAAK,CAAC,iBAAiB;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAED;;OAEG;IACM,QAAQ,CAAuB;IAGxC,YAAY,CAAC,KAAY;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAE,KAAK,CAAC,MAA8B,CAAC,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,MAAM;QACF,OAAO,CACH,gEACI,KAAK,EAAE,MAAM,EACb,KAAK,EAAC,KAAK;YAEX,mEACI,IAAI,EAAC,cAAc,EACnB,QAAQ,EAAC,KAAK;gBAEd,kEACI,IAAI,EAAC,iBAAiB,EACtB,IAAI,EAAC,UAAU,EACf,IAAI,EAAC,eAAe,GACtB;gBACF,+DAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAQ,CACjD;YACb;gBACI,kEACI,IAAI,EAAC,eAAe,EACpB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EACjD,EAAE,EAAC,KAAK,GACV;gBACF,kEACI,IAAI,EAAC,eAAe,EACpB,KAAK,EAAE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EACjD,EAAE,EAAC,KAAK,GACV,CACA,CACA,CACb,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    h,\n    State,\n    Element,\n    Listen,\n    EventEmitter,\n    Event,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A menu component for exporting table data in CSV or PDF formats. Provides a user-friendly interface for exporting data from tables.\n */\n\n@Component({\n    tag: 'at-table-export-menu',\n    shadow: false,\n})\nexport class AtTableExportMenu {\n    @Element() el: any;\n    @State() translations: any;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    /**\n     * Emits id of the clicked button, either 'CSV' or 'PDF'.\n     */\n    @Event() atChange: EventEmitter<string>;\n\n    @Listen('atuiClick')\n    clickHandler(event: Event) {\n        this.atChange.emit((event.target as HTMLAtButtonElement).id);\n    }\n\n    render() {\n        return (\n            <at-menu\n                width={'auto'}\n                align=\"end\"\n            >\n                <at-tooltip\n                    slot=\"menu-trigger\"\n                    position=\"top\"\n                >\n                    <at-button\n                        slot=\"tooltip-trigger\"\n                        icon=\"save_alt\"\n                        type=\"secondaryText\"\n                    />\n                    <span>{this.translations.ATUI.TABLE.EXPORT_TO_FILE}</span>\n                </at-tooltip>\n                <div>\n                    <at-button\n                        type=\"secondaryText\"\n                        label={this.translations.ATUI.TABLE.EXPORT_AS_CSV}\n                        id=\"CSV\"\n                    />\n                    <at-button\n                        type=\"secondaryText\"\n                        label={this.translations.ATUI.TABLE.EXPORT_AS_PDF}\n                        id=\"PDF\"\n                    />\n                </div>\n            </at-menu>\n        );\n    }\n}\n"]}