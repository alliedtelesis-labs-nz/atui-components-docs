{"version":3,"file":"at-table-filter-menu.js","sourceRoot":"","sources":["../../../../src/components/table-components/at-table-filter-menu/at-table-filter-menu.tsx"],"names":[],"mappings":"AAAA,OAAO,EACH,SAAS,EACT,CAAC,EACD,IAAI,EACJ,KAAK,EAEL,IAAI,EACJ,KAAK,EACL,OAAO,EACP,KAAK,GACR,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAE/D;;;GAGG;AAMH,MAAM,OAAO,iBAAiB;IAC1B;;OAEG;IAEH,QAAQ,CAAW;IAEnB;;OAEG;IAEH,QAAQ,GAAa,EAAE,CAAC;IAEf,YAAY,CAAM;IAChB,EAAE,CAA+B;IAE5C;;OAEG;IACM,QAAQ,CAAyB;IAE1C,IAAY,eAAe;QACvB,OAAO,IAAI,CAAC,QAAQ;aACf,MAAM,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,KAAK,UAAU,CAAC;aAC/C,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;YACd,SAAS,EAAE,MAAM,CAAC,KAAK;YACvB,KAAK,EAAE,MAAM,CAAC,KAAK;SACtB,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,KAAK,CAAC,iBAAiB;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzD,CAAC;IAGD,oBAAoB,CAAC,QAAkB;QACnC,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE,CAAC;IACnC,CAAC;IAEO,kBAAkB,CAAC,KAA4B;QACnD,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,CAAC;IAED,MAAM;QACF,OAAO,CACH,EAAC,IAAI;YACD,gEACI,SAAS,EAAE,KAAK,EAChB,KAAK,EAAC,aAAa,EACnB,KAAK,EAAC,YAAY;gBAElB,mEACI,IAAI,EAAC,cAAc,EACnB,QAAQ,EAAC,KAAK;oBAEd,kEACI,IAAI,EAAC,iBAAiB,EACtB,IAAI,EAAC,kBAAkB,EACvB,IAAI,EAAC,aAAa,GACpB;oBACF,+DAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAQ,CAC9C;gBACb,4DAAK,KAAK,EAAC,eAAe;oBACtB,0EACI,KAAK,EAAC,OAAO,EACb,OAAO,EAAE,IAAI,CAAC,eAAe,EAC7B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,YAAY,EAAE,CAAC,KAA4B,EAAE,EAAE,CAC3C,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,GAEpC,CACA,CACA,CACP,CACV,CAAC;IACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n    Watch,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A menu component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n */\n\n@Component({\n    tag: 'at-table-filter-menu',\n    shadow: false,\n})\nexport class AtTableFilterMenu {\n    /**\n     * Column definitions used in your at-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected filter columns\n     */\n    @Prop({ mutable: true })\n    selected: string[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtTableFilterMenuElement;\n\n    /**\n     * Emits selected columns when checkbox selection changes\n     */\n    @Event() atChange: EventEmitter<string[]>;\n\n    private get filteredColumns() {\n        return this.col_defs\n            .filter((colDef) => colDef.field !== 'Checkbox')\n            .map((colDef) => ({\n                option_id: colDef.field,\n                label: colDef.field,\n            }));\n    }\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    @Watch('selected')\n    handleSelectedChange(newValue: string[]) {\n        this.selected = newValue || [];\n    }\n\n    private handleColumnSelect(event: CustomEvent<string[]>): void {\n        const newValue = event.detail || [];\n        this.selected = newValue;\n        this.atChange.emit(this.selected);\n    }\n\n    render() {\n        return (\n            <Host>\n                <at-menu\n                    autoclose={false}\n                    width=\"fit-content\"\n                    class=\"self-start\"\n                >\n                    <at-tooltip\n                        slot=\"menu-trigger\"\n                        position=\"top\"\n                    >\n                        <at-button\n                            slot=\"tooltip-trigger\"\n                            type=\"secondaryOutline\"\n                            icon=\"filter_list\"\n                        />\n                        <span>{this.translations.ATUI.TABLE.FILTER_DATA}</span>\n                    </at-tooltip>\n                    <div class=\"flex flex-col\">\n                        <at-checkbox-group\n                            class=\"w-fit\"\n                            options={this.filteredColumns}\n                            value={this.selected}\n                            onAtuiChange={(event: CustomEvent<string[]>) =>\n                                this.handleColumnSelect(event)\n                            }\n                        />\n                    </div>\n                </at-menu>\n            </Host>\n        );\n    }\n}\n"]}