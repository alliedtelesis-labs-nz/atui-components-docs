{"version":3,"file":"atui-prompt-message.js","sourceRoot":"","sources":["../../../../src/components/prompt/atui-prompt-message/atui-prompt-message.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Host,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Fragment,\n    State,\n    Element,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\nimport { MessageRole } from '../../../types/prompt';\nimport { fetchTranslations } from '../../../utils/translation';\n\nconst messageVariants = cva('text-base max-w-4xl rounded-lg px-8 py-4', {\n    variants: {\n        role: {\n            user: 'ml-auto bg-surface-2 text-dark',\n            assistant: 'mr-auto text-dark',\n        },\n        loading: {\n            true: 'animate-pulse',\n            false: '',\n        },\n    },\n    defaultVariants: {\n        role: 'user',\n        loading: false,\n    },\n});\n\n/**\n * @category Prompt\n * @description A message component for displaying individual chat messages with different roles (user, assistant). Supports optional avatars, loading states, error states, and interactive actions like copy, edit, and retry.\n */\n@Component({\n    tag: 'atui-prompt-message',\n    shadow: false,\n})\nexport class AtuiPromptMessage {\n    /**\n     * The role/type of the message sender (only 'user' and 'assistant' are supported)\n     */\n    @Prop() role: Exclude<MessageRole, 'system'> = 'user';\n\n    /**\n     * The message content text\n     */\n    @Prop() content: string = '';\n\n    /**\n     * URL for a custom avatar image\n     */\n    @Prop() avatar: string;\n\n    /**\n     * Display name for the message sender\n     */\n    @Prop() name: string;\n\n    /**\n     * Shows loading state with animated placeholder content\n     */\n    @Prop() loading: boolean = false;\n\n    /**\n     * Shows error state styling and enables retry action\n     */\n    @Prop() error: boolean = false;\n\n    /**\n     * Custom error message text (defaults to generic error message)\n     */\n    @Prop() error_message: string;\n\n    /**\n     * Emitted when the copy action is triggered\n     */\n    @Event() atuiCopy: EventEmitter<string>;\n\n    /**\n     * Emitted when positive feedback action is triggered\n     */\n    @Event() atuiFeedbackPositive: EventEmitter<void>;\n\n    /**\n     * Emitted when negative feedback action is triggered\n     */\n    @Event() atuiFeedbackNegative: EventEmitter<void>;\n\n    /**\n     * Emitted when the retry action is triggered (for assistant messages with errors)\n     */\n    @Event() atuiRetry: EventEmitter<void>;\n\n    /**\n     * Emitted when the edit action is triggered (for user messages)\n     */\n    @Event() atuiEdit: EventEmitter<string>;\n\n    /**\n     * @slot - Custom message content (alternative to using the content prop)\n     */\n    @State() translations: any;\n\n    errorEl: HTMLDivElement;\n    @Element() el: HTMLAtuiInputElement;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.errorEl);\n    }\n\n    private handleCopy = () => {\n        this.atuiCopy.emit(this.content);\n    };\n\n    private handleRetry = () => {\n        this.atuiRetry.emit();\n    };\n\n    private handleEdit = () => {\n        this.atuiEdit.emit(this.content);\n    };\n\n    private handleFeedbackPositive = () => {\n        this.atuiFeedbackPositive.emit();\n    };\n\n    private handleFeedbackNegative = () => {\n        this.atuiFeedbackNegative.emit();\n    };\n\n    private renderAvatar() {\n        const variant = this.role === 'user' ? 'primary' : 'secondary';\n\n        const initials = this.name\n            ? this.name.charAt(0).toUpperCase()\n            : this.role === 'user'\n              ? 'U'\n              : 'A';\n\n        return (\n            <atui-avatar\n                src={this.avatar}\n                alt={this.name || this.role}\n                initials={initials}\n                variant={variant}\n                size=\"sm\"\n                data-name=\"message-avatar\"\n            />\n        );\n    }\n\n    private renderActions() {\n        if (this.loading) return null;\n\n        return (\n            <div\n                class=\"mt-2 flex items-center justify-end gap-2\"\n                data-name=\"message-actions\"\n            >\n                {this.role === 'user' && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"edit\"\n                            class=\"text-xs\"\n                            onClick={this.handleEdit}\n                            data-name=\"edit-button\"\n                        />\n                        <span slot=\"tooltip-content\">Edit</span>\n                    </atui-tooltip>\n                )}\n\n                {this.role === 'assistant' && (\n                    <Fragment>\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                icon=\"thumb_up\"\n                                onClick={this.handleFeedbackPositive}\n                                data-name=\"feedback-positive-button\"\n                            />\n                            <span slot=\"tooltip-content\">Helpful</span>\n                        </atui-tooltip>\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                type=\"secondaryText\"\n                                icon=\"thumb_down\"\n                                onClick={this.handleFeedbackNegative}\n                                data-name=\"feedback-negative-button\"\n                            />\n                            <span slot=\"tooltip-content\">Not helpful</span>\n                        </atui-tooltip>\n\n                        <atui-tooltip position=\"top\">\n                            <atui-button\n                                slot=\"tooltip-trigger\"\n                                size=\"sm\"\n                                icon=\"content_copy\"\n                                type=\"secondaryText\"\n                                onClick={this.handleCopy}\n                                data-name=\"copy-button\"\n                            />\n                            <span slot=\"tooltip-content\">Copy</span>\n                        </atui-tooltip>\n                    </Fragment>\n                )}\n                {this.role === 'assistant' && this.error && (\n                    <atui-tooltip position=\"top\">\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            size=\"sm\"\n                            type=\"secondaryText\"\n                            icon=\"refresh\"\n                            onClick={this.handleRetry}\n                            data-name=\"retry-button\"\n                        />\n                        <span slot=\"tooltip-content\">Retry</span>\n                    </atui-tooltip>\n                )}\n            </div>\n        );\n    }\n\n    private renderContent() {\n        if (this.loading) {\n            return (\n                <div\n                    class=\"py-8\"\n                    data-name=\"loading-content\"\n                >\n                    <atui-loading\n                        variant=\"typing\"\n                        size=\"sm\"\n                    />\n                </div>\n            );\n        }\n\n        if (this.error) {\n            return (\n                <div\n                    class=\"space-y-2\"\n                    ref={(el) => (this.errorEl = el)}\n                    data-name=\"error-content\"\n                >\n                    <p class=\"text-destructive\">\n                        {this.error_message ||\n                            this.translations.ATUI.PROMPT\n                                .ERROR_GENERATING_RESPONSE}\n                    </p>\n                </div>\n            );\n        }\n\n        return (\n            <div\n                class=\"prose prose-sm preserve-newlines max-w-none\"\n                data-name=\"message-content\"\n            >\n                <slot></slot>\n                {this.content}\n            </div>\n        );\n    }\n\n    render() {\n        const messageClasses = messageVariants({\n            role: this.role,\n            loading: this.loading,\n        });\n\n        return (\n            <Host\n                class=\"flex w-full gap-8\"\n                data-name=\"message-container\"\n            >\n                {this.avatar && this.renderAvatar()}\n\n                <div class=\"space-y-1 flex-1\">\n                    <div class=\"flex items-center gap-8\">\n                        {this.name && (\n                            <span\n                                class=\"text-sm text-light\"\n                                data-name=\"message-name\"\n                            >\n                                {this.name}\n                            </span>\n                        )}\n                    </div>\n\n                    <div class={messageClasses}>{this.renderContent()}</div>\n\n                    {this.renderActions()}\n                </div>\n            </Host>\n        );\n    }\n}\n"]}