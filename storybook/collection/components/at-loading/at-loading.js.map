{"version":3,"file":"at-loading.js","sourceRoot":"","sources":["../../../src/components/at-loading/at-loading.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,eAAe,CAAC;AAMzD,MAAM,eAAe,GAAG;IACpB,IAAI,EAAE;QACF,OAAO,EAAE,cAAc;QACvB,KAAK,EAAE,6BAA6B;QACpC,SAAS,EAAE,yBAAyB;KACvC;IACD,IAAI,EAAE;QACF,EAAE,EAAE,SAAS;QACb,EAAE,EAAE,WAAW;QACf,EAAE,EAAE,SAAS;KAChB;IACD,WAAW,EAAE;QACT,EAAE,EAAE,kBAAkB;QACtB,EAAE,EAAE,oBAAoB;QACxB,EAAE,EAAE,oBAAoB;KAC3B;CACJ,CAAC;AAEF;;;GAGG;AAMH,MAAM,OAAO,kBAAkB;IAL/B;QAMI;;WAEG;QAEH,YAAO,GAAmB,SAAS,CAAC;QAEpC;;WAEG;QAEH,SAAI,GAAgB,SAAS,CAAC;QAE9B;;WAEG;QAEH,SAAI,GAAgB,IAAI,CAAC;QAEzB;;WAEG;QAEH,SAAI,GAAW,SAAS,CAAC;KA+D5B;IA7DG,IAAI,WAAW;QACX,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,WAAW;QACX,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,kBAAkB;QAClB,OAAO,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAEO,aAAa;QACjB,MAAM,WAAW,GACb,IAAI,CAAC,IAAI,KAAK,SAAS;YACnB,CAAC,CAAC,gBAAgB;YAClB,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,OAAO;gBACrB,CAAC,CAAC,+BAA+B;gBACjC,CAAC,CAAC,2BAA2B,CAAC;QAExC,OAAO,CACH,EAAC,IAAI,IACD,KAAK,EAAE,GAAG,WAAW,IAAI,IAAI,CAAC,kBAAkB,8IAA8I,EAC9L,IAAI,EAAC,QAAQ,gBACF,SAAS,GACtB,CACL,CAAC;IACN,CAAC;IAEO,YAAY;QAChB,OAAO,CACH,EAAC,IAAI,IACD,KAAK,EAAE,yBAAyB,EAChC,IAAI,EAAC,QAAQ,gBACF,QAAQ;YAEnB,YACI,KAAK,EAAC,4EAA4E,EAClF,KAAK,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,GAC5B;YACR,YACI,KAAK,EAAC,4EAA4E,EAClF,KAAK,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,GAC9B;YACR,YACI,KAAK,EAAC,4EAA4E,EAClF,KAAK,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,GAC9B,CACL,CACV,CAAC;IACN,CAAC;IAED,MAAM;QACF,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;YACnB,KAAK,QAAQ;gBACT,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;YAC/B,KAAK,SAAS,CAAC;YACf;gBACI,OAAO,IAAI,CAAC,aAAa,EAAE,CAAC;QACpC,CAAC;IACL,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Prop, Host } from '@stencil/core';\n\nexport type LoadingVariant = 'spinner' | 'dots' | 'typing' | 'wave';\nexport type LoadingType = 'default' | 'error' | 'secondary';\nexport type LoadingSize = 'sm' | 'md' | 'lg';\n\nconst loadingVariants = {\n    type: {\n        default: 'text-primary',\n        error: 'text-destructive-foreground',\n        secondary: 'text-primary-foreground',\n    },\n    size: {\n        sm: 'text-sm',\n        md: 'text-base',\n        lg: 'text-lg',\n    },\n    spinnerSize: {\n        sm: 'h-16 w-16 border',\n        md: 'h-32 w-32 border-2',\n        lg: 'h-64 w-64 border-4',\n    },\n};\n\n/**\n * @category Feedback\n * @description A versatile loading component with multiple animation types including spinner, dots, typing, wave, and thinking indicators. Perfect for indicating ongoing processes or data fetching states across different contexts.\n */\n@Component({\n    tag: 'at-loading',\n    styleUrl: 'at-loading.scss',\n    shadow: false,\n})\nexport class AtLoadingComponent {\n    /**\n     * Type of loading animation to display\n     */\n    @Prop()\n    variant: LoadingVariant = 'spinner';\n\n    /**\n     * Visual type/color of the loading indicator\n     */\n    @Prop()\n    type: LoadingType = 'default';\n\n    /**\n     * Size of the loading indicator\n     */\n    @Prop()\n    size: LoadingSize = 'md';\n\n    /**\n     * Custom text to display with text-based animations\n     */\n    @Prop()\n    text: string = 'Loading';\n\n    get typeClasses() {\n        return loadingVariants.type[this.type];\n    }\n\n    get sizeClasses() {\n        return loadingVariants.size[this.size];\n    }\n\n    get spinnerSizeClasses() {\n        return loadingVariants.spinnerSize[this.size];\n    }\n\n    private renderSpinner() {\n        const borderColor =\n            this.type === 'default'\n                ? 'border-primary'\n                : this.type === 'error'\n                  ? 'border-destructive-foreground'\n                  : 'border-primary-foreground';\n\n        return (\n            <Host\n                class={`${borderColor} ${this.spinnerSizeClasses} inline-block animate-spin rounded-full border-solid border-e-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]`}\n                role=\"status\"\n                aria-label=\"Loading\"\n            />\n        );\n    }\n\n    private renderTyping() {\n        return (\n            <Host\n                class={`flex items-center gap-4`}\n                role=\"status\"\n                aria-label=\"Typing\"\n            >\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-gray-500\"\n                    style={{ animationDelay: '0ms' }}\n                ></span>\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-gray-500\"\n                    style={{ animationDelay: '250ms' }}\n                ></span>\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-gray-500\"\n                    style={{ animationDelay: '500ms' }}\n                ></span>\n            </Host>\n        );\n    }\n\n    render() {\n        switch (this.variant) {\n            case 'typing':\n                return this.renderTyping();\n            case 'spinner':\n            default:\n                return this.renderSpinner();\n        }\n    }\n}\n"]}