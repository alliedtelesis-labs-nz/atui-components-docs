{"version":3,"file":"at-time-range.js","sourceRoot":"","sources":["../../../src/components/at-time-range/at-time-range.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    State,\n    Element,\n    Host,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport {\n    AbreviatedTimeUnits,\n    FullTimeUnits,\n    SelectedTimeRangeExtended,\n    TimePresets,\n} from '../../models/at-time-range.models';\nimport {\n    DateRange,\n    DateRangeStrings,\n    Duration,\n    MIN_DATE,\n    TimeRangeDisplay,\n    TimeUnit,\n    TimeWithUnit,\n} from '../../types';\nimport { TimeDateUtil } from '../../utils/time-date.util';\nimport moment from 'moment';\nimport { fetchTranslations } from '../../utils/translation';\n\n/**\n * @category Form Controls\n * @description A time range component for selecting time periods.\n */\n\n@Component({\n    tag: 'at-time-range',\n    shadow: false,\n})\nexport class AtTimeRangeComponent {\n    /**\n     * Selected time range.\n     */\n    @Prop()\n    selected_time_range: SelectedTimeRangeExtended = {\n        selected: {\n            unit: TimeUnit.HOURS,\n            value: 1,\n        },\n    };\n\n    /**\n     * Lower limit of the time range.\n     */\n    @Prop()\n    range_limit = 7;\n\n    /**\n     * Define the presets for the relative time ranges.\n     */\n    @Prop()\n    presets: TimePresets[];\n\n    /**\n     * Enable relative time selection.\n     */\n    @Prop()\n    enable_relative_time = true;\n\n    /**\n     * Custom error message to show when an invalid time is inputted.\n     */\n    @Prop()\n    custom_error_message = null;\n\n    /**\n     * Enable all time selection.\n     */\n    @Prop()\n    show_all_time = false;\n\n    /**\n     * Enable range limit setting. If set to false, use Jan 1, 1985 as the lower limit of time range, ignoring\n     * the value of range limit.\n     */\n    @Prop()\n    enable_range_limit = true;\n\n    @State() today: Date;\n    @State() lowerLimit;\n    @State() defaultFromDate;\n    @State() translations: any;\n    @State() relativeTimeMenuEl;\n    @State() absoluteTimeMenuEl;\n    @Element() el;\n\n    units = [\n        TimeUnit.MINUTES,\n        TimeUnit.HOURS,\n        TimeUnit.DAYS,\n        TimeUnit.WEEKS,\n        TimeUnit.MONTHS,\n        TimeUnit.YEARS,\n    ];\n    minSeconds = 300;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.el);\n        this.today = new Date();\n    }\n\n    componentWillRender() {\n        this.lowerLimit = this.enable_range_limit\n            ? moment().subtract(this.range_limit, 'day').toDate()\n            : TimeDateUtil.floorDateByTimeUnit(MIN_DATE, Duration.HOURS);\n        this.defaultFromDate = moment(this.today).subtract(1, 'hours').toDate();\n    }\n\n    getLongUnitDisplay(time: SelectedTimeRangeExtended): string {\n        if (time.custom || !time.selected) {\n            return;\n        }\n        return FullTimeUnits[time.selected['unit']];\n    }\n\n    getRelativeDate(time: SelectedTimeRangeExtended): DateRange {\n        if (time.custom || !time.selected) {\n            return;\n        }\n        return TimeDateUtil.getRelativeDateRange(time.selected as TimeWithUnit);\n    }\n\n    getCustomStartAndEndDate(selectedTime: SelectedTimeRangeExtended): {\n        fromDate: Date;\n        toDate: Date;\n    } {\n        if (!selectedTime.custom) {\n            return;\n        }\n\n        const { from, to } = selectedTime.custom;\n        const fromDate = moment(from).toDate();\n        const toDate = moment(to).toDate();\n        return { fromDate, toDate };\n    }\n\n    getShortUnitDisplay(time: TimeWithUnit): string {\n        return AbreviatedTimeUnits[time.unit];\n    }\n\n    /**\n     * Emits an event containing the selected time range when it changes\n     */\n    @Event()\n    atuiChange: EventEmitter<SelectedTimeRangeExtended>;\n\n    onChangeCustomTime(customTime: DateRangeStrings): void {\n        this.selected_time_range = {\n            selected: TimeRangeDisplay.CUSTOM,\n            custom: customTime,\n        };\n\n        this.atuiChange.emit({ ...this.selected_time_range });\n    }\n\n    onChangeRelativeTime(time: TimeWithUnit | TimeRangeDisplay.ALL): void {\n        this.selected_time_range = {\n            selected: time,\n        };\n\n        this.atuiChange.emit({ ...this.selected_time_range });\n    }\n\n    get buttonGroupOptions() {\n        const output = [];\n        if (this.selected_time_range.selected === TimeRangeDisplay.ALL) {\n            output.push({\n                value: (\n                    <div class=\"text-dark flex items-center gap-4 font-normal\">\n                        <span class=\"font-medium\">\n                            {this.translations.ATUI.TIME.ALL_TIME_LABEL}\n                        </span>\n                    </div>\n                ),\n            });\n        } else if (this.selected_time_range.custom) {\n            output.push({\n                value: [\n                    <div class=\"text-dark flex items-center gap-4 font-normal\">\n                        <span>\n                            {this.getCustomStartAndEndDate(\n                                this.selected_time_range,\n                            )?.fromDate.toLocaleString()}\n                        </span>\n                        <span class=\"icon-md material-icons text-light\">\n                            arrow_forward\n                        </span>\n                        <span>\n                            {this.selected_time_range.custom.lockEndDateToNow\n                                ? 'NOW'\n                                : this.getCustomStartAndEndDate(\n                                      this.selected_time_range,\n                                  )?.toDate.toLocaleString()}\n                        </span>\n                    </div>,\n                ],\n            });\n        } else {\n            output.push({\n                value: (\n                    <div class=\"text-dark flex items-center gap-4 font-normal\">\n                        <span class=\"font-medium\">\n                            {this.translations.ATUI.TIME.LAST}\n                            {` `}\n                            {this.selected_time_range.selected['value']}\n                            {` `}\n                            {\n                                this.translations.ATUI.TIME[\n                                    this.getLongUnitDisplay(\n                                        this.selected_time_range,\n                                    )\n                                ]\n                            }{' '}\n                            :\n                        </span>\n                        <span>\n                            {this.getRelativeDate(\n                                this.selected_time_range,\n                            ).startDate.toLocaleString()}\n                        </span>\n                        <span class=\"icon-md material-icons text-light\">\n                            arrow_forward\n                        </span>\n                        <span>NOW</span>\n                    </div>\n                ),\n            });\n        }\n        output.push({\n            value: (\n                <div class=\"flex items-center\">\n                    <span class=\"icon-md material-icons text-light\">\n                        date_range\n                    </span>\n                </div>\n            ),\n        });\n        return output;\n    }\n\n    get predefinedTimeRanges() {\n        const output = [];\n        this.presets.forEach((timerange) => {\n            output.push({\n                value: (\n                    <span>\n                        {timerange.value}\n                        {this.getShortUnitDisplay(timerange)}\n                    </span>\n                ),\n            });\n        });\n        output.push({\n            value: (\n                <div class=\"flex items-center\">\n                    <span class=\"material-icons text-body text-light\">\n                        date_range\n                    </span>\n                </div>\n            ),\n        });\n        return output;\n    }\n\n    render() {\n        return (\n            <Host class=\"relative flex justify-center gap-8\">\n                {this.enable_relative_time && (\n                    <at-button-group\n                        options={this.buttonGroupOptions}\n                        onAtuiIndexChange={(event) =>\n                            (event.detail === 0 &&\n                                this.relativeTimeMenuEl.focus()) ||\n                            (event.detail === 1 &&\n                                this.absoluteTimeMenuEl.focus())\n                        }\n                    />\n                )}\n                {!this.enable_relative_time && (\n                    <at-button-group\n                        options={this.predefinedTimeRanges}\n                        onAtuiIndexChange={(event) => {\n                            if (event.detail < this.presets.length) {\n                                this.onChangeRelativeTime(\n                                    this.presets[event.detail],\n                                );\n                            } else if (\n                                event.detail ===\n                                this.predefinedTimeRanges.length - 1\n                            ) {\n                                this.absoluteTimeMenuEl.focus();\n                            }\n                        }}\n                    />\n                )}\n                <div\n                    ref={(el) => (this.relativeTimeMenuEl = el)}\n                    class=\"absolute top-[42px] z-10 h-0 overflow-hidden bg-white focus-within:h-fit focus-within:overflow-visible focus:h-fit\"\n                    tabindex={0}\n                    onChange={(event) => event.stopPropagation()}\n                >\n                    <at-time-with-unit\n                        units={this.units}\n                        common_options={this.presets}\n                        min_date={this.lowerLimit}\n                        min_seconds={this.minSeconds}\n                        initial_selected_time={\n                            this.selected_time_range.selected ===\n                            TimeRangeDisplay.CUSTOM\n                                ? TimeRangeDisplay.ALL\n                                : this.selected_time_range.selected\n                        }\n                        custom_error_message={this.custom_error_message}\n                        show_all_time={this.show_all_time}\n                        onAtuiSubmit={(event) =>\n                            this.onChangeRelativeTime(\n                                (event as CustomEvent).detail,\n                            )\n                        }\n                        onAtuiCancel={() => {\n                            this.relativeTimeMenuEl.focus();\n                            this.relativeTimeMenuEl.blur();\n                        }}\n                    />\n                </div>\n                <div\n                    ref={(el) => (this.absoluteTimeMenuEl = el)}\n                    class=\"absolute top-[42px] z-10 h-0 overflow-hidden bg-white focus-within:h-fit focus-within:overflow-visible focus:h-fit\"\n                    tabindex={0}\n                    onChange={(event) => event.stopPropagation()}\n                >\n                    <at-custom-time-range\n                        min_date={this.lowerLimit}\n                        default_to_date={this.today}\n                        default_from_date={this.defaultFromDate}\n                        from_date_value={\n                            this.getCustomStartAndEndDate(\n                                this.selected_time_range,\n                            )?.fromDate\n                        }\n                        to_date_value={\n                            this.getCustomStartAndEndDate(\n                                this.selected_time_range,\n                            )?.toDate\n                        }\n                        lock_end_date_to_now={\n                            this.selected_time_range.custom?.lockEndDateToNow\n                        }\n                        onAtuiSubmit={(event) =>\n                            this.onChangeCustomTime(\n                                (event as CustomEvent).detail,\n                            )\n                        }\n                        onAtuiCancel={() => {\n                            this.absoluteTimeMenuEl.focus();\n                            this.absoluteTimeMenuEl.blur();\n                        }}\n                    />\n                </div>\n            </Host>\n        );\n    }\n}\n"]}