{"version":3,"file":"atui-list-selector.js","sourceRoot":"","sources":["../../../src/components/atui-list-selector/atui-list-selector.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    EventEmitter,\n    Prop,\n    h,\n    Host,\n    Element,\n    Event,\n} from '@stencil/core';\nimport { AtuiEvent } from '../../types/events';\n\nexport interface ListSelectorItem {\n    id: string;\n    title: string;\n    subtitle?: string;\n    icon?: string;\n    tooltip?: string;\n    prefix?: string;\n    badgeText?: string;\n    badgeTooltip?: string;\n    hasInfoButton?: boolean;\n}\n\n/**\n * @category Navigation\n * @description A list selector component for selecting an item from a list.\n *\n * @slot - Placed after the list items\n */\n@Component({\n    tag: 'atui-list-selector',\n    shadow: false,\n})\nexport class AtuiListSelector {\n    /**\n     * List of items.\n     */\n    @Prop()\n    options: ListSelectorItem[] = [];\n\n    /**\n     * The selected item.\n     */\n    @Prop({ mutable: true })\n    selected_item_id: string;\n\n    /**\n     * Whether each item has a bottom border.\n     */\n    @Prop()\n    has_border: boolean;\n\n    /**\n     * Emits an event when the selected item is changed, the `event.detail` is the ListSelectorItem\n     */\n    @Event()\n    atuiChange: EventEmitter<ListSelectorItem>;\n\n    /**\n     * Emits when event when the info button of an item is clicked\n     */\n    @Event()\n    atuiInfoButtonClick: EventEmitter<AtuiEvent>;\n\n    @Element() el: HTMLAtuiListSelectorElement;\n    listItemEls: HTMLAtuiListSelectorItemElement[] = [];\n\n    onSelect(item: ListSelectorItem): void {\n        this.selected_item_id = item.id;\n        this.atuiChange.emit(item);\n    }\n\n    onClickInfoButton(event: Event): void {\n        this.atuiInfoButtonClick.emit({\n            originalEvent: event,\n            componentType: 'atui-list-selector',\n        });\n    }\n\n    focusAndClickRelativeItem(relativePosition: number) {\n        const indexOfActiveItem = this.listItemEls.indexOf(\n            this.el.ownerDocument\n                .activeElement as HTMLAtuiListSelectorItemElement,\n        );\n        const nextActiveItem =\n            this.listItemEls[\n                (indexOfActiveItem +\n                    relativePosition +\n                    this.listItemEls.length) %\n                    this.listItemEls.length\n            ];\n        nextActiveItem.click();\n        nextActiveItem.focus();\n    }\n\n    handleKeyDown(event: KeyboardEvent) {\n        if (event.key === 'ArrowRight' || event.key === 'ArrowDown') {\n            event.preventDefault();\n            this.focusAndClickRelativeItem(1);\n        } else if (event.key === 'ArrowUp' || event.key === 'ArrowLeft') {\n            event.preventDefault();\n            this.focusAndClickRelativeItem(-1);\n        }\n    }\n\n    get getListItems(): any {\n        return this.options.map((item) => (\n            <atui-tooltip\n                position=\"right\"\n                disabled={!item.tooltip}\n            >\n                <div slot=\"tooltip-trigger\">\n                    <atui-list-selector-item\n                        item_id={item.id}\n                        item_title={item.title}\n                        subtitle={item.subtitle}\n                        icon={item.icon}\n                        item_prefix={item.prefix}\n                        has_border={this.has_border}\n                        is_selected={\n                            this.selected_item_id &&\n                            item.id === this.selected_item_id\n                        }\n                        onClick={() => this.onSelect(item)}\n                        tabindex=\"0\"\n                        ref={(el) => this.listItemEls.push(el)}\n                    >\n                        {item.badgeText && item.badgeTooltip && (\n                            <atui-tooltip\n                                slot=\"badge\"\n                                position=\"right\"\n                            >\n                                <atui-badge\n                                    class=\"ml-4\"\n                                    slot=\"tooltip-trigger\"\n                                    impact=\"high\"\n                                    type=\"info\"\n                                    label={item.badgeText}\n                                />\n                                <span slot=\"tooltip-content\">\n                                    {item.badgeTooltip}\n                                </span>\n                            </atui-tooltip>\n                        )}\n\n                        {item.hasInfoButton && (\n                            <button\n                                slot=\"info\"\n                                class=\"sm\"\n                                color=\"primary\"\n                                onClick={(event) =>\n                                    this.onClickInfoButton(event)\n                                }\n                            >\n                                <i class=\"material-icons\">help_outline</i>\n                            </button>\n                        )}\n                    </atui-list-selector-item>\n                </div>\n                <span slot=\"tooltip-content\">{item.tooltip}</span>\n            </atui-tooltip>\n        ));\n    }\n\n    render() {\n        return (\n            <Host onKeyDown={(event) => this.handleKeyDown(event)}>\n                <slot name=\"header\"></slot>\n\n                {!!this.options.length && (\n                    <nav class=\"flex-fill overflow-visible pb-16\">\n                        <div\n                            class=\"flex flex-col\"\n                            role=\"menu\"\n                        >\n                            {this.getListItems}\n                        </div>\n                    </nav>\n                )}\n                <slot />\n            </Host>\n        );\n    }\n}\n"]}