{"version":3,"file":"at-select.js","sourceRoot":"","sources":["../../../src/components/at-select/at-select.tsx"],"names":[],"mappings":"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","sourcesContent":["import {\n    Component,\n    Prop,\n    State,\n    Element,\n    h,\n    Host,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { fetchTranslations } from '../../utils/translation';\nimport { classlist } from '../../utils/classlist';\nimport { SelectOption } from '../../types/select';\nimport {\n    handleArrowNavigation,\n    handleHomeEndNavigation,\n} from '../../utils/keyboard-navigation';\n\nconst inputVariantsConfig = {\n    variants: {\n        focused: {\n            false: 'ring-active-foreground/30',\n            true: 'pointer-events-none',\n        },\n        disabled: {\n            false: 'focus-within:ring-active-foreground/30 cursor-pointer bg-white',\n            true: 'bg-surface-1 !text-disabled pointer-events-none border-none',\n        },\n        readonly: {\n            false: 'focus-within:ring-active-foreground/30',\n            true: '!bg-surface-1 !text-dark cursor-text border-none',\n        },\n        invalid: {\n            false: 'border-med focus-within:border-active-dark focus-within:ring-active-foreground/30',\n            true: 'border-error-base focus-within:border-error-base focus-within:ring-destructive-foreground/30',\n        },\n    },\n    defaultVariants: {\n        disabled: false,\n        readonly: false,\n        invalid: false,\n    },\n};\n\nconst optionVariantsConfig = {\n    variants: {\n        active: {\n            true: 'bg-active-light text-active',\n            false: 'hover:bg-disabled-light bg-white',\n        },\n    },\n};\n\n/**\n * @category Form Controls\n * @description A dropdown selection component for choosing single values from a list of options. Features search functionality, keyboard navigation, and accessibility support.\n */\n@Component({\n    tag: 'at-select',\n    shadow: false,\n})\nexport class AtSelectComponent {\n    /**\n     * Value of the currently selected option\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    /**\n     * Sets the options in the dropdown\n     */\n    @Prop()\n    options: SelectOption[];\n\n    /**\n     * Label of the input.\n     */\n    @Prop()\n    label?: string;\n\n    /**\n     * Short description or validation hint if required.\n     */\n    @Prop()\n    hint_text?: string;\n\n    /**\n     * Optional info icon with detailed tooltip description. Displayed at right of label.\n     */\n    @Prop()\n    info_text?: string;\n\n    /**\n     * Placeholder for the select.\n     */\n    @Prop()\n    placeholder?: string;\n\n    /**\n     * Error message visible when input is valid.\n     */\n    @Prop()\n    error_text?: string;\n\n    /**\n     * Indicated form field is required.\n     */\n    @Prop()\n    required?: boolean;\n\n    /**\n     * Set the input to appear valid.\n     */\n    @Prop()\n    invalid?: boolean;\n\n    /**\n     * Disable user interaction. Disabled state should be applied via form control.\n     */\n    @Prop()\n    disabled?: boolean;\n\n    /**\n     * Set input to readonly mode, allows users to select any active values.\n     */\n    @Prop()\n    readonly?: boolean;\n\n    /**\n     * Set the select input to be clearable. Only enabled on typeahead selects.\n     */\n    @Prop()\n    clearable?: boolean;\n\n    /**\n     * Set the select to appear as a typeahead input.\n     */\n    @Prop()\n    typeahead?: boolean = false;\n\n    /**\n     * Close the menu when the user clicks within the menu panel. Default for single selection menus.\n     */\n    @Prop()\n    autoclose?: boolean = true;\n\n    inputEl: HTMLInputElement;\n    @State() searchText: string = '';\n    @State() isOpen: boolean = false;\n    @State() translations: any;\n    @State() hasMatchingOptions: boolean = false;\n    @State() parentWidth: string;\n\n    @Element() el: HTMLElement;\n    private menuId = `dropdown-${Math.random().toString(36).substring(2, 11)}`;\n    private menuRef: HTMLAtMenuElement;\n    private optionEls: HTMLLIElement[] = [];\n    private searchInputEl: HTMLInputElement;\n\n    /**\n     * Emits an event containing the selected value when changed.\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    async componentWillLoad(): Promise<void> {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    componentDidLoad() {\n        this.el\n            .querySelectorAll('li[data-name=\"select-option\"]')\n            .forEach((option) => {\n                this.optionEls.push(option as HTMLLIElement);\n            });\n        const parentRect = this.el.getBoundingClientRect();\n        this.parentWidth = `${parentRect.width}px`;\n    }\n\n    private updateIsOpenState(event: CustomEvent<boolean>): void {\n        this.isOpen = event.detail;\n\n        if (this.isOpen && this.typeahead) {\n            requestAnimationFrame(() => {\n                if (this.searchInputEl) {\n                    this.searchInputEl.focus();\n                }\n            });\n        }\n    }\n\n    private async handleChange(option: string): Promise<void> {\n        if (this.autoclose) {\n            await this.menuRef?.closeMenu();\n        }\n        this.value = option;\n        this.inputEl.focus();\n        this.atuiChange.emit(this.value);\n    }\n\n    private async handleClear(): Promise<void> {\n        this.searchText = '';\n    }\n\n    private async handleKeyDownMenu(event: KeyboardEvent): Promise<void> {\n        if (event.key === 'Enter' || event.key === ' ') {\n            if (event.target instanceof HTMLLIElement) {\n                event.preventDefault();\n                event.target.click();\n            }\n            return;\n        }\n\n        const menuContainer = this.el.querySelector(\n            'ul[id=\"at-select\"]',\n        ) as HTMLElement;\n        if (!menuContainer) return;\n\n        handleArrowNavigation(event, menuContainer);\n        handleHomeEndNavigation(event, menuContainer);\n    }\n\n    private handleSearchInput(event: Event): void {\n        const inputEl = event.target as HTMLInputElement;\n        this.searchText = inputEl.value.toLowerCase();\n        const trimmedSearch = this.searchText.trim().toLowerCase();\n        this.hasMatchingOptions = trimmedSearch\n            ? this.options?.some((option) =>\n                  option.value.toLowerCase().includes(trimmedSearch),\n              )\n            : true;\n    }\n\n    render() {\n        return (\n            <Host\n                class=\"group/select\"\n                onFocusout={async (event: FocusEvent) => {\n                    await this.handleClear();\n                    const relatedTarget = event.relatedTarget as HTMLElement;\n                    if (!relatedTarget || !this.el.contains(relatedTarget)) {\n                        setTimeout(async () => {\n                            await this.menuRef?.closeMenu();\n                        }, 100);\n                    }\n                }}\n            >\n                {this.renderLabel()}\n                <at-menu\n                    ref={(el) => (this.menuRef = el)}\n                    trigger=\"click\"\n                    align=\"start\"\n                    width={this.parentWidth}\n                    role=\"listbox\"\n                    disabled={this.disabled || this.readonly}\n                    onAtuiMenuStateChange={(event) =>\n                        this.updateIsOpenState(event)\n                    }\n                >\n                    {this.renderInput()}\n                    {!this.disabled || !this.readonly\n                        ? this.renderOptions()\n                        : null}\n                </at-menu>\n\n                <div>\n                    {this.error_text && this.invalid && (\n                        <span\n                            class=\"text-error\"\n                            data-name=\"select-error\"\n                        >\n                            {this.error_text}\n                        </span>\n                    )}\n                </div>\n            </Host>\n        );\n    }\n\n    renderLabel() {\n        return (\n            <div class=\"mb-4 flex flex-col\">\n                <slot name=\"label\" />\n                {(this.label || this.required || this.info_text) && (\n                    <at-form-label\n                        for={this.menuId}\n                        label={this.label}\n                        required={this.required && !this.readonly}\n                        info_text={this.info_text}\n                    />\n                )}\n                {this.hint_text && (\n                    <span\n                        class=\"text-light inline-block text-xs leading-tight\"\n                        data-name=\"select-hint\"\n                    >\n                        {this.hint_text}\n                    </span>\n                )}\n            </div>\n        );\n    }\n\n    renderInput() {\n        const getClassname = classlist(\n            'height-[36px] transition[background-color,color,box-shadow] placeholder-text-light group/select:focus-within:ring-2 w-full cursor-pointer rounded-md border border-solid p-8 outline-0 duration-300 ease-in-out select-none focus:ring-2',\n            inputVariantsConfig,\n        );\n\n        const classname = getClassname({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n        });\n\n        return (\n            <div\n                class=\"relative flex items-center gap-4\"\n                slot=\"menu-trigger\"\n            >\n                <input\n                    class={classname}\n                    role=\"combobox\"\n                    list=\"at-select\"\n                    aria-expanded={this.isOpen}\n                    aria-controls={this.menuId}\n                    type=\"text\"\n                    readonly={true}\n                    aria-disabled={this.disabled}\n                    disabled={this.disabled}\n                    placeholder={this.placeholder}\n                    value={this.value}\n                    data-name=\"select-input\"\n                    ref={(el) => (this.inputEl = el)}\n                ></input>\n\n                {!this.readonly && !this.disabled && (\n                    <div\n                        class=\"bg-surface1 absolute right-4 flex h-full cursor-pointer items-center rounded-md p-4 select-none\"\n                        role=\"presentation\"\n                        tabindex={-1}\n                    >\n                        <span\n                            class=\"material-icons h-16 w-16 text-[16px] leading-[16px]\"\n                            data-name=\"button-icon-right\"\n                        >\n                            {this.isOpen ? 'arrow_drop_up' : 'arrow_drop_down'}\n                        </span>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    renderOptions() {\n        return (\n            <ul\n                class=\"contents\"\n                id=\"at-select\"\n                onKeyDown={async (event) => {\n                    await this.handleKeyDownMenu(event);\n                }}\n            >\n                {this.typeahead && (\n                    <div class=\"relative z-10 bg-white p-4\">\n                        <input\n                            type=\"text\"\n                            class={`transition[background-color,color] bg-surface-1 ring-active-foreground/30 mb-4 h-[28px] w-full flex-shrink flex-grow basis-0 rounded-md p-8 outline-0 duration-300 ease-in-out focus:ring-2 ${\n                                this.clearable ? 'pr-24' : ''\n                            } `}\n                            placeholder={\n                                this.translations?.ATUI?.SEARCH || 'Search'\n                            }\n                            name=\"\"\n                            autoComplete=\"off\"\n                            aria-autocomplete=\"list\"\n                            value={this.searchText}\n                            onInput={(event) => {\n                                event.stopPropagation();\n                                this.handleSearchInput(event);\n                            }}\n                            onClick={(e) => e.stopPropagation()}\n                            ref={(el) => (this.searchInputEl = el)}\n                        />\n\n                        {this.clearable && this.searchText !== '' && (\n                            <div class=\"absolute top-4 right-4\">\n                                <at-button\n                                    size=\"sm\"\n                                    icon=\"cancel\"\n                                    type=\"secondaryText\"\n                                    onClick={async (event) => {\n                                        event.stopPropagation();\n                                        await this.handleClear();\n                                    }}\n                                    data-name=\"select-clear\"\n                                ></at-button>\n                            </div>\n                        )}\n                    </div>\n                )}\n\n                {this.options\n                    ?.filter(\n                        (option) =>\n                            !this.searchText ||\n                            option.value\n                                .toLowerCase()\n                                .includes(this.searchText),\n                    )\n                    .map((option) => this.renderOption(option))}\n\n                {this.typeahead &&\n                    this.searchText &&\n                    !this.hasMatchingOptions && (\n                        <div class=\"text-body text-light w-full bg-white px-16 py-8\">\n                            {this.translations?.ATUI?.NO_RESULTS_FOUND ||\n                                'No results found'}\n                        </div>\n                    )}\n            </ul>\n        );\n    }\n\n    renderOption(option: SelectOption) {\n        const getOptionClassname = classlist(\n            'transition[background-color,color,box-shadow] text-body focus:ring-active-foreground/40 flex w-full cursor-pointer items-center truncate p-8 font-normal duration-300 ease-in-out focus:ring-2 focus:outline-0 focus:ring-inset',\n            optionVariantsConfig,\n        );\n\n        const classname = getOptionClassname({\n            active: this.value === option.value,\n        });\n\n        const isSelected = this.value === option.value;\n\n        return (\n            <li\n                role=\"option\"\n                value={option.value}\n                data-name=\"select-option\"\n                aria-selected={isSelected ? 'true' : 'false'}\n                tabIndex={0}\n                class={classname}\n                onClick={() => this.handleChange(option.value)}\n            >\n                {option.value}\n            </li>\n        );\n    }\n}\n"]}