{"file":"p-DYTCLDu-.js","mappings":";;;AAGA,MAAM,cAAc,GAAG;AACnB,IAAA,QAAQ,EAAE;AACN,QAAA,QAAQ,EAAE;AACN,YAAA,IAAI,EAAE,8CAA8C;AACpD,YAAA,KAAK,EAAE,IAAI;AACd,SAAA;AACD,QAAA,MAAM,EAAE;AACJ,YAAA,IAAI,EAAE,qCAAqC;AAC3C,YAAA,KAAK,EAAE,oBAAoB;AAC9B,SAAA;AACJ,KAAA;CACJ;MAKY,mBAAmB,iBAAAA,kBAAA,CAAA,MAAA,mBAAA,SAAAC,CAAA,CAAA;AAHhC,IAAA,WAAA,CAAA,YAAA,EAAA;;;;;AAcI;;AAEG;AACK,QAAA,IAAS,CAAA,SAAA,GAAa,KAAK;AAEnC;;AAEG;AAEH,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AA6C5B;IA3CG,MAAM,GAAA;QACF,MAAM,YAAY,GAAG,SAAS,CAC1B,8SAA8S,EAC9S,cAAc,CACjB;QAED,MAAM,SAAS,GAAG,YAAY,CAAC;YAC3B,MAAM,EAAE,IAAI,CAAC,SAAS;YACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC1B,SAAA,CAAC;QAEF,QACI,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EACD,IAAI,EAAC,UAAU,EACf,QAAQ,EAAC,GAAG,EACZ,KAAK,EAAE,SAAS,EAChB,OAAO,EAAE,CAAC,CAAQ,KAAI;AAClB,gBAAA,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACf,CAAC,CAAC,cAAc,EAAE;oBAClB,CAAC,CAAC,eAAe,EAAE;;AAE3B,aAAC,EAAA,EAEA,IAAI,CAAC,IAAI,KACN,0EACc,gBAAgB,EAC1B,KAAK,EAAC,8DAA8D,EAEnE,EAAA,IAAI,CAAC,IAAI,CACP,CACV,EACA,IAAI,CAAC,KAAK,KACP,0EACc,iBAAiB,EAC3B,KAAK,EAAC,gFAAgF,EAErF,EAAA,IAAI,CAAC,KAAK,CACR,CACV,EACD,CAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACL;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/at-menu/at-menu-item/at-menu-item.tsx"],"sourcesContent":["import { Component, Prop, h, Host } from '@stencil/core';\nimport { classlist } from '../../../utils/classlist';\n\nconst variantsConfig = {\n    variants: {\n        disabled: {\n            true: 'pointer-events-none opacity-30 grayscale-[1]',\n            false: null,\n        },\n        active: {\n            true: 'bg-active-foreground/15 text-active',\n            false: 'hover:bg-surface-1',\n        },\n    },\n};\n\n@Component({\n    tag: 'at-menu-item',\n})\nexport class AtMenuitemComponent {\n    /**\n     * Label to be displayed for the menu item\n     */\n    @Prop() label?: string;\n\n    /**\n     * Icon to be displayed with the label\n     */\n    @Prop() icon?: string;\n\n    /**\n     * Will change the styling of the menuitem when set\n     */\n    @Prop() is_active?: boolean = false;\n\n    /**\n     * Disables user interaction with the menu-item and updates visual style to appear inactive\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    render() {\n        const getClassname = classlist(\n            'text-body focus-visible:ring-active-foreground/40 relative flex w-full cursor-pointer items-center gap-8 truncate overflow-hidden rounded-md p-8 text-left font-normal transition-[background-color,color,box-shadow] duration-150 ease-in-out focus:outline-0 focus-visible:ring-2 focus-visible:ring-inset',\n            variantsConfig,\n        );\n\n        const classname = getClassname({\n            active: this.is_active,\n            disabled: this.disabled,\n        });\n\n        return (\n            <Host\n                role=\"menuitem\"\n                tabindex=\"0\"\n                class={classname}\n                onClick={(e: Event) => {\n                    if (this.disabled) {\n                        e.preventDefault();\n                        e.stopPropagation();\n                    }\n                }}\n            >\n                {this.icon && (\n                    <span\n                        data-name=\"menu-item-icon\"\n                        class=\"material-icons text-icon-lg flex items-center justify-center\"\n                    >\n                        {this.icon}\n                    </span>\n                )}\n                {this.label && (\n                    <span\n                        data-name=\"menu-item-label\"\n                        class=\"truncate whitespace-nowrap group-data-[state=collapsed]/sidebar-wrapper:hidden\"\n                    >\n                        {this.label}\n                    </span>\n                )}\n                <slot />\n            </Host>\n        );\n    }\n}\n"],"version":3}