{"file":"at-message.js","mappings":";;AAEA,MAAM,eAAe,GAAG;AACpB,IAAA,IAAI,EAAE,oDAAoD;AAC1D,IAAA,IAAI,EAAE;AACF,QAAA,KAAK,EAAE,OAAO;AACd,QAAA,OAAO,EAAE,SAAS;AAClB,QAAA,OAAO,EAAE,cAAc;AACvB,QAAA,IAAI,EAAE,MAAM;AACZ,QAAA,OAAO,EAAE,EAAE;AACd,KAAA;AACD,IAAA,UAAU,EAAE;AACR,QAAA,KAAK,EAAE,6BAA6B;AACpC,QAAA,OAAO,EAAE,yBAAyB;AAClC,QAAA,OAAO,EAAE,yBAAyB;AAClC,QAAA,IAAI,EAAE,sBAAsB;AAC5B,QAAA,OAAO,EAAE,WAAW;AACvB,KAAA;AACD,IAAA,UAAU,EAAE;AACR,QAAA,IAAI,EAAE;AACF,YAAA,KAAK,EAAE,gBAAgB;AACvB,YAAA,OAAO,EAAE,YAAY;AACrB,YAAA,OAAO,EAAE,YAAY;AACrB,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,OAAO,EAAE,cAAc;AAC1B,SAAA;AACD,QAAA,GAAG,EAAE,EAAE;AACV,KAAA;CACJ;MAYYA,WAAS,iBAAAC,kBAAA,CAAA,MAAA,SAAA,SAAAC,CAAA,CAAA;;;;;;;AAClB;;AAEG;AAEH,IAAA,IAAI;AAEJ;;AAEG;IAEH,MAAM,GAAmB,MAAM;AAE/B;;AAEG;AAEH,IAAA,aAAa;AAEb;;;;;AAKG;AAEH,IAAA,IAAI;AAEJ;;AAEG;AAEH,IAAA,OAAO;AAEP,IAAA,IAAI,QAAQ,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,OAAO,IAAI,CAAC,IAAI;;aACb;YACH,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;;AAI9C,IAAA,IAAI,WAAW,GAAA;AACX,QAAA,OAAO,GAAG,eAAe,CAAC,IAAI,CAAI,CAAA,EAAA,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;;IAG1F,MAAM,GAAA;AACF,QAAA,QACI,4DACI,KAAK,EAAE,IAAI,CAAC,WAAW,eACb,mBAAmB,EAAA,EAE7B,CAAA,CAAA,GAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAE,CAAA,gCAAA,EAAmC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAE,EACvE,WAAA,EAAA,cAAc,IAEvB,IAAI,CAAC,QAAQ,CACd,EAEJ,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,QAAQ,EAAA,EACd,IAAI,CAAC,aAAa,KACf,4DACI,KAAK,EAAC,yCAAyC,EAAA,WAAA,EACrC,eAAe,EAExB,EAAA,IAAI,CAAC,aAAa,CACjB,CACT,EAEA,IAAI,CAAC,OAAO,KACT,4DACI,KAAK,EAAC,yBAAyB,EAAA,WAAA,EACrB,iBAAiB,EAE1B,EAAA,IAAI,CAAC,OAAO,CACX,CACT,EACD,CAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,CACN,CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["AtMessage","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/at-message/at-message.tsx"],"sourcesContent":["import { Component, h, Prop } from '@stencil/core';\n\nconst messageVariants = {\n    base: 'flex p-[14px] text-dark text-left rounded-[0.3rem]',\n    icon: {\n        error: 'error',\n        warning: 'warning',\n        success: 'check_circle',\n        info: 'info',\n        default: '',\n    },\n    iconColour: {\n        error: 'text-destructive-foreground',\n        warning: 'text-warning-foreground',\n        success: 'text-success-foreground',\n        info: 'text-info-foreground',\n        default: 'text-dark',\n    },\n    background: {\n        high: {\n            error: 'bg-destructive',\n            warning: 'bg-warning',\n            success: 'bg-success',\n            info: 'bg-info',\n            default: 'bg-surface-2',\n        },\n        low: '',\n    },\n};\n\n/**\n * @category Feedback\n * @description A message component for displaying notifications, alerts, or informational messages.\n *\n * @slot - Placed after the content\n */\n@Component({\n    tag: 'at-message',\n    shadow: false,\n})\nexport class AtMessage {\n    /**\n     * Type of the message.\n     */\n    @Prop()\n    type: 'error' | 'warning' | 'success' | 'info' | 'default';\n\n    /**\n     * Theme of the message, either \"light\" or \"default\".\n     */\n    @Prop()\n    impact: 'low' | 'high' = 'high';\n\n    /**\n     * Title of the app message.\n     */\n    @Prop()\n    message_title: string;\n\n    /**\n     * An icon is provided for success, warning, error, or info types.\n     * You can provide a custom value to replace the default icon.\n     *\n     * Must use material icon name.\n     */\n    @Prop()\n    icon?: string;\n\n    /**\n     * Content of the message.\n     */\n    @Prop()\n    content: string;\n\n    get iconName(): string {\n        if (this.icon) {\n            return this.icon;\n        } else {\n            return messageVariants.icon[this.type];\n        }\n    }\n\n    get hostClasses(): string {\n        return `${messageVariants.base} ${messageVariants.background[this.impact][this.type]}`;\n    }\n\n    render() {\n        return (\n            <div\n                class={this.hostClasses}\n                data-name=\"message-container\"\n            >\n                <i\n                    class={`material-icons mr-8 text-[16px] ${messageVariants.iconColour[this.type]}`}\n                    data-name=\"message-icon\"\n                >\n                    {this.iconName}\n                </i>\n\n                <div class=\"w-full\">\n                    {this.message_title && (\n                        <div\n                            class=\"text-h6 mb-4 leading-normal font-medium\"\n                            data-name=\"message-title\"\n                        >\n                            {this.message_title}\n                        </div>\n                    )}\n\n                    {this.content && (\n                        <div\n                            class=\"!text-sm leading-normal\"\n                            data-name=\"message-content\"\n                        >\n                            {this.content}\n                        </div>\n                    )}\n                    <slot />\n                </div>\n            </div>\n        );\n    }\n}\n"],"version":3}