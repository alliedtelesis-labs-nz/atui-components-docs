{"file":"at-side-panel.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/at-side-panel/at-side-panel.scss?tag=at-side-panel&encapsulation=scoped","src/components/at-side-panel/at-side-panel.tsx"],"sourcesContent":["@use '../../styles/shared/backdrop';\n\n:host {\n    --token-color-white-rgb: 255, 255, 255;\n    display: contents;\n\n    // Panel container\n    .container {\n        position: fixed;\n        display: flex;\n        flex-direction: column;\n        z-index: var(--token-z-index-nav);\n        min-width: var(--token-width-panel-xs);\n        background-color: var(--token-color-white);\n        box-shadow: var(--token-shadow-md);\n        overflow-x: hidden;\n        overflow-y: auto;\n        height: 100%;\n        opacity: 0;\n        transition: all 300ms ease;\n        will-change: transform, opacity;\n\n        // Width\n        &.width-xs {\n            width: var(--token-width-panel-xs);\n        }\n        &.width-sm {\n            width: var(--token-width-panel-sm);\n        }\n        &.width-md {\n            width: var(--token-width-panel-md);\n        }\n        &.width-lg {\n            width: var(--token-width-panel-lg);\n        }\n        &.width-xl {\n            width: var(--token-width-panel-xl);\n        }\n\n        // Origin\n        &.origin-left {\n            left: 0;\n            top: 0;\n            transform: translateX(-100%);\n        }\n        &.origin-right {\n            right: 0;\n            top: 0;\n            transform: translateX(100%);\n        }\n\n        // Position\n        &.position-absolute {\n            position: absolute;\n        }\n\n        // Scroll Overflow override\n        &:not([data-scrollable]) {\n            overflow-y: hidden;\n        }\n\n        // Animate on open\n        &[data-open] {\n            opacity: 1;\n            visibility: visible;\n            transform: translateX(0);\n        }\n    }\n\n    .header {\n        z-index: var(--token-z-index-nav);\n        position: sticky;\n        top: 0;\n        padding: 12px 8px 12px 16px;\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        background-color: rgba(var(--token-color-white-rgb), 0.8);\n        backdrop-filter: blur(10px);\n\n        div {\n            display: flex;\n            flex-direction: column;\n            gap: 2px;\n\n            .title {\n                font-size: var(--token-font-size-h4);\n                font-weight: var(--token-font-weight-med);\n                color: var(--token-text-dark);\n                line-height: 1;\n            }\n\n            .subtitle {\n                font-size: var(--token-font-size-sm);\n                color: var(--token-text-light);\n                line-height: 1;\n            }\n        }\n    }\n\n    .content {\n        display: flex;\n        flex-direction: column;\n        flex-grow: 1;\n        width: 100%;\n    }\n}\n","import {\n    Component,\n    Prop,\n    h,\n    State,\n    Listen,\n    Method,\n    Element,\n    Event,\n    Host,\n    EventEmitter,\n} from '@stencil/core';\n\nexport type SidePanelDirection = 'left' | 'right';\nexport type SidePanelSize = 'xs' | 'sm' | 'md' | 'lg' | 'xl';\nexport type SidePanelPosition = 'absolute' | 'fixed';\n\n/**\n * @category Overlays\n * @description A sliding side panel component for displaying secondary content or forms. Features customizable positioning, backdrop, and animation options.\n *\n * @slot - Display content within the dialog\n *\n * @dependency at-button\n */\n@Component({\n    tag: 'at-side-panel',\n    styleUrl: 'at-side-panel.scss',\n    scoped: true,\n})\nexport class AtSidePanelComponent {\n    @Element() el!: HTMLAtSidePanelElement;\n\n    /**\n     * Size of the size panel\n     */\n    @Prop({ reflect: true })\n    size: SidePanelSize = 'xs';\n\n    /**\n     * Title displayed in the side panel\n     */\n    @Prop()\n    panel_title: string;\n\n    /**\n     * Subtitle displayed in the side panel\n     */\n    @Prop()\n    panel_subtitle: string;\n\n    /**\n     *  Position of the side panel\n     */\n    @Prop({ reflect: true })\n    origin: SidePanelDirection = 'right';\n\n    /**\n     * Enables scroll overflow on the sidepanel container\n     */\n    @Prop({ reflect: true })\n    has_scrollbar: boolean = true;\n\n    /**\n     * Displays a close button if set\n     */\n    @Prop()\n    has_close_button: boolean = true;\n\n    /**\n     * If sidepanel should use fixed positioning (will fallback to absolute)\n     */\n    @Prop({ reflect: true })\n    position: SidePanelPosition = 'fixed';\n\n    /**\n     * Whether to show a backdrop behind the panel, prevents any interaction with background UI.\n     */\n    @Prop({ reflect: true })\n    backdrop: boolean = false;\n\n    /**\n     * Will close the sidepanel if clicked\n     */\n    @Prop({ reflect: true })\n    close_backdrop: boolean = false;\n\n    /**\n     * Target an external element to use as the trigger. When provided, clicking an element wia matching data-sidepanel attribute value will toggle the side panel.\n     */\n    @Prop() trigger_id?: string;\n\n    @State()\n    isExpanded = false;\n\n    @State() isOpen: boolean = false;\n\n    /**\n     * Emits an event when the side panel is toggled, with `event.detail` being true if the panel is now open\n     */\n    @Event()\n    atuiSidepanelChange: EventEmitter;\n\n    private sidePanelWrapper: HTMLElement;\n    private panelDialog: HTMLDialogElement;\n    private triggerEls: HTMLElement[] = [];\n    private externalTriggerListeners: Array<{\n        element: HTMLElement;\n        event: string;\n        handler: EventListener;\n    }> = [];\n\n    /**\n     * Toggles the side panel between open and closed states\n     * @returns Promise that resolves when the panel state is toggled\n     */\n    @Method()\n    async toggleSidePanel(): Promise<void> {\n        if (this.isExpanded) {\n            await this.closeSidePanel();\n        } else {\n            await this.openSidePanel();\n        }\n    }\n\n    /**\n     * Opens the side panel\n     * @returns Promise that resolves when the panel is opened\n     */\n    @Method()\n    async openSidePanel(): Promise<void> {\n        if (this.panelDialog && !this.panelDialog.open) {\n            if (this.backdrop === true) {\n                this.panelDialog.showModal();\n            } else {\n                this.panelDialog.show();\n            }\n\n            if (this.backdrop) {\n                this.panelDialog.classList.add('backdrop');\n            }\n\n            // Use requestAnimationFrame to delay the state change and apply css\n            requestAnimationFrame(() => {\n                this.isExpanded = true;\n                this.isOpen = true;\n                this.atuiSidepanelChange.emit(this.isOpen);\n            });\n        }\n    }\n\n    /**\n     * Closes the side panel\n     * @returns Promise that resolves when the panel is closed\n     */\n    @Method()\n    async closeSidePanel(): Promise<void> {\n        if (this.panelDialog && this.panelDialog.open) {\n            this.panelDialog.close();\n            this.isExpanded = false;\n            this.isOpen = false;\n            this.atuiSidepanelChange.emit(this.isOpen);\n            this.panelDialog.classList.remove('backdrop');\n        }\n    }\n\n    /**\n     * Getter method for the open state of the side panel\n     * @returns The current open state of the side panel\n     */\n    @Method()\n    async getIsOpen(): Promise<boolean> {\n        return this.isOpen;\n    }\n\n    private handleClose = () => {\n        this.closeSidePanel();\n    };\n\n    private handleDialogClose = (event: Event) => {\n        event.preventDefault();\n        if (this.isExpanded) {\n            this.closeSidePanel();\n        }\n    };\n\n    private handleKeyDown = (event: KeyboardEvent) => {\n        if (event.key === 'Escape' && this.isExpanded) {\n            event.preventDefault();\n            this.closeSidePanel();\n        }\n    };\n\n    @Listen('mousedown', { target: 'document' })\n    offClickHandler(event: any) {\n        if (!this.close_backdrop || !this.panelDialog?.open) return;\n        if (!this.sidePanelWrapper?.contains(event.target)) {\n            this.handleClose();\n        }\n    }\n\n    async componentDidLoad() {\n        if (this.trigger_id) {\n            this.triggerEls = Array.from(\n                document.querySelectorAll(\n                    `[data-sidepanel=\"${this.trigger_id}\"]`,\n                ),\n            ) as HTMLElement[];\n\n            if (this.triggerEls.length === 0) {\n                console.warn(\n                    `at-side-panel: No elements found with data-sidepanel=\"${this.trigger_id}\"`,\n                );\n                return;\n            }\n\n            this.setupExternalTriggerListeners();\n        }\n    }\n\n    disconnectedCallback() {\n        this.cleanupExternalTriggerListeners();\n    }\n\n    private cleanupExternalTriggerListeners() {\n        this.externalTriggerListeners.forEach(({ element, event, handler }) => {\n            element.removeEventListener(event, handler);\n        });\n        this.externalTriggerListeners = [];\n    }\n\n    private setupExternalTriggerListeners() {\n        if (!this.triggerEls || this.triggerEls.length === 0) return;\n\n        const clickHandler = async (event: Event) => {\n            event.preventDefault();\n            event.stopPropagation();\n            await this.toggleSidePanel();\n        };\n\n        const keydownHandler = async (event: KeyboardEvent) => {\n            switch (event.key) {\n                case 'Enter':\n                case ' ':\n                    event.preventDefault();\n                    await this.toggleSidePanel();\n                    break;\n            }\n        };\n\n        this.triggerEls.forEach((el) => {\n            el.addEventListener('click', clickHandler);\n            el.addEventListener('keydown', keydownHandler);\n            this.externalTriggerListeners.push(\n                { element: el, event: 'click', handler: clickHandler },\n                { element: el, event: 'keydown', handler: keydownHandler },\n            );\n        });\n    }\n\n    render() {\n        return (\n            <Host data-open={this.isOpen}>\n                <dialog\n                    ref={(el) => (this.panelDialog = el)}\n                    class={`${this.backdrop ? 'backdrop' : ''}`}\n                    onClose={this.handleDialogClose}\n                    onKeyDown={this.handleKeyDown}\n                >\n                    <div\n                        data-scrollable={this.has_scrollbar}\n                        data-open={this.isOpen}\n                        class={`container origin-${this.origin} size-${this.size} size-${this.size} position-${this.position}`}\n                        ref={(el) => (this.sidePanelWrapper = el)}\n                        data-name=\"container\"\n                    >\n                        <header\n                            class=\"header\"\n                            data-name=\"header\"\n                        >\n                            <div>\n                                {this.panel_title && (\n                                    <h3 class=\"title\">{this.panel_title}</h3>\n                                )}\n                                {this.panel_subtitle && (\n                                    <p class=\"subtitle\">\n                                        {this.panel_subtitle}\n                                    </p>\n                                )}\n                            </div>\n\n                            {this.has_close_button && (\n                                <at-button\n                                    size=\"md\"\n                                    icon=\"close\"\n                                    type=\"secondaryText\"\n                                    data-name=\"panel-close\"\n                                    onClick={this.handleClose}\n                                />\n                            )}\n                        </header>\n\n                        <div\n                            data-name=\"content\"\n                            class=\"content\"\n                        >\n                            <slot />\n                        </div>\n                    </div>\n                </dialog>\n            </Host>\n        );\n    }\n}\n"],"version":3}