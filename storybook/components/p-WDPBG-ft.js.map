{"file":"p-WDPBG-ft.js","mappings":";;;;;;;;;;MAuBa,mBAAmB,iBAAAA,kBAAA,CAAA,MAAA,mBAAA,SAAAC,CAAA,CAAA;AAJhC,IAAA,WAAA,GAAA;;;;AAWI;;AAEG;AAEH,QAAA,IAAQ,CAAA,QAAA,GAAa,EAAE;AAyE1B;AA/DG,IAAA,IAAY,eAAe,GAAA;QACvB,OAAO,IAAI,CAAC;aACP,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,KAAK,UAAU;AAC9C,aAAA,GAAG,CAAC,CAAC,MAAM,MAAM;YACd,SAAS,EAAE,MAAM,CAAC,KAAK;YACvB,KAAK,EAAE,MAAM,CAAC,KAAK;AACtB,SAAA,CAAC,CAAC;;AAGX,IAAA,MAAM,iBAAiB,GAAA;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,iBAAiB,CAAC,IAAI,CAAC,EAAE,CAAC;;AAIxD,IAAA,oBAAoB,CAAC,QAAkB,EAAA;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE;;AAG1B,IAAA,kBAAkB,CAAC,KAA4B,EAAA;AACnD,QAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;;IAGvC,MAAM,GAAA;AACF,QAAA,QACI,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACD,CAAA,CAAA,WAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,SAAS,EAAE,KAAK,EAChB,KAAK,EAAC,MAAM,EACZ,KAAK,EAAC,YAAY,EAClB,MAAM,EAAE,IAAI,EAAA,EAEZ,CAAA,CAAA,cAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,IAAI,EAAC,cAAc,EACnB,QAAQ,EAAC,KAAK,EAAA,EAEd,CACI,CAAA,aAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,iBAAiB,EACtB,IAAI,EAAC,kBAAkB,EACvB,IAAI,EAAC,aAAa,EACpB,CAAA,EACF,CAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAM,IAAI,EAAC,iBAAiB,EAAA,EACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CACtC,CACI,EACf,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,IAAI,EAAC,cAAc,EACnB,KAAK,EAAC,eAAe,EAAA,EAErB,CAAA,CAAA,qBAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,IAAI,EAAC,cAAc,EACnB,OAAO,EAAE,IAAI,CAAC,eAAe,EAC7B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,YAAY,EAAE,CAAC,KAA4B,KACvC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAEpC,CAAA,CACA,CACE,CACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/table-components/atui-table-filter-menu/atui-table-filter-menu.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n    Watch,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A menu component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n */\n\n@Component({\n    tag: 'atui-table-filter-menu',\n    shadow: false,\n})\nexport class AtuiTableFilterMenu {\n    /**\n     * Column definitions used in your atui-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected filter columns\n     */\n    @Prop({ mutable: true })\n    selected: string[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtuiTableFilterMenuElement;\n\n    /**\n     * Emits selected columns when checkbox selection changes\n     */\n    @Event() atuiChange: EventEmitter<string[]>;\n\n    private get filteredColumns() {\n        return this.col_defs\n            .filter((colDef) => colDef.field !== 'Checkbox')\n            .map((colDef) => ({\n                option_id: colDef.field,\n                label: colDef.field,\n            }));\n    }\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    @Watch('selected')\n    handleSelectedChange(newValue: string[]) {\n        this.selected = newValue || [];\n    }\n\n    private handleColumnSelect(event: CustomEvent<string[]>): void {\n        const newValue = event.detail || [];\n        this.selected = newValue;\n        this.atuiChange.emit(this.selected);\n    }\n\n    render() {\n        return (\n            <Host>\n                <atui-menu\n                    autoclose={false}\n                    width=\"auto\"\n                    class=\"self-start\"\n                    portal={true}\n                >\n                    <atui-tooltip\n                        slot=\"menu-trigger\"\n                        position=\"top\"\n                    >\n                        <atui-button\n                            slot=\"tooltip-trigger\"\n                            type=\"secondaryOutline\"\n                            icon=\"filter_list\"\n                        />\n                        <span slot=\"tooltip-content\">\n                            {this.translations.ATUI.TABLE.FILTER_DATA}\n                        </span>\n                    </atui-tooltip>\n                    <div\n                        slot=\"menu-content\"\n                        class=\"flex flex-col\"\n                    >\n                        <atui-checkbox-group\n                            slot=\"menu-content\"\n                            options={this.filteredColumns}\n                            value={this.selected}\n                            onAtuiChange={(event: CustomEvent<string[]>) =>\n                                this.handleColumnSelect(event)\n                            }\n                        />\n                    </div>\n                </atui-menu>\n            </Host>\n        );\n    }\n}\n"],"version":3}