{"file":"p-jTx0jrsE.js","mappings":";;;;;;;;;;MAuBa,iBAAiB,iBAAAA,kBAAA,CAAA,MAAA,iBAAA,SAAAC,CAAA,CAAA;;;;;;;;AAC1B;;AAEG;AAEH,IAAA,QAAQ;AAER;;AAEG;IAEH,QAAQ,GAAa,EAAE;AAEd,IAAA,YAAY;;AAGrB;;AAEG;AACM,IAAA,QAAQ;AAEjB,IAAA,IAAY,eAAe,GAAA;QACvB,OAAO,IAAI,CAAC;aACP,MAAM,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,KAAK,KAAK,UAAU;AAC9C,aAAA,GAAG,CAAC,CAAC,MAAM,MAAM;YACd,SAAS,EAAE,MAAM,CAAC,KAAK;YACvB,KAAK,EAAE,MAAM,CAAC,KAAK;AACtB,SAAA,CAAC,CAAC;;AAGX,IAAA,MAAM,iBAAiB,GAAA;QACnB,IAAI,CAAC,YAAY,GAAG,MAAM,iBAAiB,CACvC,IAAI,CAAC,EAA4B,CACpC;;AAIL,IAAA,oBAAoB,CAAC,QAAkB,EAAA;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,EAAE;;AAG1B,IAAA,kBAAkB,CAAC,KAA4B,EAAA;AACnD,QAAA,MAAM,QAAQ,GAAG,KAAK,CAAC,MAAM,IAAI,EAAE;AACnC,QAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ;QACxB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;;IAGrC,MAAM,GAAA;AACF,QAAA,QACI,EAAC,IAAI,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EACD,CACI,CAAA,SAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,SAAS,EAAE,KAAK,EAChB,KAAK,EAAC,aAAa,EACnB,KAAK,EAAC,YAAY,EAAA,EAElB,CAAA,CAAA,YAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,IAAI,EAAC,cAAc,EACnB,QAAQ,EAAC,KAAK,EAAA,EAEd,CACI,CAAA,WAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,iBAAiB,EACtB,IAAI,EAAC,kBAAkB,EACvB,IAAI,EAAC,aAAa,EACpB,CAAA,EACF,CAAO,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,EAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAQ,CAC9C,EACb,CAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,eAAe,EAAA,EACtB,CAAA,CAAA,mBAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAC,OAAO,EACb,OAAO,EAAE,IAAI,CAAC,eAAe,EAC7B,KAAK,EAAE,IAAI,CAAC,QAAQ,EACpB,YAAY,EAAE,CAAC,KAA4B,KACvC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAEpC,CAAA,CACA,CACA,CACP;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/table-components/at-table-filter-menu/at-table-filter-menu.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n    Watch,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A menu component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n */\n\n@Component({\n    tag: 'at-table-filter-menu',\n    shadow: false,\n})\nexport class AtTableFilterMenu {\n    /**\n     * Column definitions used in your at-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected filter columns\n     */\n    @Prop({ mutable: true })\n    selected: string[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtTableFilterMenuElement;\n\n    /**\n     * Emits selected columns when checkbox selection changes\n     */\n    @Event() atChange: EventEmitter<string[]>;\n\n    private get filteredColumns() {\n        return this.col_defs\n            .filter((colDef) => colDef.field !== 'Checkbox')\n            .map((colDef) => ({\n                option_id: colDef.field,\n                label: colDef.field,\n            }));\n    }\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(\n            this.el as unknown as HTMLElement,\n        );\n    }\n\n    @Watch('selected')\n    handleSelectedChange(newValue: string[]) {\n        this.selected = newValue || [];\n    }\n\n    private handleColumnSelect(event: CustomEvent<string[]>): void {\n        const newValue = event.detail || [];\n        this.selected = newValue;\n        this.atChange.emit(this.selected);\n    }\n\n    render() {\n        return (\n            <Host>\n                <at-menu\n                    autoclose={false}\n                    width=\"fit-content\"\n                    class=\"self-start\"\n                >\n                    <at-tooltip\n                        slot=\"menu-trigger\"\n                        position=\"top\"\n                    >\n                        <at-button\n                            slot=\"tooltip-trigger\"\n                            type=\"secondaryOutline\"\n                            icon=\"filter_list\"\n                        />\n                        <span>{this.translations.ATUI.TABLE.FILTER_DATA}</span>\n                    </at-tooltip>\n                    <div class=\"flex flex-col\">\n                        <at-checkbox-group\n                            class=\"w-fit\"\n                            options={this.filteredColumns}\n                            value={this.selected}\n                            onAtuiChange={(event: CustomEvent<string[]>) =>\n                                this.handleColumnSelect(event)\n                            }\n                        />\n                    </div>\n                </at-menu>\n            </Host>\n        );\n    }\n}\n"],"version":3}