{"file":"p-BMksCBIy.js","mappings":";;MAsBa,iBAAiB,iBAAAA,kBAAA,CAAA,MAAA,iBAAA,SAAAC,CAAA,CAAA;AAJ9B,IAAA,WAAA,GAAA;;;AAOa,QAAA,IAAI,CAAA,IAAA,GAAe,UAAU;AA6BzC;AA3BG,IAAA,IAAI,CAAC,MAA6B,EAAA;QAC9B,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;;IAGpD,MAAM,GAAA;QACF,OAAO,IAAI,CAAC,EAAE;;AAGlB,IAAA,OAAO,CAAC,MAA6B,EAAA;QACjC,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC;AAChD,QAAA,OAAO,IAAI;;IAGf,MAAM,GAAA;AACF,QAAA,MAAM,aAAa,GAAG;AAClB,YAAA,KAAK,EAAE,eAAe;AACtB,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,OAAO,EAAE,iBAAiB;AAC1B,YAAA,QAAQ,EAAE,mBAAmB;SAChC;AAED,QAAA,QACI,CAAC,CAAA,IAAI,EAAC,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,0BAA0B,EAAA,EAClC,CAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAK,KAAK,EAAE,iBAAiB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAE,EAAQ,CAAA,CAC5D;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/table-components/cell-components/at-color-status-cell/at-color-status-cell.tsx"],"sourcesContent":["import { Component, h, Element, State, Host } from '@stencil/core';\nimport { ICellRendererComp, ICellRendererParams } from 'ag-grid-community';\n\nexport type StatusType = 'disabled' | 'success' | 'warning' | 'error';\n\nexport interface ColorStatusCellData {\n    status: StatusType;\n}\n\nexport interface ColorStatusCellParams\n    extends ICellRendererParams<ColorStatusCellData> {\n    mapValueToStatus: (data: any) => StatusType;\n}\n\n/**\n * @category Table Cell\n * @description A cell component for displaying a color status indicator based on predefined types\n */\n@Component({\n    tag: 'at-color-status-cell',\n    shadow: false,\n})\nexport class AtColorStatusCell implements ICellRendererComp {\n    @Element() el: HTMLElement;\n\n    @State() type: StatusType = 'disabled';\n\n    init(params: ColorStatusCellParams): void {\n        this.type = params.mapValueToStatus(params.data);\n    }\n\n    getGui(): HTMLElement {\n        return this.el;\n    }\n\n    refresh(params: ColorStatusCellParams): boolean {\n        this.type = params.mapValueToStatus(params.data);\n        return true;\n    }\n\n    render() {\n        const statusClasses = {\n            error: 'bg-error-base',\n            warning: 'bg-warning-base',\n            success: 'bg-success-base',\n            disabled: 'bg-disabled-light',\n        };\n\n        return (\n            <Host class=\"flex h-full items-center\">\n                <div class={`h-full w-full ${statusClasses[this.type]}`}></div>\n            </Host>\n        );\n    }\n}\n"],"version":3}