{"file":"p-CV-zf8Ue.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/atui-input/atui-input.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nexport type InputType = 'text' | 'url' | 'email' | 'password';\n\nconst inputVariants = cva(\n    'min-h-36 placeholder-text-light pr -24 relative flex min-h-[36px] w-full flex-shrink flex-grow basis-0 gap-4 overflow-hidden overflow-ellipsis rounded-md border border-solid outline-none transition-colors duration-300 ease-in-out focus-within:outline-0 focus-within:ring-2',\n    {\n        variants: {\n            disabled: {\n                false: 'bg-white focus-within:ring-active-foreground/30',\n                true: 'pointer-events-none border-none bg-surface-1 !text-disabled',\n            },\n            readonly: {\n                false: 'focus-within:ring-active-foreground/30',\n                true: 'cursor-text border-none !bg-surface-1 !text-dark',\n            },\n            invalid: {\n                false: 'border-med focus-within:border-active-dark focus-within:ring-active-foreground/30',\n                true: 'border-error-base focus-within:border-error-base focus-within:ring-destructive-foreground/30',\n            },\n        },\n        defaultVariants: {\n            disabled: false,\n            readonly: false,\n            invalid: false,\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A comprehensive text input component with label, validation, hints, and accessibility features. Supports multiple input types, clearable functionality, and integrates with form validation.\n */\n@Component({\n    tag: 'atui-input',\n    shadow: false,\n})\nexport class AtuiInputComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Type of the input\n     */\n    @Prop()\n    type: InputType = 'text';\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string | number = '';\n\n    /**\n     * Adds a required * to the element\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Sets the 'autocomplete' attribute on the input element\n     */\n    @Prop()\n    autocomplete: string = 'on';\n\n    /**\n     * Makes the input read only\n     */\n    @Prop()\n    readonly: boolean;\n\n    /**\n     * Disables interaction with the input\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    /**\n     * Allows the input to be cleared with a 'x' at the end of the input element\n     */\n    @Prop()\n    clearable: boolean;\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: string;\n\n    inputEl: HTMLInputElement;\n    @Element() el: HTMLAtuiInputElement;\n\n    /**\n     * Emits an event containing the text string or number when the input's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<string | number>;\n\n    private inputId = `input-${Math.random().toString(36).substring(2, 11)}`;\n\n    handleChange(event: Event): void {\n        event.stopPropagation();\n        this.value = (event.target as HTMLInputElement).value;\n        this.atuiChange.emit(this.value);\n    }\n\n    handleClear(): void {\n        this.inputEl.value = '';\n        this.value = '';\n        this.atuiChange.emit('');\n    }\n\n    render() {\n        const classname = inputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n        });\n\n        return (\n            <Host>\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"mb-8 inline-block text-xs leading-tight text-light\"\n                            data-name=\"input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class={classname}>\n                    <input\n                        class=\"flex w-full py-8 pl-8 outline-0\"\n                        id={this.inputId}\n                        readonly={this.readonly ? true : undefined}\n                        disabled={this.disabled ? true : undefined}\n                        required={this.required}\n                        type={this.type}\n                        placeholder={`${this.placeholder}`}\n                        autocomplete={this.autocomplete}\n                        autocapitalize=\"none\"\n                        onInput={(event) => this.handleChange(event)}\n                        onChange={(event) => this.handleChange(event)}\n                        value={this.value}\n                        ref={(el) => (this.inputEl = el)}\n                        data-name=\"input\"\n                    />\n\n                    <div class=\"flex items-center py-4 pr-4\">\n                        <slot name=\"input-actions\" />\n\n                        {this.clearable &&\n                            !this.readonly &&\n                            !this.disabled &&\n                            this.value && (\n                                <atui-button\n                                    class={`transition-all duration-300 ease-in-out ${\n                                        this.clearable &&\n                                        !this.readonly &&\n                                        !this.disabled &&\n                                        this.value\n                                            ? 'pointer-events-auto scale-100 opacity-100'\n                                            : 'pointer-events-none scale-90 opacity-0'\n                                    }`}\n                                    size=\"sm\"\n                                    icon=\"cancel\"\n                                    type=\"secondaryText\"\n                                    onClick={(event) => {\n                                        event.stopPropagation();\n                                        this.handleClear();\n                                    }}\n                                    data-name=\"input-clear\"\n                                />\n                            )}\n                    </div>\n                </div>\n\n                {this.error_text && this.invalid && (\n                    <span\n                        class=\"text-sm text-error\"\n                        data-name=\"input-error\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"],"version":3}