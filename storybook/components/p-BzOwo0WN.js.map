{"file":"p-BzOwo0WN.js","mappings":";;;AAYA,MAAM,cAAc,GAAG;AACnB,IAAA,QAAQ,EAAE;AACN,QAAA,MAAM,EAAE;AACJ,YAAA,IAAI,EAAE,qCAAqC;AAC3C,YAAA,KAAK,EAAE,WAAW;AACrB,SAAA;AACD,QAAA,QAAQ,EAAE;AACN,YAAA,IAAI,EAAE,uDAAuD;AAC7D,YAAA,KAAK,EAAE,IAAI;AACd,SAAA;AACD,QAAA,YAAY,EAAE;AACV,YAAA,IAAI,EAAE,uDAAuD;AAC7D,YAAA,KAAK,EAAE,IAAI;AACd,SAAA;AACJ,KAAA;CACJ;AAED,MAAM,gBAAgB,GAAG,SAAS,CAC9B,yTAAyT,EACzT,cAAc,CACjB;MAWY,qBAAqB,iBAAAA,kBAAA,CAAA,MAAA,qBAAA,SAAAC,CAAA,CAAA;;;;;;AA4C9B,IAAA,MAAM,gBAAgB,GAAA;QAClB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,OAAO,CAC3B,mBAAmB,CACQ;QAC/B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ;;AAG/C,IAAA,WAAW,CAAC,KAAY,EAAA;AACpB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI;AACrB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChB,YAAA,aAAa,EAAE,KAAK;AACpB,YAAA,aAAa,EAAE,0BAA0B;YACzC,OAAO,EAAE,IAAI,CAAC,EAAE;AACnB,SAAA,CAAC;;IAGN,MAAM,GAAA;QACF,MAAM,SAAS,GAAG,gBAAgB,CAAC;YAC/B,MAAM,EAAE,IAAI,CAAC,SAAS;YACtB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,YAAY,EAAE,IAAI,CAAC,aAAa;AACnC,SAAA,CAAC;AAEF,QAAA,QACI,CACI,CAAA,QAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAE,SAAS,EAChB,IAAI,EAAC,OAAO,EACZ,QAAQ,EAAE,CAAC,EACG,cAAA,EAAA,IAAI,CAAC,SAAS,EAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EACvB,OAAO,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAA,WAAA,EACjC,qBAAqB,EAC/B,IAAI,EAAC,QAAQ,EAAA,EAEb,CAAM,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,MAAM,EAAG,CAAA,EACnB,IAAI,CAAC,KAAK,CACN;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/atui-button-group/atui-button-group-option/atui-button-group-option.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Element,\n    Event,\n    EventEmitter,\n    State,\n} from '@stencil/core';\nimport { classlist } from '../../../utils/classlist';\nimport { AtuiEvent } from '../../../types/events';\n\nconst variantsConfig = {\n    variants: {\n        active: {\n            true: 'bg-active-foreground/15 text-active',\n            false: 'text-dark',\n        },\n        disabled: {\n            true: 'text-disabled hover:text-disabled pointer-events-none',\n            false: null,\n        },\n        hostDisabled: {\n            true: 'text-disabled hover:text-disabled pointer-events-none',\n            false: null,\n        },\n    },\n};\n\nconst getButtonClasses = classlist(\n    'focus-visible:border-active-foreground focus-visible:ring-active-foreground/40 relative flex h-[30px] items-center gap-4 rounded-md border border-solid border-transparent px-12 py-8 leading-none font-normal transition-colors duration-300 ease-in-out outline-none focus-visible:ring-2 focus-visible:ring-offset-0',\n    variantsConfig,\n);\n\n/**\n * @category Form Controls\n * @description A button group option component for the button group.\n */\n\n@Component({\n    tag: 'atui-button-group-option',\n    shadow: false,\n})\nexport class AtuiButtonGroupOption {\n    /**\n     * ID of the button element and its option\n     */\n    @Prop()\n    option_id?: string;\n\n    /**\n     * String to be displayed in the button\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Icon to be displayed in the button\n     */\n    @Prop()\n    icon: string;\n\n    /**\n     * Will disable interaction if set\n     */\n    @Prop()\n    disabled: boolean;\n\n    /**\n     * Will apply active styling to the button\n     */\n    @Prop()\n    is_active: boolean;\n\n    @Element() el;\n\n    /**\n     * Emits when the button is clicked\n     */\n    @Event()\n    atuiClick: EventEmitter<AtuiEvent>;\n\n    @State()\n    host_disabled: boolean;\n\n    private provider: HTMLAtuiButtonGroupElement;\n\n    async componentDidLoad() {\n        this.provider = this.el.closest(\n            'atui-button-group',\n        ) as HTMLAtuiButtonGroupElement;\n        this.host_disabled = this.provider.disabled;\n    }\n\n    handleClick(event: Event) {\n        this.is_active = true;\n        this.atuiClick.emit({\n            originalEvent: event,\n            componentType: 'atui-button-group-option',\n            element: this.el,\n        });\n    }\n\n    render() {\n        const classname = getButtonClasses({\n            active: this.is_active,\n            disabled: this.disabled,\n            hostDisabled: this.host_disabled,\n        });\n\n        return (\n            <button\n                class={classname}\n                role=\"radio\"\n                tabindex={0}\n                aria-checked={this.is_active}\n                disabled={this.disabled}\n                onClick={(event) => this.handleClick(event)}\n                data-name=\"button-group-option\"\n                type=\"button\"\n            >\n                <slot name=\"icon\" />\n                {this.label}\n            </button>\n        );\n    }\n}\n"],"version":3}