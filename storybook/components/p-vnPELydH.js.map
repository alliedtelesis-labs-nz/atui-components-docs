{"file":"p-vnPELydH.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/at-time-range/at-time-with-unit/at-time-with-unit.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    State,\n    Element,\n    Watch,\n    Event,\n    EventEmitter,\n    Fragment,\n} from '@stencil/core';\nimport { TimeExtraOptions, TimeUnit, TimeWithUnit } from '../../../types/time';\nimport { TimePresets } from '../../../models/at-time-range.models';\nimport { DateRange, TimeRangeDisplay } from '../../../types/date';\nimport { fetchTranslations } from '../../../utils/translation';\nimport { TimeDateUtil } from '../../../utils/time-date.util';\n\n/**\n * @category Form Controls\n * @description A time with unit component for selecting a time period.\n */\n\n@Component({\n    tag: 'at-time-with-unit',\n    shadow: false,\n})\nexport class AtTimeWithUnitComponent {\n    /**\n     * Available time units for selection\n     */\n    @Prop()\n    units: TimeUnit[];\n\n    /**\n     * Common time preset options to display\n     */\n    @Prop()\n    common_options: TimePresets[];\n\n    /**\n     * Minimum date constraint for time selection\n     */\n    @Prop()\n    min_date: Date = null;\n\n    /**\n     * Minimum number of seconds allowed for time selection\n     */\n    @Prop()\n    min_seconds = 60;\n\n    /**\n     * Maximum number of seconds allowed for time selection\n     */\n    @Prop()\n    max_seconds: number = Number.MAX_SAFE_INTEGER;\n\n    /**\n     * Initial time selection value\n     */\n    @Prop()\n    initial_selected_time: TimeWithUnit | TimeRangeDisplay.ALL;\n\n    /**\n     * Custom error message to display when validation fails\n     */\n    @Prop()\n    custom_error_message = null;\n\n    /**\n     * Whether to show the 'All Time' option\n     */\n    @Prop()\n    show_all_time = false;\n\n    @State() errorText: string = '';\n    @State() secondaryErrorText: string = '';\n    @State() translations: any;\n    @State() dropdownOptions: (TimeUnit | TimeExtraOptions)[];\n    @State() timeValue: number;\n    @Watch('timeValue')\n    watchTimeValue() {\n        this.updateSelectedTime(this.timeValue);\n    }\n    @State() timeUnit: TimeUnit | TimeExtraOptions;\n    @Watch('timeUnit')\n    watchTimeUnit() {\n        this.updateSelectedTime(this.timeValue);\n    }\n    @State() selectedTime: TimeWithUnit | TimeRangeDisplay.ALL;\n    @State() startDate;\n    @Element() el;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(this.el);\n    }\n\n    componentWillRender() {\n        if (!this.selectedTime) {\n            this.initSelectedTime(this.initial_selected_time);\n            this.initDropdownOptions();\n        }\n    }\n\n    private initDropdownOptions(): void {\n        this.dropdownOptions = this.show_all_time\n            ? [TimeExtraOptions.ALL, ...this.units]\n            : this.units;\n    }\n\n    private initSelectedTime(\n        initialTimeRange: TimeWithUnit | TimeRangeDisplay.ALL,\n    ): void {\n        const unit =\n            typeof initialTimeRange === 'object'\n                ? TimeDateUtil.getCurrentOrDefaultUnit(\n                      initialTimeRange.unit,\n                      this.units,\n                  )\n                : TimeExtraOptions.ALL;\n        const value =\n            typeof initialTimeRange === 'object'\n                ? initialTimeRange.value\n                : null;\n\n        this.timeUnit = unit;\n        this.timeValue = value;\n        this.selectedTime = initialTimeRange;\n        this.startDate = this.getRelativeDate()?.startDate;\n    }\n\n    updateSelectedTime(value: number): void {\n        const unit = this.timeUnit;\n\n        if (unit !== TimeExtraOptions.ALL) {\n            this.selectedTime = { unit, value };\n        } else {\n            this.selectedTime = TimeRangeDisplay.ALL;\n            if (this.timeValue) {\n                this.timeValue = null;\n            }\n        }\n        this.validateInput();\n        this.startDate = this.getRelativeDate()?.startDate;\n    }\n\n    validateInput() {\n        if (this.selectedTime !== TimeRangeDisplay.ALL) {\n            const maxSeconds = this.min_date\n                ? TimeDateUtil.getSecondsAgoFromDate(this.min_date)\n                : this.max_seconds;\n            const maxTimeValue = TimeDateUtil.convertSecondsToUnit(\n                maxSeconds,\n                this.timeUnit,\n                0,\n                true,\n            );\n            const minTimeValue = TimeDateUtil.convertSecondsToUnit(\n                this.min_seconds,\n                this.timeUnit,\n                0,\n                false,\n            );\n            if (this.timeValue > maxTimeValue)\n                this.errorText = this.translations\n                    ? this.translations.ATUI.TIME.VALIDATION.MAX_NUMBER.replace(\n                          '{lowerThanValue}',\n                          `${maxTimeValue + 1} ${this.timeUnit}`,\n                      )\n                    : `Please enter a value lower than ${maxTimeValue} ${this.timeUnit}`;\n            else if (this.timeValue < minTimeValue)\n                this.errorText = this.translations\n                    ? this.translations.ATUI.TIME.VALIDATION.MIN_NUMBER.replace(\n                          '{min}',\n                          `${maxTimeValue} ${this.timeUnit}`,\n                      )\n                    : `Please enter a value larger than ${minTimeValue} ${this.timeUnit}`;\n            else this.errorText = '';\n            if (this.errorText && this.custom_error_message) {\n                this.secondaryErrorText = this.custom_error_message;\n            }\n        }\n    }\n\n    updateSelectedRange(value: TimeWithUnit): void {\n        this.timeUnit = value.unit;\n        this.timeValue = value.value;\n        this.selectedTime = value;\n    }\n\n    getRelativeDate(): DateRange {\n        if (typeof this.selectedTime === 'object') {\n            return TimeDateUtil.getRelativeDateRange(this.selectedTime);\n        }\n    }\n\n    clearSelection(): void {\n        if (typeof this.initial_selected_time === 'object') {\n            this.timeValue = this.initial_selected_time.value;\n            this.timeUnit = this.initial_selected_time.unit;\n        } else {\n            this.timeValue = null;\n            this.timeUnit = TimeExtraOptions.ALL;\n        }\n    }\n\n    /**\n     * Emitted when the user cancels the time selection\n     */\n    @Event() atuiCancel: EventEmitter<null>;\n    /**\n     * Emitted when the user submits the time selection\n     */\n    @Event() atuiSubmit: EventEmitter<TimeWithUnit | TimeRangeDisplay.ALL>;\n\n    handleCancel(): void {\n        this.atuiCancel.emit();\n    }\n\n    handleSubmit(): void {\n        if (this.errorText === '') {\n            this.atuiSubmit.emit(this.selectedTime);\n        }\n    }\n\n    handleSelectChange(event: CustomEvent): void {\n        const timeTranslationObject = this.translations.ATUI.TIME;\n        const newValue = event.detail;\n        this.timeUnit = (\n            this.translations\n                ? Object.keys(timeTranslationObject).find(\n                      (key) => timeTranslationObject[key] === newValue,\n                  )\n                : newValue\n        ) as TimeUnit;\n    }\n\n    render() {\n        return (\n            <div\n                class=\"w-panel-sm flex flex-col gap-16 border border-gray-300\"\n                onKeyUp={(event) =>\n                    (event.key === 'Enter' || event.key === ' ') &&\n                    this.handleSubmit()\n                }\n                tabindex={0}\n            >\n                <div class=\"flex flex-col gap-8 p-12\">\n                    <h5 class=\"text-h5 text-dark font-medium\">\n                        {this.translations.ATUI.TIME.SELECT_RELATIVE_TIME}\n                    </h5>\n                    <div class=\"flex flex-col gap-8\">\n                        <at-input-numeric\n                            value={this.timeValue}\n                            onAtuiChange={(event) =>\n                                (this.timeValue = event.detail as number)\n                            }\n                        ></at-input-numeric>\n                        <at-select\n                            class=\"flex-fill\"\n                            value={this.translations.ATUI.TIME[this.timeUnit]}\n                            options={\n                                this.dropdownOptions\n                                    ? this.dropdownOptions.map(\n                                          (option) =>\n                                              this.translations.ATUI.TIME[\n                                                  option\n                                              ],\n                                      )\n                                    : null\n                            }\n                            onAtuiChange={(event) =>\n                                this.handleSelectChange(event)\n                            }\n                        />\n                    </div>\n\n                    {this.errorText ? (\n                        <Fragment>\n                            <span\n                                class=\"text-error text-sm\"\n                                data-name=\"time-with-unit-error\"\n                            >\n                                {this.errorText}\n                            </span>\n                            {this.secondaryErrorText && (\n                                <span\n                                    class=\"text-error text-sm\"\n                                    data-name=\"time-with-unit-error-secondary\"\n                                >\n                                    {this.secondaryErrorText}\n                                </span>\n                            )}\n                        </Fragment>\n                    ) : this.selectedTime !== TimeRangeDisplay.ALL ? (\n                        this.timeValue &&\n                        this.selectedTime?.unit && (\n                            <span class=\"text-med text-sm font-normal\">\n                                {this.startDate.toLocaleString()} ⁠— NOW\n                            </span>\n                        )\n                    ) : (\n                        this.selectedTime === TimeRangeDisplay.ALL && (\n                            <span class=\"text-med text-sm font-normal\">\n                                {this.translations.ATUI.TIME.ALL_TIME_LABEL}\n                            </span>\n                        )\n                    )}\n                </div>\n                {this.common_options && (\n                    <div class=\"flex flex-col gap-8 px-12\">\n                        <h5 class=\"text-h5 text-dark font-medium\">\n                            {this.translations.ATUI.TIME.COMMONLY_USED}\n                        </h5>\n                        <div\n                            class=\"columns-2\"\n                            data-name=\"time-with-unit-common-options\"\n                        >\n                            {this.common_options &&\n                                this.common_options.map((timerange) => (\n                                    <div\n                                        onClick={() =>\n                                            this.updateSelectedRange(timerange)\n                                        }\n                                        onKeyDown={(event) => {\n                                            event.stopPropagation();\n                                            if (\n                                                event.key === 'Enter' ||\n                                                event.key === ' '\n                                            )\n                                                this.updateSelectedRange(\n                                                    timerange,\n                                                );\n                                        }}\n                                        tabindex={0}\n                                        class={`${this.selectedTime !== TimeRangeDisplay.ALL && this.selectedTime?.value === timerange.value && this.selectedTime?.unit === timerange.unit ? 'bg-active-light px-4' : ''} cursor-pointer`}\n                                    >\n                                        <small>\n                                            {this.translations.ATUI.TIME.LAST}{' '}\n                                            {timerange.value}{' '}\n                                            {\n                                                this.translations.ATUI.TIME[\n                                                    timerange.unit\n                                                ]\n                                            }\n                                        </small>\n                                    </div>\n                                ))}\n                        </div>\n                    </div>\n                )}\n                <footer class=\"flex justify-between p-8\">\n                    <at-button\n                        type=\"secondaryOutline\"\n                        data-name=\"clear\"\n                        label={this.translations.ATUI.RESET}\n                        onAtuiClick={() => this.clearSelection()}\n                    ></at-button>\n\n                    <div class=\"flex gap-8\">\n                        <at-button\n                            type=\"secondaryOutline\"\n                            data-name=\"cancel\"\n                            label={this.translations.ATUI.CANCEL}\n                            onAtuiClick={() => this.handleCancel()}\n                        ></at-button>\n                        <at-button\n                            data-name=\"apply\"\n                            label={this.translations.ATUI.APPLY}\n                            onAtuiClick={() => this.handleSubmit()}\n                        ></at-button>\n                    </div>\n                </footer>\n            </div>\n        );\n    }\n}\n"],"version":3}