{"file":"p-DK5hrv2m.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/table-components/at-table-filters/at-table-filters.tsx"],"sourcesContent":["import {\n    Component,\n    h,\n    Prop,\n    Event,\n    EventEmitter,\n    Host,\n    State,\n    Element,\n} from '@stencil/core';\nimport { ColDef } from 'ag-grid-community';\nimport { fetchTranslations } from '../../../utils/translation';\n\n/**\n * @category Data Tables\n * @description A component for filtering table data. Provides a user-friendly interface for filtering data from tables.\n * @internal\n */\n\nexport interface FilterEvent {\n    id: string;\n    value: string;\n}\n\n@Component({\n    tag: 'at-table-filters',\n    shadow: false,\n})\nexport class AtTableFilters {\n    /**\n     * Column definitions used in your at-table\n     */\n    @Prop()\n    col_defs: ColDef[];\n\n    /**\n     * Currently selected columns and filter values\n     */\n    @Prop({ mutable: true })\n    selected: { id: string; value: string }[] = [];\n\n    @State() translations: any;\n    @Element() el: HTMLAtTableFiltersElement;\n\n    /**\n     * Emits id of column and filter value on change.\n     */\n    @Event() atChange: EventEmitter<FilterEvent[]>;\n\n    async componentWillLoad() {\n        this.translations = await fetchTranslations(\n            this.el as unknown as HTMLElement,\n        );\n    }\n\n    filterChangeHandler(event: CustomEvent, columnId: string) {\n        event.stopPropagation();\n        this.selected = this.selected.map((column) => {\n            if (column.id === columnId)\n                return { id: column.id, value: event.detail };\n            return column;\n        });\n        this.atChange.emit(this.selected);\n    }\n\n    clearFilters = () => {\n        this.selected = [];\n        this.atChange.emit([]);\n    };\n\n    clearSingleFilter = (columnId: string) => {\n        this.selected = this.selected.filter(\n            (column) => column.id !== columnId,\n        );\n        this.atChange.emit(this.selected.length ? this.selected : []);\n    };\n\n    render() {\n        return (\n            this.col_defs && (\n                <Host class=\"flex items-start gap-8\">\n                    <div class=\"bg-surface-0 flex min-h-[36px] flex-wrap items-end gap-8 rounded-md p-8\">\n                        {this.selected.map((column) => (\n                            <div class=\"flex items-center gap-2\">\n                                <at-input\n                                    class=\"w-input-sm\"\n                                    label={column.id}\n                                    prefix={column.id + ': '}\n                                    value={column.value}\n                                    onAtuiChange={(event: CustomEvent) =>\n                                        this.filterChangeHandler(\n                                            event,\n                                            column.id,\n                                        )\n                                    }\n                                >\n                                    <div slot=\"input-actions\">\n                                        <at-button\n                                            icon=\"cancel_outline\"\n                                            type=\"secondaryText\"\n                                            size=\"sm\"\n                                            onClick={() =>\n                                                this.clearSingleFilter(\n                                                    column.id,\n                                                )\n                                            }\n                                            data-name={`filter-clear-${column.id}`}\n                                        ></at-button>\n                                    </div>\n                                </at-input>\n                            </div>\n                        ))}\n\n                        {this.selected.length > 0 && (\n                            <at-button\n                                type=\"secondaryText\"\n                                label=\"Clear All\"\n                                onClick={this.clearFilters}\n                                data-name=\"filter-clear-all\"\n                            />\n                        )}\n                    </div>\n                </Host>\n            )\n        );\n    }\n}\n"],"version":3}