{"file":"p-CZW6O-PA.js","mappings":"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","names":["__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/atui-input-numeric/atui-input-numeric.scss?tag=atui-input-numeric","src/components/atui-input-numeric/atui-input-numeric.tsx"],"sourcesContent":["/* Hide default buttons: Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n}\n/* Hide default buttons: Firefox */\ninput[type='number'] {\n    -moz-appearance: textfield;\n}\n","import {\n    Component,\n    h,\n    Host,\n    Prop,\n    Element,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { cva } from 'class-variance-authority';\n\nconst containerVariants = cva('height-[36px] relative flex rounded-md', {\n    variants: {\n        showButtons: {\n            true: 'border border-solid border-med',\n            false: '',\n        },\n    },\n});\n\nconst inputVariants = cva(\n    'height-[36px] transition[background-color,color,box-shadow] w-full rounded-md p-8 text-right outline-0 duration-300 ease-in-out',\n    {\n        variants: {\n            disabled: {\n                false: 'bg-white',\n                true: 'pointer-events-none border-none bg-surface-1 !text-disabled',\n            },\n            readonly: {\n                false: 'bg-white',\n                true: 'border-none bg-surface-1 text-dark',\n            },\n            invalid: {\n                false: 'border-med focus:border-active-dark focus:ring-2 focus:ring-active-foreground/30',\n                true: 'border-error-base focus:ring-2 focus:ring-destructive-foreground/30',\n            },\n            activePlaceholder: {\n                false: 'placeholder:text-disabled',\n                true: 'placeholder:text-dark',\n            },\n            showButtons: {\n                true: '',\n                false: 'border border-solid',\n            },\n        },\n        compoundVariants: [\n            {\n                readonly: true,\n                disabled: true,\n                class: 'bg-surface-1 text-dark',\n            },\n            {\n                readonly: false,\n                disabled: false,\n                class: 'bg-surface-base text-dark',\n            },\n        ],\n        defaultVariants: {\n            disabled: false,\n            readonly: false,\n            invalid: false,\n            activePlaceholder: false,\n            showButtons: false,\n        },\n    },\n);\n\n/**\n * @category Form Controls\n * @description A numeric input component for entering numerical values.\n */\n\n@Component({\n    tag: 'atui-input-numeric',\n    styleUrl: 'atui-input-numeric.scss',\n    shadow: false,\n})\nexport class AtuiInputNumericComponent {\n    /**\n     * Label above the input container\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * Short description or validation hint if required\n     */\n    @Prop()\n    hint_text: string;\n\n    /**\n     * Optional info icon with detailed tooltip description\n     */\n    @Prop()\n    info_text: string;\n\n    /**\n     * Error text displayed when invalid is set\n     */\n    @Prop()\n    error_text: string;\n\n    /**\n     * Placeholder text to be shown when no input is passed\n     */\n    @Prop()\n    placeholder: string = '';\n\n    /**\n     * Adds a required * to the element\n     */\n    @Prop()\n    required: boolean;\n\n    /**\n     * Shows the error text\n     */\n    @Prop()\n    invalid: boolean;\n\n    /**\n     * Makes the input read only\n     */\n    @Prop()\n    readonly: boolean;\n\n    /**\n     * Disables interaction with the input\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    /**\n     * Min selectable value of the input.\n     */\n    @Prop()\n    min = 0;\n\n    /**\n     * Max selectable value of the input.\n     */\n    @Prop()\n    max = 100;\n\n    /**\n     * Interval between selections.\n     */\n    @Prop()\n    step?: number = 1;\n\n    /**\n     * Show buttons inside input or outside\n     */\n    @Prop()\n    show_buttons: boolean = true;\n\n    /**\n     * The value of the input\n     */\n    @Prop({ mutable: true })\n    value: number = 0;\n\n    inputEl: HTMLInputElement;\n    @Element() el: HTMLAtuiInputElement;\n\n    /**\n     * Emits an event containing the text string or number when the input's content is changed\n     */\n    @Event()\n    atuiChange: EventEmitter<string | number>;\n\n    private inputId = `input-${Math.random().toString(36).substring(2, 11)}`;\n\n    handleChange(event: Event): void {\n        event.stopPropagation();\n        this.value = Number((event.target as HTMLInputElement).value);\n        this.atuiChange.emit(this.value);\n    }\n\n    handleDecrease = () => {\n        if (this.value > this.min) {\n            this.value = Math.max(this.value - this.step, this.min);\n            this.atuiChange.emit(this.value);\n        }\n    };\n\n    handleIncrease = () => {\n        if (this.value < this.max) {\n            this.value = Math.min(this.value + this.step, this.max);\n            this.atuiChange.emit(this.value);\n        }\n    };\n\n    render() {\n        const containerClassname = containerVariants({\n            showButtons: this.show_buttons,\n        });\n        const classname = inputVariants({\n            invalid: this.invalid,\n            disabled: this.disabled,\n            readonly: this.readonly,\n            showButtons: this.show_buttons,\n        });\n\n        return (\n            <Host class=\"w-full\">\n                <div class=\"flex flex-col\">\n                    <slot name=\"label\" />\n                    {(this.label || this.required || this.info_text) && (\n                        <atui-form-label\n                            label={this.label}\n                            for={this.inputId}\n                            required={this.required && !this.readonly}\n                            info_text={this.info_text}\n                        />\n                    )}\n\n                    {this.hint_text && (\n                        <span\n                            class=\"mb-8 inline-block text-xs leading-tight text-light\"\n                            data-name=\"input-hint\"\n                        >\n                            {this.hint_text}\n                        </span>\n                    )}\n                </div>\n\n                <div class={containerClassname}>\n                    {this.show_buttons && !this.disabled && !this.readonly && (\n                        <atui-button\n                            class=\"rounded-l-md rounded-r-none border-r border-solid border-med\"\n                            type=\"secondaryText\"\n                            icon=\"remove\"\n                            onClick={this.handleDecrease}\n                            disabled={this.value <= this.min}\n                            aria-label=\"Subtract\"\n                            data-name=\"input-subtract\"\n                        ></atui-button>\n                    )}\n                    <input\n                        id={this.inputId}\n                        readonly={this.readonly ? true : undefined}\n                        disabled={this.disabled ? true : undefined}\n                        required={this.required}\n                        type=\"number\"\n                        placeholder={`${this.placeholder}`}\n                        onInput={(event) =>\n                            (this.value = Number(\n                                (event.target as HTMLInputElement).value,\n                            ))\n                        }\n                        onChange={(event) => this.handleChange(event)}\n                        value={this.value}\n                        ref={(el) => (this.inputEl = el)}\n                        class={classname}\n                        data-name=\"input\"\n                    />\n                    {this.show_buttons && !this.disabled && !this.readonly && (\n                        <atui-button\n                            class=\"rounded-l-none rounded-r-md border-l border-solid border-med\"\n                            type=\"secondaryText\"\n                            icon=\"add\"\n                            onClick={this.handleIncrease}\n                            disabled={this.value >= this.max}\n                            aria-label=\"Add\"\n                            data-name=\"input-add\"\n                        ></atui-button>\n                    )}\n                </div>\n\n                {this.error_text && this.invalid && (\n                    <span\n                        class=\"text-sm text-error\"\n                        data-name=\"input-error\"\n                    >\n                        {this.error_text}\n                    </span>\n                )}\n            </Host>\n        );\n    }\n}\n"],"version":3}