{"file":"at-tab-selector.js","mappings":"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","names":["AtTabSelector","__stencil_proxyCustomElement","HTMLElement"],"sources":["src/components/at-tab-selector/at-tab-selector.tsx"],"sourcesContent":["import {\n    Component,\n    EventEmitter,\n    h,\n    Host,\n    Prop,\n    Event,\n    Method,\n    Element,\n    Watch,\n} from '@stencil/core';\n\nexport interface Tab {\n    id: string;\n    title: string;\n}\n\nexport type Layout = 'vertical' | 'horizontal';\n\n/**\n * ### interface Tab\n * ```\n * {\n *   id: string;\n *   title: string;\n * }\n * ```\n * @category Navigation\n * @description A tab selector component for switching between different content sections. Provides keyboard navigation and accessible tab panel management.\n *\n * @slot nav-content - Content to be placed after the tabs\n */\n@Component({\n    tag: 'at-tab-selector',\n    shadow: false,\n})\nexport class AtTabSelector {\n    @Element() el: HTMLElement;\n\n    /**\n     * List of tabs the selector will have\n     */\n    @Prop()\n    tabs: Tab[] = [];\n\n    /**\n     * Layout of the tabs\n     */\n    @Prop()\n    layout: Layout = 'horizontal';\n\n    /**\n     * hide navigation when you want to provide custom controls\n     */\n    @Prop()\n    hide_nav: boolean = false;\n\n    /**\n     * Sets the current active tab\n     */\n    @Prop({ mutable: true })\n    active_tab?: string;\n\n    /**\n     * Emits the id of the tab when a new active_tab is set\n     */\n    @Event()\n    atuiChange: EventEmitter<string>;\n\n    componentDidLoad() {\n        this.updateIndicatorPosition();\n    }\n\n    componentDidUpdate() {\n        this.updateIndicatorPosition();\n    }\n\n    @Watch('active_tab')\n    handleActiveTabChange(newValue: string) {\n        const activeTab = this.tabs.find((tab) => tab.id === newValue);\n        if (activeTab) {\n            this.atuiChange.emit(activeTab.id);\n            requestAnimationFrame(() => {\n                this.updateIndicatorPosition();\n            });\n        }\n    }\n\n    private tabsetId = `tabset-${Math.random().toString(36).substring(2, 11)}`;\n\n    private get indicatorRef(): HTMLElement {\n        return this.el.querySelector(`#indicator-${this.tabsetId}`);\n    }\n\n    private get containerRef(): HTMLElement {\n        return this.el.querySelector(`#container-${this.tabsetId}`);\n    }\n\n    handleTabChange(id: string): void {\n        this.active_tab = id;\n    }\n\n    /**\n     * Gets the current active tab\n     * @returns The current active_tab value\n     */\n    @Method()\n    async getActiveTab(): Promise<string> {\n        return this.active_tab;\n    }\n\n    /**\n     * Sets the current active tab\n     * @param value - The tab id to set as active\n     */\n    @Method()\n    async setActiveTab(value: string): Promise<void> {\n        this.active_tab = value;\n    }\n\n    get tabOptions(): any {\n        if (this.tabs) {\n            return this.tabs.map((tab) => (\n                <at-tab\n                    tab_id={tab.id}\n                    tab_title={tab.title}\n                    layout={this.layout}\n                    is_active={this.active_tab === tab.id}\n                    onClick={() => this.handleTabChange(tab.id)}\n                ></at-tab>\n            ));\n        }\n    }\n\n    private updateIndicatorPosition() {\n        if (!this.indicatorRef || !this.containerRef) return;\n\n        const activeTab = this.el.querySelector('at-tab[data-active=\"true\"]');\n\n        if (activeTab) {\n            const containerRect = this.containerRef.getBoundingClientRect();\n            const buttonRect = activeTab.getBoundingClientRect();\n\n            this.indicatorRef.style.width = `${buttonRect.width - 16}px`;\n            this.indicatorRef.style.left = `${buttonRect.left - containerRect.left}px`;\n            this.indicatorRef.style.opacity = '1';\n        }\n    }\n\n    checkLayoutAndRender(): any {\n        if (this.layout === 'horizontal') {\n            return (\n                <at-layout\n                    class=\"flex flex-grow\"\n                    template=\"tabset\"\n                    data-name=\"navigation-top\"\n                >\n                    {!this.hide_nav && (\n                        <div slot=\"tabset-navigation\">\n                            <nav\n                                role=\"tablist\"\n                                class=\"relative flex flex-wrap border-b border-gray-200 text-center text-sm font-medium\"\n                                id={`container-${this.tabsetId}`}\n                            >\n                                {this.tabOptions}\n                                <slot name=\"tab-nav\" />\n\n                                <div\n                                    id={`indicator-${this.tabsetId}`}\n                                    class=\"bg-active-foreground pointer-events-none absolute bottom-0 z-10 mx-8 h-2 rounded-sm transition-[left] duration-150 ease-in-out\"\n                                    style={{\n                                        left: '0',\n                                        opacity: '0',\n                                    }}\n                                    aria-hidden=\"true\"\n                                    role=\"presentation\"\n                                />\n                            </nav>\n                        </div>\n                    )}\n\n                    <div\n                        role=\"tabpanel\"\n                        slot=\"tabset-content\"\n                    >\n                        <slot />\n                    </div>\n                </at-layout>\n            );\n        }\n\n        if (this.layout === 'vertical') {\n            return (\n                <at-layout\n                    class=\"flex flex-grow\"\n                    template=\"master-detail\"\n                    data-name=\"navigation-left\"\n                >\n                    <div slot=\"master\">\n                        <nav\n                            role=\"tablist\"\n                            class=\"flex flex-grow flex-col pr-16\"\n                        >\n                            {this.tabOptions}\n                            <slot name=\"tab-nav\" />\n                        </nav>\n                    </div>\n                    <div\n                        role=\"tabpanel\"\n                        slot=\"detail\"\n                        class=\"flex flex-grow flex-col\"\n                    >\n                        <slot />\n                    </div>\n                </at-layout>\n            );\n        }\n    }\n\n    render() {\n        return <Host>{this.checkLayoutAndRender()}</Host>;\n    }\n}\n\n/**\n * @category Form Controls\n * @description A tab selector component for switching between different content sections. Provides keyboard navigation and accessible tab panel management.\n */\n"],"version":3}