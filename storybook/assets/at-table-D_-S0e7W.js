import{j as e,M as i}from"./index-p1hv_aRk.js";import{useMDXComponents as o}from"./index-CqazegI6.js";import{ar as s}from"./MermaidMarkdown-RnLmyGXo.js";import"./iframe-7u2fPp9Q.js";import"./index-DGnb9v-d.js";import"./index-DrFu-skq.js";const r='# atui-table\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property                | Attribute               | Description                                                                                                                                                                                    | Type                               | Default     |\n| ----------------------- | ----------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- | ----------- |\n| `ag_grid`               | --                      | The AG Grid API                                                                                                                                                                                | `GridApi<any>`                     | `undefined` |\n| `auto_size_columns`     | `auto_size_columns`     | If true, enables automatic column resizing to fit available space. Columns will be sized proportionally based on their content and constraints. Fixed widths in column defs will be respected. | `boolean`                          | `true`      |\n| `col_defs`              | --                      | Column definitions for the table                                                                                                                                                               | `ColDef<any, any>[]`               | `undefined` |\n| `disable_auto_init`     | `disable_auto_init`     | If true, disables automatic grid initialization. When disabled, you must manually call createGrid(). Used when the table is controlled by a parent component.                                  | `boolean`                          | `false`     |\n| `page_size`             | `page_size`             | Default page size of the table if pagination is activated                                                                                                                                      | `number`                           | `10`        |\n| `table_data`            | --                      | Data provided to the table                                                                                                                                                                     | `{ items: any[]; total: number; }` | `undefined` |\n| `use_custom_pagination` | `use_custom_pagination` | Disables the default pagination provided by agGrid. When using custom pagination, the default sorting provided by ag grid will not work correctly.                                             | `boolean`                          | `false`     |\n| `use_custom_sorting`    | `use_custom_sorting`    | Disables the default sorting provided by agGrid.                                                                                                                                               | `boolean`                          | `false`     |\n\n\n## Events\n\n| Event          | Description                                                                                                                                                                                                                                   | Type                                                              |\n| -------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ----------------------------------------------------------------- |\n| `atSortChange` | Emits an event when a column\'s sorting state changes. Used to perform sorting outside of agGrid, when use_custom_sorting is set. Data in the table should be updated using the agGrid api: ```agGrid.setGridOption("rowData", yourNewData)``` | `CustomEvent<{ colId: string; sortDirection: "asc" \\| "desc"; }>` |\n\n\n## Methods\n\n### `createGrid() => Promise<GridApi>`\n\nMethod used to initialize the table.\n\n#### Returns\n\nType: `Promise<GridApi<any>>`\n\nThe [AG Grid API](https://www.ag-grid.com/javascript-data-grid/grid-api/)\n\n### `getGridApi() => Promise<GridApi>`\n\nGets the AG Grid API instance\n\n#### Returns\n\nType: `Promise<GridApi<any>>`\n\nThe AG Grid API\n\n\n## Dependencies\n\n### Used by\n\n - [at-search-table](../at-search-table)\n - [at-static-table](../at-static-table)\n\n### Graph\n```mermaid\ngraph TD;\n  at-search-table --> at-table\n  at-static-table --> at-table\n  style at-table fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n';function a(t){return e.jsxs(e.Fragment,{children:[e.jsx(i,{title:"Components/Table Components/Table/Table"}),`
`,e.jsx(s,{md:r})]})}function b(t={}){const{wrapper:n}={...o(),...t.components};return n?e.jsx(n,{...t,children:e.jsx(a,{...t})}):a()}export{b as default};
