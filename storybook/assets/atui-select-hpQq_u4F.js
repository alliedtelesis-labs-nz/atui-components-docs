import{j as e,M as a}from"./index-Wi5CerBz.js";import{useMDXComponents as o}from"./index-DB4YBde-.js";import{ar as l}from"./MermaidMarkdown-C2JGx6n1.js";import"./iframe-B6m8q1QM.js";import"./index-CfOrKyLd.js";import"./index-DrFu-skq.js";const r="# atui-select\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property      | Attribute     | Description                                                                                    | Type             | Default     |\n| ------------- | ------------- | ---------------------------------------------------------------------------------------------- | ---------------- | ----------- |\n| `autoclose`   | `autoclose`   | Close the menu when the user clicks within the menu panel. Default for single selection menus. | `boolean`        | `true`      |\n| `clearable`   | `clearable`   | Set the select input to be clearable. Only enabled on typeahead selects.                       | `boolean`        | `undefined` |\n| `disabled`    | `disabled`    | Disable user interaction. Disabled state should be applied via form control.                   | `boolean`        | `undefined` |\n| `error_text`  | `error_text`  | Error message visible when input is valid.                                                     | `string`         | `undefined` |\n| `hint_text`   | `hint_text`   | Short description or validation hint if required.                                              | `string`         | `undefined` |\n| `info_text`   | `info_text`   | Optional info icon with detailed tooltip description. Displayed at right of label.             | `string`         | `undefined` |\n| `invalid`     | `invalid`     | Set the input to appear valid.                                                                 | `boolean`        | `undefined` |\n| `label`       | `label`       | Label of the input.                                                                            | `string`         | `undefined` |\n| `options`     | `options`     | Sets the options in the dropdown                                                               | `SelectOption[]` | `undefined` |\n| `placeholder` | `placeholder` | Placeholder for the select.                                                                    | `string`         | `undefined` |\n| `readonly`    | `readonly`    | Set input to readonly mode, allows users to select any active values.                          | `boolean`        | `undefined` |\n| `required`    | `required`    | Indicated form field is required.                                                              | `boolean`        | `undefined` |\n| `typeahead`   | `typeahead`   | Set the select to appear as a typeahead input.                                                 | `boolean`        | `false`     |\n| `value`       | `value`       | Value of the currently selected option                                                         | `string`         | `undefined` |\n\n\n## Events\n\n| Event        | Description                                                | Type                  |\n| ------------ | ---------------------------------------------------------- | --------------------- |\n| `atuiChange` | Emits an event containing the selected value when changed. | `CustomEvent<string>` |\n\n\n## Dependencies\n\n### Used by\n\n - [atui-custom-time-range](../atui-time-range/atui-custom-time-range)\n - [atui-table-pagination](../table-components/atui-table-pagination)\n - [atui-time-with-unit](../atui-time-range/atui-time-with-unit)\n\n### Depends on\n\n- [atui-menu](../atui-menu)\n- [atui-form-label](../atui-form-label)\n- [atui-button](../atui-button)\n\n### Graph\n```mermaid\ngraph TD;\n  atui-select --> atui-menu\n  atui-select --> atui-form-label\n  atui-select --> atui-button\n  atui-form-label --> atui-tooltip\n  atui-button --> atui-loading\n  atui-custom-time-range --> atui-select\n  atui-table-pagination --> atui-select\n  atui-time-with-unit --> atui-select\n  style atui-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n";function i(t){return e.jsxs(e.Fragment,{children:[e.jsx(a,{title:"Components/Select"}),`
`,e.jsx(l,{md:r})]})}function h(t={}){const{wrapper:n}={...o(),...t.components};return n?e.jsx(n,{...t,children:e.jsx(i,{...t})}):i()}export{h as default};
