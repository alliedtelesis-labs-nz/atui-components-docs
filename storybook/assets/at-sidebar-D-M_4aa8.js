import{j as e,M as i}from"./index-DxU952T6.js";import{useMDXComponents as a}from"./index-D4Phm2fk.js";import{ar as s}from"./MermaidMarkdown-ByYcXj6n.js";import"./iframe-MLyO1VrO.js";import"./index-DGnb9v-d.js";import"./index-DrFu-skq.js";const r='# atui-side-panel\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property       | Attribute      | Description                                           | Type                                                                                     | Default  |\n| -------------- | -------------- | ----------------------------------------------------- | ---------------------------------------------------------------------------------------- | -------- |\n| `backdrop`     | `backdrop`     | Display a clickable backdrop when mode = over         | `boolean`                                                                                | `false`  |\n| `collapsible`  | `collapsible`  | Size of the sidebar when collapsed.                   | `"icon" \\| "none" \\| "offcanvas"`                                                        | `\'icon\'` |\n| `default_open` | `default_open` | Opens the sidebar by default when set                 | `boolean`                                                                                | `false`  |\n| `mode`         | `mode`         | How the sidenav interacts with main content when open | `"over" \\| "push"`                                                                       | `\'push\'` |\n| `side`         | `side`         | Position of the sidebar on the page                   | `"left" \\| "right"`                                                                      | `\'left\'` |\n| `width`        | `width`        | Width of the sidebar                                  | `"auto" \\| "menu" \\| "panel-lg" \\| "panel-md" \\| "panel-sm" \\| "panel-xl" \\| "panel-xs"` | `\'menu\'` |\n\n\n## Events\n\n| Event               | Description                                                                                          | Type               |\n| ------------------- | ---------------------------------------------------------------------------------------------------- | ------------------ |\n| `atuiSidebarChange` | Emits an even when the sidebar is toggled, with `event.detail` being true if the sidebar is now open | `CustomEvent<any>` |\n\n\n## Methods\n\n### `getIsOpen() => Promise<boolean>`\n\nGetter method for the open state of the sidebar\n\n#### Returns\n\nType: `Promise<boolean>`\n\nThe current open state of the sidebar\n\n### `toggleSidebar() => Promise<void>`\n\nToggles the sidebar\'s open state.\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                | Description                                                                |\n| ------------------- | -------------------------------------------------------------------------- |\n| `"page-content"`    | Content of the page                                                        |\n| `"sidebar-content"` | Content displayed in the sidebar (likely to be atui-sidebar-menu elements) |\n| `"sidebar-footer"`  | Footer displayed in the sidebar                                            |\n| `"sidebar-header"`  | Header of the sidebar (likely to be atui-sidebar-trigger)                  |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n';function o(n){return e.jsxs(e.Fragment,{children:[e.jsx(i,{title:"Components/Sidebar"}),`
`,e.jsx(s,{md:r})]})}function c(n={}){const{wrapper:t}={...a(),...n.components};return t?e.jsx(t,{...n,children:e.jsx(o,{...n})}):o()}export{c as default};
