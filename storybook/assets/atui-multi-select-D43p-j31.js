import{j as e,M as a}from"./index-C0ghflh6.js";import{useMDXComponents as o}from"./index-BuFyM0s4.js";import{ar as l}from"./MermaidMarkdown-BCazOFWD.js";import"./iframe-DVgUtOXT.js";import"./index-DGnb9v-d.js";import"./index-DrFu-skq.js";const r="# atui-multi-select\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property      | Attribute     | Description                                                                        | Type             | Default     |\n| ------------- | ------------- | ---------------------------------------------------------------------------------- | ---------------- | ----------- |\n| `clearable`   | `clearable`   | Set the select to be clearable.                                                    | `boolean`        | `undefined` |\n| `disabled`    | `disabled`    | Disable user interaction. Disabled state should be applied via form control.       | `boolean`        | `undefined` |\n| `error_text`  | `error_text`  | Error text for the select.                                                         | `string`         | `''`        |\n| `hint_text`   | `hint_text`   | Short description or validation hint if required.                                  | `string`         | `''`        |\n| `info_text`   | `info_text`   | Optional info icon with detailed tooltip description. Displayed at right of label. | `string`         | `''`        |\n| `invalid`     | `invalid`     | Set the select to appear invalid.                                                  | `boolean`        | `undefined` |\n| `label`       | `label`       | Label of the select.                                                               | `string`         | `''`        |\n| `options`     | `options`     | Options displayed in the dropdown menu.                                            | `SelectOption[]` | `undefined` |\n| `placeholder` | `placeholder` | Placeholder text for the select.                                                   | `string`         | `''`        |\n| `readonly`    | `readonly`    | Set input to readonly mode, allows users to select any active values.              | `boolean`        | `undefined` |\n| `required`    | `required`    | Indicated form field is required.                                                  | `boolean`        | `undefined` |\n| `typeahead`   | `typeahead`   | Set the select to enable typeahead search.                                         | `boolean`        | `undefined` |\n| `value`       | `value`       | The selected items                                                                 | `string[]`       | `[]`        |\n\n\n## Events\n\n| Event        | Description                                                                        | Type                    |\n| ------------ | ---------------------------------------------------------------------------------- | ----------------------- |\n| `atuiChange` | Emits an event containing a list of the selected items when the selection changes. | `CustomEvent<string[]>` |\n\n\n## Dependencies\n\n### Depends on\n\n- [atui-menu](../atui-menu)\n- [atui-form-label](../atui-form-label)\n- [atui-chip-list](../atui-chip-list)\n- [atui-button](../atui-button)\n\n### Graph\n```mermaid\ngraph TD;\n  atui-multi-select --> atui-menu\n  atui-multi-select --> atui-form-label\n  atui-multi-select --> atui-chip-list\n  atui-multi-select --> atui-button\n  atui-form-label --> atui-tooltip\n  atui-chip-list --> atui-badge\n  atui-chip-list --> atui-button\n  atui-button --> atui-loading\n  style atui-multi-select fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n";function i(t){return e.jsxs(e.Fragment,{children:[e.jsx(a,{title:"Components/Multi Select"}),`
`,e.jsx(l,{md:r})]})}function h(t={}){const{wrapper:n}={...o(),...t.components};return n?e.jsx(n,{...t,children:e.jsx(i,{...t})}):i()}export{h as default};
