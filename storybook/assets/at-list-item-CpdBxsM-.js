import{j as t,M as o}from"./index-DxU952T6.js";import{useMDXComponents as r}from"./index-D4Phm2fk.js";import{ar as s}from"./MermaidMarkdown-ByYcXj6n.js";import"./iframe-MLyO1VrO.js";import"./index-DGnb9v-d.js";import"./index-DrFu-skq.js";const m='# atui-list-item\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property      | Attribute     | Description                                                           | Type                           | Default     |\n| ------------- | ------------- | --------------------------------------------------------------------- | ------------------------------ | ----------- |\n| `border`      | `border`      | Border below the list item.                                           | `boolean`                      | `true`      |\n| `content`     | `content`     | Content of the list item placed at the right of the item.             | `string`                       | `undefined` |\n| `icon`        | `icon`        | Optional icon shown to the left of the list item - use mat-icon name. | `string`                       | `undefined` |\n| `item_prefix` | `item_prefix` | Optional prefix.                                                      | `string`                       | `undefined` |\n| `item_title`  | `item_title`  | Title of the list item.                                               | `string`                       | `undefined` |\n| `size`        | `size`        | Size of the list item.                                                | `"lg" \\| "md" \\| "sm" \\| "xs"` | `\'sm\'`      |\n| `subtitle`    | `subtitle`    | Optional subtitle of the list item.                                   | `string`                       | `undefined` |\n\n\n## Slots\n\n| Slot      | Description                     |\n| --------- | ------------------------------- |\n|           | Placed before the content       |\n| `"badge"` | Placed alongside the item_title |\n\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n';function i(e){return t.jsxs(t.Fragment,{children:[t.jsx(o,{title:"Components/List Item"}),`
`,t.jsx(s,{md:m})]})}function u(e={}){const{wrapper:n}={...r(),...e.components};return n?t.jsx(n,{...e,children:t.jsx(i,{...e})}):i()}export{u as default};
