import{j as e,M as i}from"./index-ChmaFPCR.js";import{useMDXComponents as o}from"./index-orqQb_IM.js";import{ar as r}from"./MermaidMarkdown-CchJh94D.js";import"./iframe-M1nTw5cZ.js";import"./index-CfOrKyLd.js";import"./index-DrFu-skq.js";const l='# atui-search-table\n\n<!-- Auto Generated Below -->\n\n\n## Properties\n\n| Property                | Attribute               | Description                                                                                                                                                                                    | Type                               | Default     |\n| ----------------------- | ----------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------- | ----------- |\n| `auto_size_columns`     | `auto_size_columns`     | If true, enables automatic column resizing to fit available space. Columns will be sized proportionally based on their content and constraints. Fixed widths in column defs will be respected. | `boolean`                          | `true`      |\n| `col_defs`              | `col_defs`              | Column definitions passed to atui-table component.                                                                                                                                             | `ColDef<any, any>[]`               | `undefined` |\n| `hide_column_manager`   | `hide_column_manager`   | If true the column manager will not be added                                                                                                                                                   | `boolean`                          | `undefined` |\n| `hide_dropdown_filters` | `hide_dropdown_filters` | If true the table dropdown filters will not be added                                                                                                                                           | `boolean`                          | `undefined` |\n| `hide_export_menu`      | `hide_export_menu`      | If true the table export menu will not be added                                                                                                                                                | `boolean`                          | `undefined` |\n| `label`                 | `label`                 | Label for the table, appears above the search input.                                                                                                                                           | `string`                           | `undefined` |\n| `page_size`             | `page_size`             | Default page size of the table                                                                                                                                                                 | `number`                           | `10`        |\n| `search_hint`           | `search_hint`           | Hint text displayed below the search label.                                                                                                                                                    | `string`                           | `undefined` |\n| `search_info_tooltip`   | `search_info_tooltip`   | Info text displayed in the search info tooltip.                                                                                                                                                | `string`                           | `undefined` |\n| `search_label`          | `search_label`          | Label for the search input.                                                                                                                                                                    | `string`                           | `undefined` |\n| `table_data`            | `table_data`            | Table data passed to atui-table component.                                                                                                                                                     | `{ items: any[]; total: number; }` | `undefined` |\n| `use_custom_pagination` | `use_custom_pagination` | If true, disables pagination on the table and shows all data at once. Useful for server-side pagination where you want to control pagination externally.                                       | `boolean`                          | `false`     |\n\n\n## Methods\n\n### `getDisplayedRows<T>() => Promise<IRowNode<T>[]>`\n\nReturns the **currently displayed row nodes** from the ag-Grid instance.\n\nThis asynchronous method retrieves an array of row nodes representing the rows currently visible\n(rendered) in the grid, after filtering, sorting, and other view-based operations.\n\n#### Returns\n\nType: `Promise<IRowNode<T>[]>`\n\nPromise resolving to an array of displayed row nodes.\n\n### `updateRowByIndex<T>(rowUpdates: RowUpdate<T>[], options?: RowUpdateOptions) => Promise<void>`\n\nUpdates the data of rows in the AG Grid based on their displayed row index.\n\nUse this method when you need to programmatically update one or more specific rows in the grid,\nidentified by their current displayed index. This is particularly useful when you want to perform\npartial updates (such as in-place cell editing, real-time updates, or upon receiving new data from a\nserver), and want to reflect these changes immediately in the UI with optional visual feedback.\n\n#### Parameters\n\n| Name         | Type                                         | Description                                                                                                                                                                                                                                                              |\n| ------------ | -------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `rowUpdates` | `RowUpdate<T>[]`                             | - An array of objects specifying the row indices and the data updates to apply. - `index`: The displayed index of the row to update. - `update`: An object containing the updated data for the row.                                                                      |\n| `options`    | `{ flash: boolean; forceRefresh: boolean; }` | - Optional settings for the update operation. - `flash`: Whether to visually flash the updated rows after the data change (improves user visibility). - `forceRefresh`: Whether to force refresh the row cells after updating (useful for advanced rendering scenarios). |\n\n#### Returns\n\nType: `Promise<void>`\n\n\n\n\n## Slots\n\n| Slot                     | Description                                    |\n| ------------------------ | ---------------------------------------------- |\n| `"actions"`              | Used to place actions related to table content |\n| `"multi-select-actions"` | Used to place actions related to row selection |\n\n\n## Dependencies\n\n### Depends on\n\n- [atui-table-actions](../atui-table-actions)\n- [atui-table-filter-menu](../atui-table-filter-menu)\n- [atui-search](../../atui-search)\n- [atui-table-filters](../atui-table-filters)\n- [atui-table-export-menu](../atui-table-export-menu)\n- [atui-column-manager](../atui-column-manager)\n- [atui-table](../atui-table)\n\n### Graph\n```mermaid\ngraph TD;\n  atui-search-table --> atui-table-actions\n  atui-search-table --> atui-table-filter-menu\n  atui-search-table --> atui-search\n  atui-search-table --> atui-table-filters\n  atui-search-table --> atui-table-export-menu\n  atui-search-table --> atui-column-manager\n  atui-search-table --> atui-table\n  atui-table-filter-menu --> atui-menu\n  atui-table-filter-menu --> atui-tooltip\n  atui-table-filter-menu --> atui-button\n  atui-table-filter-menu --> atui-checkbox-group\n  atui-button --> atui-loading\n  atui-checkbox-group --> atui-checkbox\n  atui-checkbox-group --> atui-form-label\n  atui-form-label --> atui-tooltip\n  atui-search --> atui-form-label\n  atui-search --> atui-button\n  atui-table-filters --> atui-input\n  atui-table-filters --> atui-button\n  atui-input --> atui-form-label\n  atui-input --> atui-button\n  atui-table-export-menu --> atui-menu\n  atui-table-export-menu --> atui-tooltip\n  atui-table-export-menu --> atui-button\n  atui-column-manager --> atui-menu\n  atui-column-manager --> atui-tooltip\n  atui-column-manager --> atui-button\n  atui-column-manager --> atui-checkbox-group\n  style atui-search-table fill:#f9f,stroke:#333,stroke-width:4px\n```\n\n----------------------------------------------\n\n*Built with [StencilJS](https://stenciljs.com/)*\n';function a(t){return e.jsxs(e.Fragment,{children:[e.jsx(i,{title:"Components/Search Table"}),`
`,e.jsx(r,{md:l})]})}function b(t={}){const{wrapper:n}={...o(),...t.components};return n?e.jsx(n,{...t,children:e.jsx(a,{...t})}):a()}export{b as default};
