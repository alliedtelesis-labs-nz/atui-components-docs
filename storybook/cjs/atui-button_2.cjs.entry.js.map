{"file":"atui-button.atui-loading.entry.cjs.js","mappings":";;;;;AA0BA,MAAM,QAAQ,GAAGA,WAAG,CAChB,4OAA4O,EAC5O;AACI,IAAA,QAAQ,EAAE;AACN,QAAA,QAAQ,EAAE;AACN,YAAA,KAAK,EAAE,IAAI;AACX,YAAA,IAAI,EAAE,8CAA8C;AACvD,SAAA;AACD,QAAA,IAAI,EAAE;AACF,YAAA,EAAE,EAAE,MAAM;AACV,YAAA,EAAE,EAAE,UAAU;AACd,YAAA,EAAE,EAAE,MAAM;AACb,SAAA;AACD,QAAA,IAAI,EAAE;AACF,YAAA,OAAO,EACH,uKAAuK;AAC3K,YAAA,cAAc,EACV,0NAA0N;AAC9N,YAAA,WAAW,EACP,4KAA4K;AAChL,YAAA,SAAS,EACL,yIAAyI;AAC7I,YAAA,gBAAgB,EACZ,+KAA+K;AACnL,YAAA,aAAa,EACT,+IAA+I;AACnJ,YAAA,WAAW,EACP,sLAAsL;AAC1L,YAAA,kBAAkB,EACd,kPAAkP;AACtP,YAAA,eAAe,EACX,gMAAgM;AACvM,SAAA;AACD,QAAA,QAAQ,EAAE;AACN,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,KAAK,EAAE,IAAI;AACd,SAAA;AACJ,KAAA;AACD,IAAA,gBAAgB,EAAE;AACd,QAAA;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,QAAQ,EAAE,KAAK;AACf,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,IAAI;AACV,YAAA,QAAQ,EAAE,IAAI;AACd,YAAA,KAAK,EAAE,WAAW;AACrB,SAAA;AACJ,KAAA;AACD,IAAA,eAAe,EAAE;AACb,QAAA,IAAI,EAAE,IAAI;AACV,QAAA,IAAI,EAAE,SAAS;AACf,QAAA,QAAQ,EAAE,IAAI;AACd,QAAA,QAAQ,EAAE,KAAK;AAClB,KAAA;AACJ,CAAA,CACJ;AAED,MAAM,sBAAsB,GAAGA,WAAG,CAC9B,yGAAyG,EACzG;AACI,IAAA,QAAQ,EAAE;AACN,QAAA,IAAI,EAAE;AACF,YAAA,OAAO,EACH,wDAAwD;AAC5D,YAAA,cAAc,EACV,0EAA0E;AAC9E,YAAA,WAAW,EACP,0EAA0E;AAC9E,YAAA,SAAS,EACL,0DAA0D;AAC9D,YAAA,gBAAgB,EACZ,0DAA0D;AAC9D,YAAA,aAAa,EACT,0DAA0D;AAC9D,YAAA,WAAW,EACP,sDAAsD;AAC1D,YAAA,kBAAkB,EACd,oFAAoF;AACxF,YAAA,eAAe,EACX,oFAAoF;AAC3F,SAAA;AACJ,KAAA;AACJ,CAAA,CACJ;AAED,MAAM,oBAAoB,GAAG;AACzB,IAAA,OAAO,EAAE,SAAwB;AACjC,IAAA,cAAc,EAAE,WAA0B;AAC1C,IAAA,WAAW,EAAE,WAA0B;AACvC,IAAA,SAAS,EAAE,WAA0B;AACrC,IAAA,gBAAgB,EAAE,WAA0B;AAC5C,IAAA,aAAa,EAAE,WAA0B;AACzC,IAAA,WAAW,EAAE,SAAwB;AACrC,IAAA,kBAAkB,EAAE,OAAsB;AAC1C,IAAA,eAAe,EAAE,OAAsB;CAC1C;MAYY,mBAAmB,GAAA,MAAA;AAJhC,IAAA,WAAA,CAAA,OAAA,EAAA;;;AAKI;;AAEG;AAEH,QAAA,IAAM,CAAA,MAAA,GAAY,KAAK;AAEvB;;AAEG;AAEH,QAAA,IAAI,CAAA,IAAA,GAAe,SAAS;AAE5B;;AAEG;AAEH,QAAA,IAAI,CAAA,IAAA,GAAe,IAAI;AAQvB;;AAEG;AAEH,QAAA,IAAQ,CAAA,QAAA,GAAY,KAAK;AAczB;;AAEG;AAEH,QAAA,IAAW,CAAA,WAAA,GAAG,KAAK;AAEnB;;AAEG;AAEH,QAAA,IAAgB,CAAA,gBAAA,GAAG,IAAI;AAWvB,QAAA,IAAc,CAAA,cAAA,GAAG,IAAI;AAuHxB;AArHG,IAAA,IAAI,aAAa,GAAA;AACb,QAAA,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;;IAGlC,sCAAsC,GAAA;QAC1C,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,cAAc,EAAE;AACzC,YAAA,IAAI,CAAC,WAAW,GAAG,KAAK;;;IAIxB,UAAU,GAAA;AACd,QAAA,IAAI,IAAI,CAAC,WAAW,EAAE;AAClB,YAAA,IAAI,CAAC,cAAc,GAAG,KAAK;YAC3B,UAAU,CAAC,MAAK;AACZ,gBAAA,IAAI,CAAC,cAAc,GAAG,IAAI;gBAC1B,IAAI,CAAC,sCAAsC,EAAE;AACjD,aAAC,EAAE,IAAI,CAAC,gBAAgB,CAAC;;aACtB;YACH,IAAI,CAAC,sCAAsC,EAAE;;;AAIrD,IAAA,WAAW,CAAC,KAAY,EAAA;AACpB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChB,YAAA,aAAa,EAAE,KAAK;AACpB,YAAA,aAAa,EAAE,aAAa;AAC/B,SAAA,CAAC;AACF,QAAA,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE;;;AAI/C,IAAA,aAAa,CAAC,KAAoB,EAAA;AAC9B,QAAA,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,KAAK,OAAO,EAAE;YAC5C,KAAK,CAAC,cAAc,EAAE;AACtB,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;AAChB,gBAAA,aAAa,EAAE,KAAK;AACpB,gBAAA,aAAa,EAAE,aAAa;gBAC5B,OAAO,EAAE,IAAI,CAAC,EAAE;AACnB,aAAA,CAAC;AACF,YAAA,IAAI,IAAI,CAAC,MAAM,EAAE;gBACb,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,aAAa,EAAE;;;;IAKnD,mBAAmB,GAAA;QACf,IAAI,CAAC,UAAU,EAAE;;IAGrB,MAAM,GAAA;QACF,MAAM,SAAS,GAAG,QAAQ,CAAC;YACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,IAAI,EAAE,IAAI,CAAC,IAAI;AACf,YAAA,QAAQ,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK;AACzB,SAAA,CAAC;QACF,MAAM,uBAAuB,GAAG,sBAAsB,CAAC;YACnD,IAAI,EAAE,IAAI,CAAC,IAAI;AAClB,SAAA,CAAC;AAEF,QAAA,QACIC,OAAC,CAAAC,UAAI,qDACD,KAAK,EAAE,SAAS,EAChB,IAAI,EAAC,QAAQ,EACb,QAAQ,EAAE,CAAC,EACX,SAAS,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAC/C,OAAO,EAAE,CAAC,KAAK,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAA,EAE3CD,OAAK,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,2DAA2D,EAAA,EACjE,IAAI,CAAC,WAAW,KACbA,OACI,CAAA,cAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAC,UAAU,EAChB,IAAI,EAAC,IAAI,EACT,IAAI,EAAE,IAAI,CAAC,aAAa,GAC1B,CACL,EAEDA,OAAM,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,MAAM,EAAG,CAAA,EACnB,IAAI,CAAC,IAAI,KACNA,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAE,CAAA,oDAAA,EAAuD,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,SAAS,EAAE,EAAA,WAAA,EAChG,aAAa,EAAA,EAEtB,IAAI,CAAC,IAAI,CACP,CACV,EAEA,IAAI,CAAC,KAAK,KACPA,OAAA,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EACI,KAAK,EAAE,CAAA,eAAA,EAAkB,IAAI,CAAC,WAAW,GAAG,WAAW,GAAG,SAAS,CAAE,CAAA,EAAA,WAAA,EAC3D,cAAc,EAAA,EAEvB,IAAI,CAAC,KAAK,CACR,CACV,EACDA,OAAQ,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,CAAA,EAERA,OAAM,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,IAAI,EAAC,YAAY,EAAG,CAAA,EACzB,IAAI,CAAC,UAAU,KACZA,OACI,CAAA,MAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,KAAK,EAAE,CAAA,oDAAA,EAAuD,IAAI,CAAC,WAAW,GAAG,eAAe,GAAG,SAAS,EAAE,EACpG,WAAA,EAAA,mBAAmB,EAE5B,EAAA,IAAI,CAAC,UAAU,CACb,CACV,CACC,EAENA,OAAA,CAAA,KAAA,EAAA,EAAA,GAAA,EAAA,0CAAA,EAAA,WAAA,EACc,iBAAiB,EAC3B,IAAI,EAAC,cAAc,EACnB,KAAK,EAAE,uBAAuB,EAAA,CAC3B,CACJ;;;;;AC/UnB,MAAM,cAAc,GAAG,mNAAmN;;ACM1O,MAAM,eAAe,GAAG;AACpB,IAAA,IAAI,EAAE;AACF,QAAA,OAAO,EAAE,cAAc;AACvB,QAAA,KAAK,EAAE,6BAA6B;AACpC,QAAA,SAAS,EAAE,yBAAyB;AACvC,KAAA;AACD,IAAA,IAAI,EAAE;AACF,QAAA,EAAE,EAAE,SAAS;AACb,QAAA,EAAE,EAAE,WAAW;AACf,QAAA,EAAE,EAAE,SAAS;AAChB,KAAA;AACD,IAAA,WAAW,EAAE;AACT,QAAA,EAAE,EAAE,kBAAkB;AACtB,QAAA,EAAE,EAAE,oBAAoB;AACxB,QAAA,EAAE,EAAE,oBAAoB;AAC3B,KAAA;CACJ;MAWY,oBAAoB,GAAA,MAAA;AALjC,IAAA,WAAA,CAAA,OAAA,EAAA;;AAMI;;AAEG;AAEH,QAAA,IAAO,CAAA,OAAA,GAAmB,SAAS;AAEnC;;AAEG;AAEH,QAAA,IAAI,CAAA,IAAA,GAAgB,SAAS;AAE7B;;AAEG;AAEH,QAAA,IAAI,CAAA,IAAA,GAAgB,IAAI;AAExB;;AAEG;AAEH,QAAA,IAAI,CAAA,IAAA,GAAW,SAAS;AA+D3B;AA7DG,IAAA,IAAI,WAAW,GAAA;QACX,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;AAG1C,IAAA,IAAI,WAAW,GAAA;QACX,OAAO,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;AAG1C,IAAA,IAAI,kBAAkB,GAAA;QAClB,OAAO,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC;;IAGzC,aAAa,GAAA;AACjB,QAAA,MAAM,WAAW,GACb,IAAI,CAAC,IAAI,KAAK;AACV,cAAE;AACF,cAAE,IAAI,CAAC,IAAI,KAAK;AACd,kBAAE;kBACA,2BAA2B;QAEvC,QACIA,OACI,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,CAAA,EAAG,WAAW,CAAA,CAAA,EAAI,IAAI,CAAC,kBAAkB,CAA8I,4IAAA,CAAA,EAC9L,IAAI,EAAC,QAAQ,gBACF,SAAS,EAAA,CACtB;;IAIF,YAAY,GAAA;AAChB,QAAA,QACIA,OACI,CAAA,KAAA,EAAA,EAAA,KAAK,EAAE,CAAyB,uBAAA,CAAA,EAChC,IAAI,EAAC,QAAQ,EAAA,YAAA,EACF,QAAQ,EAAA,EAEnBA,OACI,CAAA,MAAA,EAAA,EAAA,KAAK,EAAC,2EAA2E,EACjF,KAAK,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,EAC5B,CAAA,EACRA,OACI,CAAA,MAAA,EAAA,EAAA,KAAK,EAAC,2EAA2E,EACjF,KAAK,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9B,CAAA,EACRA,OAAA,CAAA,MAAA,EAAA,EACI,KAAK,EAAC,2EAA2E,EACjF,KAAK,EAAE,EAAE,cAAc,EAAE,OAAO,EAAE,EAC9B,CAAA,CACN;;IAId,MAAM,GAAA;AACF,QAAA,QAAQ,IAAI,CAAC,OAAO;AAChB,YAAA,KAAK,QAAQ;AACT,gBAAA,OAAO,IAAI,CAAC,YAAY,EAAE;AAC9B,YAAA,KAAK,SAAS;AACd,YAAA;AACI,gBAAA,OAAO,IAAI,CAAC,aAAa,EAAE;;;;;;;;;","names":["cva","h","Host"],"sources":["src/components/atui-button/atui-button.tsx","src/components/atui-loading/atui-loading.scss?tag=atui-loading","src/components/atui-loading/atui-loading.tsx"],"sourcesContent":["import {\n    Component,\n    Host,\n    Prop,\n    h,\n    Element,\n    EventEmitter,\n    Event,\n} from '@stencil/core';\nimport { LoadingType } from '../atui-loading/atui-loading';\nimport { cva } from 'class-variance-authority';\nimport { AtuiEvent } from '../../types/events';\n\nexport type ButtonType =\n    | 'primary'\n    | 'primaryOutline'\n    | 'primaryText'\n    | 'secondary'\n    | 'secondaryOutline'\n    | 'secondaryText'\n    | 'destructive'\n    | 'destructiveOutline'\n    | 'destructiveText';\n\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\nconst variants = cva(\n    'group relative box-border flex inline-flex cursor-pointer items-center justify-center gap-4 overflow-hidden whitespace-nowrap rounded-[0.3rem] text-button font-medium capitalize outline-none duration-150 ease-in-out focus:outline-none',\n    {\n        variants: {\n            disabled: {\n                false: null,\n                true: 'pointer-events-none opacity-30 grayscale-[1]',\n            },\n            size: {\n                sm: 'py-4',\n                md: 'py-[6px]',\n                lg: 'py-8',\n            },\n            type: {\n                primary:\n                    'bg-active-foreground text-impact focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-active-foreground/90 group-focus:bg-active-foreground/80',\n                primaryOutline:\n                    'border border-solid border-primary-foreground bg-transparent text-active-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-active-foreground/10 group-focus:bg-active-foreground/20',\n                primaryText:\n                    'bg-transparent text-active-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-active-foreground/10 group-focus:bg-active-foreground/20',\n                secondary:\n                    'bg-slate-600 text-impact focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-slate-700 group-focus:bg-slate-800',\n                secondaryOutline:\n                    'border border-solid border-dark bg-transparent text-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-slate-100 group-focus:bg-slate-200',\n                secondaryText:\n                    'bg-transparent text-foreground focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-slate-100 group-focus:bg-slate-200',\n                destructive:\n                    'bg-destructive-foreground text-impact focus-visible:ring-2 focus-visible:ring-active-foreground/30 group-hover:bg-destructive-foreground/90 group-focus:bg-destructive-foreground/80',\n                destructiveOutline:\n                    'border border-solid border-destructive-foreground bg-transparent text-destructive-foreground focus-visible:ring-2 focus-visible:ring-destructive-foreground/30 group-hover:bg-destructive-foreground/10 group-focus:bg-destructive-foreground/20',\n                destructiveText:\n                    'bg-transparent text-destructive-foreground focus-visible:ring-2 focus-visible:ring-destructive-foreground/30 group-hover:bg-destructive-foreground/10 group-focus:bg-destructive-foreground/20',\n            },\n            hasLabel: {\n                true: null,\n                false: null,\n            },\n        },\n        compoundVariants: [\n            {\n                size: 'sm',\n                hasLabel: false,\n                class: 'px-4',\n            },\n            {\n                size: 'sm',\n                hasLabel: true,\n                class: 'px-8',\n            },\n            {\n                size: 'md',\n                hasLabel: false,\n                class: 'px-[6px]',\n            },\n            {\n                size: 'md',\n                hasLabel: true,\n                class: 'px-8',\n            },\n            {\n                size: 'lg',\n                hasLabel: false,\n                class: 'px-8',\n            },\n            {\n                size: 'lg',\n                hasLabel: true,\n                class: 'px-[12px]',\n            },\n        ],\n        defaultVariants: {\n            size: 'lg',\n            type: 'primary',\n            hasLabel: true,\n            disabled: false,\n        },\n    },\n);\n\nconst focusIndicatorVariants = cva(\n    'pointer-events-none absolute left-0 top-0 z-10 h-full w-full transition-colors duration-300 ease-in-out',\n    {\n        variants: {\n            type: {\n                primary:\n                    'group-hover:bg-blue-900/30 group-active:bg-blue-900/70',\n                primaryOutline:\n                    'group-hover:bg-active-foreground/10 group-active:bg-active-foreground/20',\n                primaryText:\n                    'group-hover:bg-active-foreground/10 group-active:bg-active-foreground/20',\n                secondary:\n                    'group-hover:bg-slate-900/10 group-active:bg-slate-900/20',\n                secondaryOutline:\n                    'group-hover:bg-slate-500/10 group-active:bg-slate-500/20',\n                secondaryText:\n                    'group-hover:bg-slate-500/10 group-active:bg-slate-500/20',\n                destructive:\n                    'group-hover:bg-red-900/30 group-active:bg-red-900/70',\n                destructiveOutline:\n                    'group-hover:bg-destructive-foreground/10 group-active:bg-destructive-foreground/20',\n                destructiveText:\n                    'group-hover:bg-destructive-foreground/10 group-active:bg-destructive-foreground/20',\n            },\n        },\n    },\n);\n\nconst spinnerColourPerType = {\n    primary: 'default' as LoadingType,\n    primaryOutline: 'secondary' as LoadingType,\n    primaryText: 'secondary' as LoadingType,\n    secondary: 'secondary' as LoadingType,\n    secondaryOutline: 'secondary' as LoadingType,\n    secondaryText: 'secondary' as LoadingType,\n    destructive: 'default' as LoadingType,\n    destructiveOutline: 'error' as LoadingType,\n    destructiveText: 'error' as LoadingType,\n};\n\n/**\n * @category Actions\n * @description A versatile button component for user interactions with multiple styling variants, sizes, and loading states. Supports icons, custom content through slots, and accessibility features.\n *\n * @slot - Placed after the label, but before the icon_right. Can be used as a replacement for the label prop.\n */\n@Component({\n    tag: 'atui-button',\n    shadow: false,\n})\nexport class AtuiButtonComponent {\n    /**\n     * If set, will request submit from the closest form element when clicked\n     */\n    @Prop()\n    submit: boolean = false;\n\n    /**\n     * Styling of the button\n     */\n    @Prop()\n    type: ButtonType = 'primary';\n\n    /**\n     * Size of the button\n     */\n    @Prop()\n    size: ButtonSize = 'lg';\n\n    /**\n     * Label to be displayed within the button\n     */\n    @Prop()\n    label: string;\n\n    /**\n     * When set the button's styling will change and will no longer be interactive\n     */\n    @Prop()\n    disabled: boolean = false;\n\n    /**\n     * Material icon to be displayed before the label within the button\n     */\n    @Prop()\n    icon?: string;\n\n    /**\n     * Material icon to be displayed after the label within the button\n     */\n    @Prop()\n    icon_after?: string;\n\n    /**\n     * When set, will display a loading spinner inside the button and hide all labels & icons\n     */\n    @Prop()\n    in_progress = false;\n\n    /**\n     * Delay period on spinner\n     */\n    @Prop()\n    spinner_delay_ms = 1000;\n\n    @Element()\n    el: HTMLAtuiButtonElement;\n\n    /**\n     * Emits when the button is clicked\n     */\n    @Event()\n    atuiClick: EventEmitter<AtuiEvent>;\n\n    canHideSpinner = true;\n\n    get spinnerColour(): LoadingType {\n        return spinnerColourPerType[this.type];\n    }\n\n    private hideSpinnerIfAfterMinimumDisplayPeriod(): void {\n        if (this.in_progress && this.canHideSpinner) {\n            this.in_progress = false;\n        }\n    }\n\n    private setSpinner(): void {\n        if (this.in_progress) {\n            this.canHideSpinner = false;\n            setTimeout(() => {\n                this.canHideSpinner = true;\n                this.hideSpinnerIfAfterMinimumDisplayPeriod();\n            }, this.spinner_delay_ms);\n        } else {\n            this.hideSpinnerIfAfterMinimumDisplayPeriod();\n        }\n    }\n\n    handleClick(event: Event): void {\n        this.atuiClick.emit({\n            originalEvent: event,\n            componentType: 'atui-button',\n        });\n        if (this.submit) {\n            this.el.closest('form').requestSubmit();\n        }\n    }\n\n    handleKeyDown(event: KeyboardEvent): void {\n        if (event.key === ' ' || event.key === 'Enter') {\n            event.preventDefault();\n            this.atuiClick.emit({\n                originalEvent: event,\n                componentType: 'atui-button',\n                element: this.el,\n            });\n            if (this.submit) {\n                this.el.closest('form').requestSubmit();\n            }\n        }\n    }\n\n    componentWillUpdate(): void {\n        this.setSpinner();\n    }\n\n    render() {\n        const classname = variants({\n            disabled: this.disabled,\n            size: this.size,\n            type: this.type,\n            hasLabel: !!this.label,\n        });\n        const focusIndicatorClassname = focusIndicatorVariants({\n            type: this.type,\n        });\n\n        return (\n            <Host\n                class={classname}\n                role=\"button\"\n                tabIndex={0}\n                onKeyDown={(event) => this.handleKeyDown(event)}\n                onClick={(event) => this.handleClick(event)}\n            >\n                <div class=\"z-20 flex h-full w-full items-center justify-center gap-4\">\n                    {this.in_progress && (\n                        <atui-loading\n                            class=\"absolute\"\n                            size=\"sm\"\n                            type={this.spinnerColour}\n                        />\n                    )}\n\n                    <slot name=\"icon\" />\n                    {this.icon && (\n                        <span\n                            class={`material-icons h-16 w-16 text-[16px] leading-[16px] ${this.in_progress ? 'invisible' : 'visible'}`}\n                            data-name=\"button-icon\"\n                        >\n                            {this.icon}\n                        </span>\n                    )}\n\n                    {this.label && (\n                        <span\n                            class={`leading-[16px] ${this.in_progress ? 'invisible' : 'visible'}`}\n                            data-name=\"button-label\"\n                        >\n                            {this.label}\n                        </span>\n                    )}\n                    <slot />\n\n                    <slot name=\"icon_after\" />\n                    {this.icon_after && (\n                        <span\n                            class={`material-icons h-16 w-16 text-[16px] leading-[16px] ${this.in_progress ? 'invisible w-0' : 'visible'}`}\n                            data-name=\"button-icon-right\"\n                        >\n                            {this.icon_after}\n                        </span>\n                    )}\n                </div>\n\n                <div\n                    data-name=\"focus-indicator\"\n                    role=\"presentation\"\n                    class={focusIndicatorClassname}\n                ></div>\n            </Host>\n        );\n    }\n}\n","@keyframes bounce-dots {\n    0%,\n    80%,\n    100% {\n        transform: scale(0);\n        opacity: 0.5;\n    }\n    40% {\n        transform: scale(1);\n        opacity: 1;\n    }\n}\n\n@keyframes typing {\n    0%,\n    60%,\n    100% {\n        transform: translateY(0);\n        opacity: 0.4;\n    }\n    30% {\n        transform: translateY(-10px);\n        opacity: 1;\n    }\n}\n","import { Component, h, Prop } from '@stencil/core';\n\nexport type LoadingVariant = 'spinner' | 'dots' | 'typing' | 'wave';\nexport type LoadingType = 'default' | 'error' | 'secondary';\nexport type LoadingSize = 'sm' | 'md' | 'lg';\n\nconst loadingVariants = {\n    type: {\n        default: 'text-primary',\n        error: 'text-destructive-foreground',\n        secondary: 'text-primary-foreground',\n    },\n    size: {\n        sm: 'text-sm',\n        md: 'text-base',\n        lg: 'text-lg',\n    },\n    spinnerSize: {\n        sm: 'h-16 w-16 border',\n        md: 'h-32 w-32 border-2',\n        lg: 'h-64 w-64 border-4',\n    },\n};\n\n/**\n * @category Feedback\n * @description A versatile loading component with multiple animation types including spinner, dots, typing, wave, and thinking indicators. Perfect for indicating ongoing processes or data fetching states across different contexts.\n */\n@Component({\n    tag: 'atui-loading',\n    styleUrl: 'atui-loading.scss',\n    shadow: false,\n})\nexport class AtuiLoadingComponent {\n    /**\n     * Type of loading animation to display\n     */\n    @Prop()\n    variant: LoadingVariant = 'spinner';\n\n    /**\n     * Visual type/color of the loading indicator\n     */\n    @Prop()\n    type: LoadingType = 'default';\n\n    /**\n     * Size of the loading indicator\n     */\n    @Prop()\n    size: LoadingSize = 'md';\n\n    /**\n     * Custom text to display with text-based animations\n     */\n    @Prop()\n    text: string = 'Loading';\n\n    get typeClasses() {\n        return loadingVariants.type[this.type];\n    }\n\n    get sizeClasses() {\n        return loadingVariants.size[this.size];\n    }\n\n    get spinnerSizeClasses() {\n        return loadingVariants.spinnerSize[this.size];\n    }\n\n    private renderSpinner() {\n        const borderColor =\n            this.type === 'default'\n                ? 'border-primary'\n                : this.type === 'error'\n                  ? 'border-destructive-foreground'\n                  : 'border-primary-foreground';\n\n        return (\n            <div\n                class={`${borderColor} ${this.spinnerSizeClasses} inline-block animate-spin rounded-full border-solid border-e-transparent align-[-0.125em] motion-reduce:animate-[spin_1.5s_linear_infinite]`}\n                role=\"status\"\n                aria-label=\"Loading\"\n            />\n        );\n    }\n\n    private renderTyping() {\n        return (\n            <div\n                class={`flex items-center gap-4`}\n                role=\"status\"\n                aria-label=\"Typing\"\n            >\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-red-500\"\n                    style={{ animationDelay: '0ms' }}\n                ></span>\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-red-500\"\n                    style={{ animationDelay: '250ms' }}\n                ></span>\n                <span\n                    class=\"inline-block h-4 w-4 animate-[typing_1s_infinite] rounded-full bg-red-500\"\n                    style={{ animationDelay: '500ms' }}\n                ></span>\n            </div>\n        );\n    }\n\n    render() {\n        switch (this.variant) {\n            case 'typing':\n                return this.renderTyping();\n            case 'spinner':\n            default:\n                return this.renderSpinner();\n        }\n    }\n}\n"],"version":3}